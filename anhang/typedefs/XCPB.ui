!iflang [english]

!begin_node XCPB

!begin_verbatim
typedef struct
{
    int16_t       handle;
    int16_t       booting;
    int16_t       reserved;
    int16_t       SkipRshFix;
    void          *reserve1;
    void          *reserve2;
    void cdecl    (*rsh_fix)      ( int num_objs, int num_frstr,
                                    int num_frimg,
                                    int num_tree, OBJECT *rs_object,
                                    TEDINFO *rs_tedinfo,
                                    char *rs_strings[],
                                    ICONBLK *rs_iconblk, BITBLK *rs_bitblk,
                                    long *rs_frstr, long *rs_frimg,
                                    long *rs_trindex,
                                    struct foobar *rs_imdope );
    void cdecl    (*rsh_obfix)    ( OBJECT *tree, int curob );
    int16_t cdecl (*Popup)        ( char *items[], int num_items,
                                    int default_item,
                                    int font_size, GRECT *button,
                                    GRECT *world );
    void cdecl    (*Sl_size)      ( OBJECT *tree, int base, int slider,
                                    int num_items,
                                    int visible, int direction,
                                    int min_size );
    void cdecl    (*Sl_x)         ( OBJECT *tree, int base, int slider,
                                    int value,
                                    int num_min, int num_max,
                                    void (*foo)() );
    void cdecl    (*Sl_y)         ( OBJECT *tree, int base, int slider,
                                    int value, int num_min, int num_max,
                                    void (*foo)() );
    void cdecl    (*Sl_arrow)     ( OBJECT *tree, int base, int slider,
                                    int obj, int inc, int min, int max,
                                    int *numvar, int direction,
                                    void (*foo)() );
    void cdecl    (*Sl_dragx)     ( OBJECT *tree, int base, int slider,
                                    int min, int max, int *numvar,
                                    void (*foo)() );
    void cdecl    (*Sl_dragy)     ( OBJECT *tree, int base, int slider,
                                    int min, int max, int *numvar,
                                    void (*foo)() );
    int16_t cdecl (*Xform_do)     ( OBJECT *tree, int start_field,
                                    int puntmsg[] );
    GRECT * cdecl (*GetFirstRect) ( GRECT *prect );
    GRECT * cdecl (*GetNextRect)  ( void );
    void cdecl    (*Set_Evnt_Mask)( int mask, MOBLK *m1, MOBLK *m2,
                                    long time );
    int16_t cdecl (*XGen_Alert)   ( int id );
    int16_t cdecl (*CPX_Save)     ( void *ptr, long num );
    void * cdecl  (*Get_Buffer)   ( void );
    int16_t cdecl (*getcookie)    ( long cookie, long *p_value );
    int16_t       Country_Code;
    void cdecl    (*MFsave)       ( int saveit, MFORM *mf );
} XCPB;
!end_verbatim

See also:
cpx_init ~  XCONTROL
!end_node

!else

!begin_node XCPB

!begin_verbatim
typedef struct
{
    int16_t       handle;
    int16_t       booting;
    int16_t       reserved;
    int16_t       SkipRshFix;
    void          *reserve1;
    void          *reserve2;
    void cdecl    (*rsh_fix)      ( int num_objs, int num_frstr,
                                    int num_frimg,
                                    int num_tree, OBJECT *rs_object,
                                    TEDINFO *rs_tedinfo,
                                    char *rs_strings[],
                                    ICONBLK *rs_iconblk,
                                    BITBLK *rs_bitblk,
                                    long *rs_frstr, long *rs_frimg,
                                    long *rs_trindex,
                                    struct foobar *rs_imdope );
    void cdecl    (*rsh_obfix)    ( OBJECT *tree, int curob );
    int16_t cdecl (*Popup)        ( char *items[], int num_items,
                                    int default_item,
                                    int font_size, GRECT *button,
                                    GRECT *world );
    void cdecl    (*Sl_size)      ( OBJECT *tree, int base, int slider,
                                    int num_items,
                                    int visible, int direction,
                                    int min_size );
    void cdecl    (*Sl_x)         ( OBJECT *tree, int base, int slider,
                                    int value,
                                    int num_min, int num_max,
                                    void (*foo)() );
    void cdecl    (*Sl_y)         ( OBJECT *tree, int base, int slider,
                                    int value,
                                    int num_min, int num_max,
                                    void (*foo)() );
    void cdecl    (*Sl_arrow)     ( OBJECT *tree, int base, int slider,
                                    int obj, int inc, int min, int max,
                                    int *numvar,
                                    int direction, void (*foo)() );
    void cdecl    (*Sl_dragx)     ( OBJECT *tree, int base, int slider,
                                    int min, int max, int *numvar,
                                    void (*foo)() );
    void cdecl    (*Sl_dragy)     ( OBJECT *tree, int base, int slider,
                                    int min, int max, int *numvar,
                                    void (*foo)() );
    int16_t cdecl (*Xform_do)     ( OBJECT *tree, int start_field,
                                    int puntmsg[] );
    GRECT * cdecl (*GetFirstRect) ( GRECT *prect );
    GRECT * cdecl (*GetNextRect)  ( void );
    void cdecl    (*Set_Evnt_Mask)( int mask, MOBLK *m1, MOBLK *m2,
                                    long time );
    int16_t cdecl (*XGen_Alert)   ( int id );
    int16_t cdecl (*CPX_Save)     ( void *ptr, long num );
    void * cdecl  (*Get_Buffer)   ( void );
    int16_t cdecl (*getcookie)    ( long cookie, long *p_value );
    int16_t       Country_Code;
    void cdecl    (*MFsave)       ( int saveit, MFORM *mf );
} XCPB;
!end_verbatim

Querverweis:
cpx_init ~  XCONTROL
!end_node

!endif
