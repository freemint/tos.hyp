!iflang [english]

!begin_node XSSI protocol
!html_name proto_xssi
!label Protocol, XSSI

A major problem for the programmer of a screen saver is that many
applications know nothing about what is currently happening before
the user's eyes on the screen. Accordingly they continue to output
their information to the screen, even though actually it has now been
taken over by the screen saver. So that an application can be certain
of the state of the screen saver, and in some circumstances may even
influence it, there exists the so-called XSSI standard (where XSSI
stands for 'e(!B)X(!b)tended (!B)S(!b)creen(!B)S(!b)aver (!B)I(!b)nterface'), which was suggested
by Julian Reschke.

The value of the XSSI cookie is a pointer to the following structure:
!begin_verbatim
typedef struct
{
     LONG id;
     WORD version;
     WORD save_stat;
     WORD prg_stat;
     LONG vec_stat;
} INFOXSSI;
!end_verbatim
!begin_ilist [save_stat ]
!item [id]
Each screen saver enters its XBRA identifier as (!I)id.(!i)
!begin_table [l|l]
(!I)id(!i) !! screen saver
!hline
DAWN !! Before Dawn
BBLS !! BUBBLES
!end_table

!item [version]
The version number of the XSSI protocol is entered in
(!I)version.(!i) 'Before Dawn' at present uses the version number 0x101.

!item [save_stat]
An application can find out whether the saver is active
             at the time with (!I)save_stat.(!i) A value of 0 means that the
             saver is not active, a negative value means that it has kicked in.

!item [prg_stat]
With (!I)prg_stat(!i) an application can inform 'Before Dawn'
how it is to behave. (!I)prg_stat(!i) can take the following values:

prg_stat = 0	Save normally (!nl)
prg_stat = 1	Never save (!nl)
prg_stat = -1	Save immediately

!item [vec_stat]
(!I)vec_stat(!i) indicates which system vectors are monitored.
This value represents a bit-field. Its assignment is as follows:
!begin_table [l|l]
Bit !! System vector
!hline
0 !! Keyboard
1 !! Mouse
2 !! Joystick
3 !! MIDI
4 !! Modem 1
5 !! Modem 2
6 !! Serial 1
7 !! LAN port or Serial 2
8-14 !! Other vectors
15 !! Window events
!end_table
!end_ilist
!end_node

!else

!begin_node XSSI-Protokoll
!html_name proto_xssi
!label Protokoll, XSSI-Protokoll

Ein groûes Problem fÅr den Programmierer eines Bildschirmschoners ist es, daû viele Applikationen
nichts davon wissen, was gerade vor Ihren Augen auf dem Bildschirm vorgeht. Dementsprechend geben
sie Ihre Informationen weiterhin auf den Bildschirm aus, obwohl dort eigentlich jetzt der Bildschirmschoner
das Sagen hÑtte. Damit eine Applikation sicher den Status des Bildschirmschoners feststellen und
u.U. sogar beeinflussen kann, gibt es den sogenannten XSSI-Standard (XSSI steht fÅr "eXtended ScreenSaver
Interface"), der von Julian Reschke vorgeschlagen wurde.

Der Wert des XSSI-Cookies ist ein Zeiger auf die folgende Struktur:
!begin_verbatim
typedef struct
{
     LONG id;
     WORD version;
     WORD save_stat;
     WORD prg_stat;
     LONG vec_stat;
} INFOXSSI;
!end_verbatim
!begin_ilist [save_stat ]
!item [id]
Als (!I)id(!i) trÑgt jeder Bildschirmschoner seine XBRA-Kennung ein.
!begin_table [l|l]
(!I)id(!i) !! Bildschirmschoner
!hline
DAWN !! Before Dawn
BBLS !! BUBBLES
!end_table

!item [version]
In (!I)version(!i) ist die Versionsnummer des XSSI-Protokolls eingetragen. 'Before Dawn' verwendet 
im Moment die Versionsnummer $101.

!item [save_stat]
öber (!I)save_stat(!i) kann eine Applikation feststellen, ob gerade geschont wird. Ein Wert 
von 0 bedeutet, daû nicht geschont wird. Ein negativer Wert zeigt an, daû gerade geschont wird. 

!item [prg_stat]
Mit (!I)prg_stat(!i) kann eine Applikation 'Before Dawn' mitteilen, wie es sich verhalten soll. Dabei 
kann prg_stat die folgenden Werte annehmen: 

prg_stat = 0	normal schonen (!nl)
prg_stat = 1	niemals schonen. (!nl)
prg_stat = -1	sofort schonen

!item [vec_stat]
(!I)vec_stat(!i) zeigt an, welche Systemvektoren Åberwacht werden. Es handelt sich bei diesem Wert 
um ein Bitfeld. Die Belegung ist folgendermaûen:
!begin_table [l|l]
Bit !! Systemvektor
!hline
0 !! Tastatur
1 !! Maus
2 !! Joystick
3 !! Midi
4 !! Modem 1
5 !! Modem 2
6 !! Serial 1
7 !! LAN-Port bzw. Serial 2
8-14 !! sonstige Vektoren
15 !! Fenster-Events
!end_table
!end_ilist
!end_node

!endif
