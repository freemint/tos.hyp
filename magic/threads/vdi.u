!iflang [english]

!begin_node Threads and VDI calls

(!nolink [VDI]) calls are generally not as 'critical' as (!nolink [AES]) calls,
as reentrance problems are much rarer here.

The reason is due to the fact that a call of (!nolink [VDI]) functions does not
lead to task-switching as frequently as happens with (!nolink [AES]) calls, for
instance.

(!nolink [VDI]) calls however can be problematic in this respect whenever vector
fonts are accessed, as in that case one normally requires disk access;
these, as is generally known, are interruptible in (!nolink [MagiC]). In such a
situation a task-switch may happen. Which (!nolink [VDI]) commands individually
are interruptible (!I)cannot(!i) be answered here; if required, this should
be clarified with the NVDI developers, so that then reentrant library
functions would be required for only those functions.

See also: (!nl)
Threads and AES calls ~ Process functions ~ VDI bindings ~ Signals
!end_node

!else

!begin_node Threads und VDI-Aufrufe

VDI-Aufrufe sind in den meisten FÑllen nicht so kritisch wie AES-Aufrufe, da
hier seltener ein Reentranz-Problem auftritt. Der Grund ist darin zu sehen,
daû es bei Aufruf von (!nolink [VDI])-Funktionen nicht so hÑufig zu Taskwechseln kommt,
wie dies z.B. beim (!nolink [AES]) der Fall ist.

Problematisch sind (!nolink [VDI])-Aufrufe jedoch immer dann, wenn auf Vektorfonts
zugegriffen wird, da in diesen FÑllen i.d.R. Plattenzugriffe notwendig sind,
die in MagiC bekanntlich unterbrechbar sind. In einer solchen Situation kann
es also zu einem Task-Switching kommen. Welche (!nolink [VDI])-Befehle im einzelnen
unterbrechbar sind kann an dieser Stelle (!I)nicht(!i) beantwortet werden;
bei Bedarf ist dies mit den NVDI-Entwicklern abzuklÑren, so daû dann nur fÅr
diese Funktionen reentrante Bibliotheksfunktionen erforderlich wÑren.

Querverweis: (!nl)
Threads und AES-Aufrufe ~  Prozessfunktionen ~
VDI-Bindings            ~  Signale
!end_node

!endif
