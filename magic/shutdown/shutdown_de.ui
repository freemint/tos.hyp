!begin_node Allgemeines zum Shutdown
!html_name magic_shutdown

Unter einem Shutdown versteht man einen Mechanismus, der es erlaubt ein
System kontrolliert herunter zu fahren. In einer Multitasking-Umgebung ist
es nÑmlich eigentlich nicht mehr zulÑssig, den Rechner nach Gebrauch einfach
abzuschalten; auch ein RÅcksetzen per (!nolink [Reset-Taster]) sollte tabu sein.
Vielmehr muû sichergestellt werden, daû alle Programme korrekt beendet und
alle offenen Dateien korrekt geschlossen werden, bevor dem Computer der
Strom abgedreht wird. Wird dies nicht beachtet, kann es durchaus zu
Datenverlusten kommen.

Aus diesem Grund haben z.B. UNIX-Systeme oder der Apple Macintosh einen
(!nolink [Shutdown])-Mechanismus; ein solcher wurde auch von Atari im MultiTOS
eingefÅhrt und steht ebenfalls in MagiC (ab Version 3.0) zur VerfÅgung.

Aktiviert wird der (!nolink [Shutdown]) normalerweise Åber den MenÅeintrag
Datei/Ausschalten im Desktop, durch die Tastenkombination Ctrl-Alt-Del oder
durch einen Auflîsungswechsel. WÑhrend des (!nolink [Shutdown]) kînnen keine Programme
gestartet werden.

Querverweis:
Shutdown in MultiTOS ~ Shutdown in MagiC ~
(!link [Shutdown beim EmpfÑnger][Der Shutdown aus Sicht der Applikation]) ~
(!link [Shutdown beim Initiator][Der Shutdown aus Sicht des Initiators]) ~
shel_write



!begin_node Shutdown in MultiTOS

Unter MultiTOS mÅssen Programme folgendes tun, um den Shutdown Mechanismus
zu unterstÅtzen:

!begin_itemize
!item shel_write (mit doex = 9) ausfÅhren, um dem AES mitzuteilen, daû sie
      die Nachricht AP_TERM verstehen.
!item bei Empfang der (!nolink [AP_TERM])-Nachricht terminieren oder AP_TFAIL
      verschicken.
!end_itemize

(!B)Hinweis:(!b) MultiTOS schickt die (!nolink [AP_TERM])-Nachricht dabei nur an solche
Prozesse, die explizit (!nolink [AP_TERM]) verstehen. Da derzeit kaum Programme
existieren, die ein entsprechendes (!nolink [shel_write]) absetzen, wÅrde eine solche
Implementierung in (!nolink [MagiC]) nicht das gewÅnschte Ergebnis liefern. Daher wurde
ein anderes Verfahren gewÑhlt, bei dem die (!nolink [AP_TERM]) Nachricht an (!I)alle(!i)
laufenden Applikationen verschickt wird.

Querverweis:
Shutdown in MagiC      ~   shel_write ~
(!link [Shutdown beim EmpfÑnger][Der Shutdown aus Sicht der Applikation]) ~
(!link [Shutdown beim Initiator][Der Shutdown aus Sicht des Initiators])
!end_node



!begin_node Shutdown in MagiC

Unter MagiC funktioniert der Shutdown wie folgt: alle laufenden Programme
erhalten eine AP_TERM-Nachricht die signalisiert, daû sie sich beenden
sollen. Sind nach einer gewissen Zeit immer noch Programme im Speicher, so
gibt SHUTDOWN eine Fehlermeldung aus. In der Datei SHUTDOWN.INF kînnen
Programmnamen (ohne Suffix wie ".prg" oder ".app") angegeben werden, die
unkritisch sind und nicht zu einer Fehlermeldung durch (!nolink [SHUTDOWN]) fÅhren
sollen.

DarÅber hinaus sollten die folgenden Punkte beachtet werden:

!begin_itemize
!item Wenn das System Åber Ctrl-Alt-Del beenden werden soll muss darauf
      geachtet werden daû der Bildschirm nicht gesperrt ist, d.h. daû z.B.
      nicht gerade ein Programm eine Dialogbox oder Alertbox auf dem
      Bildschirm bearbeitet. Weiterhin muû eine geeignete Shell (MAGXDESK,
      Thing) geladen sein, d.h. es darf kein Programm im "single mode" oder
      im Modus "Shell nicht resident" (z.B. per Alt-(!nolink [Doppelklick])) geladen
      sein.
!item Ist der Bildschirm gesperrt, wird nur der Writeback-Daemon beendet,
      d.h. der Cache zurÅckgeschrieben. Erst nach Freigeben des Bildschirms
      (d.h. nach Schlieûen der Dialogbox oder Alertbox) kann der (!nolink [Shutdown])
      durchgefÅhrt werden.
!item Sollte das System derart abgestÅrzt sein, daû kein Shutdown mehr
      mîglich ist, sollte Ctrl-Alt-Del ein zweites Mal betÑtigt werden. Dann
      wird ein Warmstart durchgefÅhrt, ohne daû Programme beendet werden.
!item Ist der "single mode" aktiv oder die Shell nicht geladen, wird
      ebenfalls nur der (!nolink [Writeback-Daemon]) beendet und der Cache
      zurÅckgeschrieben. FÅr den vollstÑndigen (!nolink [Shutdown]) muû erst das
      laufende Programm beendet werden so daû die Shell wieder aktiv ist.
      Der (!nolink [Shutdown]) (!I)muss(!i) dann Åber den MenÅpunkt Datei/Ausschalten
      durchgefÅhrt werden.
!end_itemize

(!B)In (!nolink [MagiC]) 4 wurde der Shutdown Mechanismus wie folgt Åberarbeitet:(!b)
Das (!nolink [AES]) schickt jetzt eine (!nolink [SHUT_COMPLETED])-Nachricht
mit msg[3] = 0 (d.h.
'Shutdown erfolglos beendet') und msg[4] = -1 (ungÅltige ap_id), wenn nur
noch Programme im System sind, die nicht exlizit AP_TERM verstehen. Damit
bricht ein Programm, das nur die MultiTOS-Spezifikation beherrscht, den
(!nolink [Shutdown]) ab. SHUTDOWN.PRG dagegen wurde an die neue Spezifikation angepaût,
und funktioniert wie bisher, d.h. gibt den noch laufenden Programmen einen
Timeout und gibt dann die Namen aller unwilligen Applikationen aus.

DarÅber hinaus bekommt die Applikation #0 bei Ctrl-Alt-Del keine zufÑlligen
Daten mehr in msg[4,5,6,7] Åbergeben, sondern die folgende Nachricht:

!begin_verbatim
  msg[3]     = -1
  msg[4,6,7] =  0
  msg[5]     = AP_TERM
!end_verbatim

Querverweis: (!nl)
Shutdown in MultiTOS    ~  shel_write ~
(!link [Shutdown beim EmpfÑnger][Der Shutdown aus Sicht der Applikation]) ~
(!link [Shutdown beim Initiator][Der Shutdown aus Sicht des Initiators])
!end_node



!begin_node Der Shutdown aus Sicht der Applikation

ZunÑchst sei darauf hingewiesen, daû sich der Shutdown Mechanismus in
MultiTOS von dem in (!nolink [MagiC]) unterscheidet: Ataris MultiTOS verschickt eine
(!nolink [AP_TERM])-Nachricht nur an solche Applikationen, die dem AES
per (!nolink [shel_write])
(Opcode 9) explizit mitgeteilt haben, daû sie die (!nolink [AP_TERM])-Nachricht
verstehen; (!nolink [MagiC]) hingegen verschickt die Nachricht an alle aktiven
Applikationen.

Der Shutdown wird vom (!nolink [AES]) genau dann als erfolgreich angesehen, wenn sich
alle Programme, die explizit AP_TERM verstehen, beendet haben. Sollte eine
Applikation bekanntgeben daû sie sich nicht beenden kann, so wird der
Shutdown abgebrochen. Aus diesen GrÅnden hat jedes Programm, daû eine
(!nolink [AP_TERM]) Nachricht empfÑngt prinzipiell nur zwei Mîglichkeiten:

!begin_itemize !compressed
!item es beendet sich sofort
!item es macht den folgenden Aufruf
!begin_verbatim
msg[0] = AP_TFAIL;
msg[1] = err;
shel_write(10, 0, 0, (char *) msg, NULL);
!end_verbatim
      und informiert damit das (!nolink [AES]), daû der Vorgang mit dem Fehlercode err
      unterbrochen wurde. Die Applikation, die den (!nolink [Shutdown]) verursacht hat,
      bekommt die ap_id und den Fehlercode der unterbrechenden Applikation
      mitgeteilt.
!end_itemize

Reagiert die Applikation hingegen anders, d.h. ignoriert sie die (!nolink [AP_TERM])
Nachricht, so hÑngt das Verhalten des Systems davon ab, ob mitgeteilt wurde
daû die (!nolink [AP_TERM])-Nachricht verstanden wird. (!B)Im Klartext:(!b)

!begin_itemize
!item Versteht die Applikation (!I)explizit(!i) (!nolink [AP_TERM]), so geht das System
      davon aus, daû die Applikation z.Zt. keine Nachrichten empfangen kann.
      Der ShutDown wird nicht unterbrochen, sondern dauert solange, bis der
      Aufrufer (i.a. das Programm SHUTDOWN) den (!nolink [Shutdown])
      abbricht. (!nolink [SHUTDOWN])
      verwendet dazu einen Timeout von 3 Sekunden, d.h. wenn 3 Sekunden nach
      Beginn des Shutdown noch Programme aktiv sind, die (!nolink [AP_TERM]) verstehen,
      bricht das Programm den (!nolink [Shutdown])-Prozeû ab.
!item Versteht die Applikation (!I)nicht(!i) explizit AP_TERM, meldet das
      System dem Initiator des (!nolink [Shutdown]) (i.a. (!nolink [SHUTDOWN]).PRG) den
      erfolgreichen Abschluû des Shutdown-Vorgangs. Nur weil SHUTDOWN.PRG so
      nachsichtig mit alten Programmen ist, testet es, ob noch Applikationen
      aktiv sind, und gibt ggf. eine Meldung aus. Dabei kann man in
      (!nolink [SHUTDOWN.INF]) Programme angeben, die nicht zu einer Fehlermeldung
      fÅhren sollen, d.h. die nicht beendet zu werden brauchen.
!end_itemize

(!B)Hinweis:(!b) Wurde der Shutdown per Alternate-Control-Delete ausgelîst,
so bekommen zunÑchst nur der Writeback-Daemon und die Applikation mit ID 0
eine (!nolink [AP_TERM])-Nachricht. Als Absender ist dabei -1 eingetragen. Die
Applikation 0 (i.a. der Desktop) beendet sich dann und startet das
(!nolink [Shutdown])-Programm.

Querverweis:  (!nl)
(!link [Shutdown beim Initiator][Der Shutdown aus Sicht des Initiators])  ~
shel_write ~
Shutdown in MultiTOS ~ (!link [Shutdown in MagiC][Shutdown in MagiC])
!end_node



!begin_node Der Shutdown aus Sicht des Initiators

Shutdown und (!nolink [Auflîsungswechsel]) werden in (!nolink [MagiC]) von dem Programm
(!nolink [SHUTDOWN]) Åbernommen, das mit den folgenden Parametern aufgerufen wird:

!begin_verbatim
SHUTDOWN.PRG dev txt
!end_verbatim

Dabei ist (!I)dev(!i) = -1, wenn ein (!nolink [Shutdown]) (!I)ohne(!i) Auflîsungswechsel
durchgefÅhrt werden soll, ansonsten die GerÑtenummer des
VDI-Bildschirmtreibers. (!I)txt(!i) ist die Texthîhe fÅr das AES; diese
sollte i.a. Null sein.

Ein Shutdown wird per ret = shel_write(4, TRUE, 0, NULL, NULL) gestartet.
Dabei signalisiert ein RÅckgabewert von 0, daû ein (!nolink [Shutdown]) nicht mîglich
ist, weil z.B. bereits ein Shutdown lÑuft. Ein Auflîsungswechsel wird mit
ret = shel_write(5, dev, 0, NULL, NULL) durchgefÅhrt. Dabei ist (!I)dev(!i)
der VDI-GerÑtetreiber. Alternativ kann mit (!nolink [shel_write])(5, xdv, 1, NULL, NULL)
in (!I)xdv(!i) ein Falcon-Auflîsungsmodus angegeben werden.

Diese Aufrufe sind alle MultiTOS-konform. ZusÑtzlich existiert ab MagiC 3
noch folgender Aufruf: ret = (!nolink [shel_write])(5, dev, 100+txt, NULL, NULL).
Hiermit kann man die Texthîhe fÅr das AES festlegen. Eine Falcon-Auflîsung
kann man bei diesem Modus nicht Åbergeben, dev ist also
die (!nolink [GerÑtenummer des VDI])-Bildschirmtreibers.

Die GerÑtenummer hÑngt vom verwendeten System und (!nolink [VDI]) ab. Bei einem nackten
ST oder TT (ohne Grafikkarte) gilt die folgende Zuordung:

!begin_table [l l l]
1 !! Default-Auflîsung !! ~
2 !! ST niedrig        !! (320*200*16)
3 !! ST mittel         !! (640*200*4)
4 !! ST hoch           !! (640*400*2)
6 !! TT mittel         !! (640*480*16)
8 !! TT hoch           !! (1280*960*2)
9 !! TT niedrig        !! (320*480*256)
!end_table

Bei Einsatz einer Grafikkarte oder auf einem Macintosh stehen die
GerÑtenummern wie Åblich in der ASSIGN.SYS-Datei im Wurzelverzeichnis des
Bootlaufwerks.

Nach erfolgreichem (!nolink [shel_write])-Aufruf befindet sich das System im
(!nolink [Shutdown])-Modus, und es kînnen keine Programme mehr gestartet werden. Nach
einem erfolgreichen Abschluû des (!nolink [Shutdown]) oder Auflîsungswechsels erhÑlt der
Initiator folgende Nachricht:

!begin_xlist !compressed [msg+0+ =]
!item [msg[0!] =]
SHUT_COMPLETED
!item [msg[3!] =]
1 - (!nolink [Shutdown]) erfolgreich
!end_xlist

bzw. beim (!nolink [Auflîsungswechsel])

!begin_xlist !compressed [msg+0+ =]
!item [msg[0!] =]
RESCH_COMPLETED
!item [msg[3!] =]
1 - (!nolink [Auflîsungswechsel]) erfolgreich
!end_xlist

Erfolgreich heiût fÅr das System, daû alle Programme, die explizit AP_TERM
verstehen, sich beendet haben. Soll der (!nolink [Shutdown]) trotzdem abgebrochen
werden, so kann dies per ret = shel_write(4, FALSE, 0, NULL, NULL) erfolgen.
Andernfalls wird der (!nolink [Auflîsungswechsel]) endgÅltig durchgefÅhrt, wenn sich
der Initiator beendet hat. Der Shutdown dagegen wird abgebrochen, wenn der
Initiator terminiert.

Hat ein Programm per AP_TFAIL den (!nolink [Shutdown]) verweigert, so erhÑlt der
Initiator die folgende Nachricht.

!begin_xlist !compressed [msg+0+ =]
!item [msg[0!] =]
(!nolink [SHUT_COMPLETED])
!item [msg[3!] =]
0 - (!nolink [Shutdown]) abgebrochen
!item [msg[4!] =]
ap_id der Applikation, die verweigert hat
!item [msg[5!] =]
Fehlercode dieser Applikation
!end_xlist

bzw. beim (!nolink [Auflîsungswechsel])

!begin_xlist !compressed [msg+0+ =]
!item [msg[0!] =]
(!nolink [RESCH_COMPLETED])
!item [msg[3!] =]
0 - (!nolink [Auflîsungswechsel]) abgebrochen
!item [msg[4!] =]
ap_id der Applikation, die verweigert hat
!item [msg[5!] =]
Fehlercode dieser Applikation
!end_xlist

Das System hat in diesem Fall den (!nolink [Shutdown]) bzw. (!nolink [Auflîsungswechsel])
schon beendet, d.h. der Initiator kann nichts mehr tun.

(!B)Hinweis:(!b) Weil es vorkommen kann, daû der (!nolink [Shutdown])-Prozeû niemals vom
System als abgeschlossen oder abgebrochen gemeldet wird (die (!nolink [RESCH_COMPLETED])
bzw. (!nolink [SHUT_COMPLETED])-Nachricht also niemals verschickt wird), sollte der
Initiator beim Warten auf die Nachricht einen Timeout vorsehen. Tritt dieser
Fall ein, muû der (!nolink [Shutdown]) explizit abgebrochen werden. Per appl_search kann
der Initiator testen, ob noch Programme aktiv sind, die nicht explizit
(!nolink [AP_TERM]) verstehen.

Querverweis: (!nl)
(!link [Shutdown beim EmpfÑnger][Der Shutdown aus Sicht der Applikation]) ~
shel_write ~
Shutdown in MultiTOS ~ (!link [Shutdown in MagiC][Shutdown in MagiC])
!end_node
!end_node
