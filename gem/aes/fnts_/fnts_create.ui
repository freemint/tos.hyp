!iflang [english]

!begin_node fnts_create

(!begin_liste) [Availability]

!item [Name:]
ØFont selector createÆ - Initializes the font selector.

!item [Opcode:]
180

!item [Syntax:]
FNT_DIALOG *fnts_create ( int16_t vdi_handle, int16_t no_fonts,
                          int16_t font_flags, int16_t dialog_flags,
                          int8_t *sample, int8_t *opt_button );

!item [Description:]
The call fnts_create initializes the font selector.
               The following apply:

!begin_xlist !compressed [font_flags]
!item [Parameter]
Meaning
!item [~]
~
!item [vdi_handle]
Handle of the workstation to be used
!item [no_fonts]
Number of available fonts, or 0 if vst_load_fonts is to be called
!item [font_flags]
Type of fonts to be displayed:

!label FNTS_BTMP
!label FNTS_OUTL
!label FNTS_MONO
!label FNTS_PROP
!begin_table [l l l]
Bit 0 !! = !! Display bitmap fonts ( FNTS_BTMP = 1)
Bit 1 !! = !! Display vector fonts ( FNTS_OUTL = 2)
Bit 2 !! = !! Display mono-spaced fonts ( FNTS_MONO = 4)
Bit 3 !! = !! Display proportional fonts ( FNTS_PROP = 8)
!end_table

!label FNTS_3D
!item [dialog_flags]
Appearance of the dialog:
(!nl)
FNTS_3D (1) = Display selector in 3D-look
!item [sample]
Pointer to string for the sample text
!item [opt_button]
Pointer to string for optional button, or 0L
!end_xlist

(!B)Hint:(!b) If (!I)no_fonts(!i) is 0, vst_load_fonts is called with
(!I)vdi_handle.(!i) Otherwise an assumption is made that (!I)no_fonts(!i) is
the number of all fonts available via (!I)vdi_handle(!i), i.e. the number of
all system fonts (work_out[10] for v_opnvwk/vq_extnd) plus the number of fonts
loaded in later (return value of vst_load_fonts).

Depending on system configuration, this function may well take 1 second (possibly
even more), so it should be called at program start and not just immediately
before displaying the font selector.

(!B)Note:(!b) The font selector alters the attributes of the workstation
described by (!I)vdi_handle.(!i) If one wants to use the workstation passed with
fnts_create also for other purposes, the attributes have to be set first each
time, as they may have been altered meantime by the font selector.

!item [(!nolink [Return]) value:]
This function returns a pointer to management structure.

!item [Availability:]
The presence of this call should be checked for using
(!link [appl_getinfo][%apgi_7]) (Opcode 7).

!item [Group:]
Font selection

!item [See also:]
(!link [Binding] [Bindings for fnts_create]) ~ fnts_open ~ fnts_close ~
(!link [xFSL interface][About the xFSL interface])

(!ende_liste)



!begin_node Bindings for fnts_create
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
FNT_DIALOG *fnts_create ( int16_t vdi_handle, int16_t no_fonts,
                          int16_t font_flags, int16_t dialog_flags,
                          int8_t *sample, int8_t *opt_button );

!item [Binding:]
!begin_verbatim
FNT_DIALOG *fnts_create ( int16_t vdi_handle,
                          int16_t no_fonts,
                          int16_t font_flags,
                          int16_t dialog_flags,
                          int8_t *sample,
                          int8_t *opt_button )
{
   addr_in[0] = sample;
   addr_in[1] = opt_button;

   int_in[0] = vdi_handle;
   int_in[1] = no_fonts;
   int_in[2] = font_flags;
   int_in[3] = dialog_flags;
   crys_if (180);

   return ( addr_out[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! (!nolink [Contents])
!hline
control   !! control[0]  !! 180   # Function opcode
control+2 !! control[1]  !! 4     # Entry in int_in
control+4 !! control[2]  !! 0     # Entry in int_out
control+6 !! control[3]  !! 2     # Entry in addr_in
control+8 !! control[4]  !! 1     # Entry in addr_out
addr_in   !! addr_in[0]  !! sample
addr_in+4 !! addr_in[1]  !! opt_button
int_in    !! int_in[0]   !! vdi_handle
int_in+2  !! int_in[1]   !! no_fonts
int_in+4  !! int_in[2]   !! font_flags
int_in+6  !! int_in[3]   !! dialog_flags
addr_out  !! addr_out[0] !! Return value
!end_table

(!ende_liste)
!end_node
!end_node

!else

!begin_node fnts_create

(!begin_liste) [Beschreibung]

!item [Name:]
ØFont Selector CreateÆ - initialisiert die Zeichensatzauswahl.

!item [AES-Nummer:]
180

!item [Deklaration:]
FNT_DIALOG *fnts_create ( int16_t vdi_handle, int16_t no_fonts,
                          int16_t font_flags, int16_t dialog_flags,
                          int8_t *sample, int8_t *opt_button );

!item [Beschreibung:]
Die Funktion initialisiert die (!nolink [Zeichensatzauswahl]). Es gilt:

!begin_xlist !compressed [font_flags]
!item [Parameter]
Bedeutung
!item [~]
~
!item [vdi_handle]
Kennung der benutzten Workstation
!item [no_fonts]
Anzahl der verfÅgbaren Fonts (oder 0)
!item [font_flags]
Bitvektor der anzuzeigenden Fonts

!label FNTS_BTMP
!label FNTS_OUTL
!label FNTS_MONO
!label FNTS_PROP
!begin_table [l l l]
Bit-0 !! = !! Bitmapfonts anzeigen ( FNTS_BTMP = 1)
Bit-1 !! = !! Vektorfonts anzeigen ( FNTS_OUTL = 2)
Bit-2 !! = !! Ñquidistante Fonts zeigen ( FNTS_MONO = 4)
Bit-3 !! = !! proportionale Fonts zeigen ( FNTS_PROP = 8)
!end_table

!label FNTS_3D
!item [dialog_flags]
Aussehen des Dialogs
(!nl)
FNTS_3D (1) = Auswahl im 3D-Look anzeigen
!item [sample]
String fÅr Beispieltext
!item [opt_button]
Zeiger auf einen String fÅr einen optionalen Button, oder NULL
!end_xlist

(!B)Hinweis:(!b) Falls (!I)no_fonts(!i) den Wert 0 besitzt, wird die
Funktion vst_load_fonts mit (!I)vdi_handle(!i) aufgerufen. Anderenfalls
wird davon ausgegangen, daû (!I)no_fonts(!i) die Anzahl aller Åber
(!I)vdi_handle(!i) verfÅgbaren Fonts ist, d.h. die Anzahl aller
Systemfonts zuzÅglich der Anzahl der nachgeladenen Fonts.

Da diese Funktion je nach Systemkonfiguration durchaus 1 Sekunde (oder mehr)
benîtigt, sollte man sie am Programmstart und nicht erst direkt vor der
Anzeige der Fontauswahl aufrufen.

(!B)Achtung:(!b) Der Fontselektor verÑndert die Attribute der mit
(!I)vdi_handle(!i) bezeichneten Workstation. Wenn man die bei fnts_create
Åbergebene Workstation noch fÅr andere Zwecke benutzen mîchte, mÅssen auf
jeden Fall die Attribute vorher gesetzt werden, da sie evtl.
zwischenzeitlich vom Fontselektor geÑndert wurden.

!item [Ergebnis:]
Die Funktion liefert einen Zeiger auf die Verwaltungsstruktur der
ZeichensÑtze zurÅck.

!item [VerfÅgbar:]
Das Vorhandensein dieser Funktion kann per (!link [appl_getinfo][%apgi_7])
(Opcode 7) festgestellt werden.

!item [Gruppe:]
Zeichensatzauswahl

!item [Querverweis:]
(!link [Binding] [Bindings fÅr fnts_create]) ~ fnts_open ~ fnts_close ~
xFSL-Schnittstelle

(!ende_liste)



!begin_node Bindings fÅr fnts_create
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
FNT_DIALOG *fnts_create ( int16_t vdi_handle, int16_t no_fonts,
                          int16_t font_flags, int16_t dialog_flags,
                          int8_t *sample, int8_t *opt_button );

!item [Umsetzung:]
!begin_verbatim
FNT_DIALOG *fnts_create ( int16_t vdi_handle,
                          int16_t no_fonts,
                          int16_t font_flags,
                          int16_t dialog_flags,
                          int8_t *sample,
                          int8_t *opt_button )
{
   addr_in[0] = sample;
   addr_in[1] = opt_button;

   int_in[0] = vdi_handle;
   int_in[1] = no_fonts;
   int_in[2] = font_flags;
   int_in[3] = dialog_flags;
   crys_if (180);

   return ( addr_out[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0]  !! 180   # Opcode der Funktion
control+2 !! control[1]  !! 4     # EintrÑge in int_in
control+4 !! control[2]  !! 0     # EintrÑge in int_out
control+6 !! control[3]  !! 2     # EintrÑge in addr_in
control+8 !! control[4]  !! 1     # EintrÑge in addr_out
addr_in   !! addr_in[0]  !! sample
addr_in+4 !! addr_in[1]  !! opt_button
int_in    !! int_in[0]   !! vdi_handle
int_in+2  !! int_in[1]   !! no_fonts
int_in+4  !! int_in[2]   !! font_flags
int_in+6  !! int_in[3]   !! dialog_flags
addr_out  !! addr_out[0] !! Return-Wert
!end_table

(!ende_liste)
!end_node
!end_node

!endif
