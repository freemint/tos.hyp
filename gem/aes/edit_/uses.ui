!iflang [english]

!begin_node Using G_EDIT objects
!label G_EDIT objects, Using

!begin_itemize !compressed
!item In the RSC file a white G_BOX, without border, is included
!item In the program the SharedLib is loaded
!item For each G_EDIT object:
  !begin_itemize
   !item Create text buffer.
   !item Create editable object with edit_create.
   !item Alter object type in G_EDIT and place (!I)ob_spec(!i) on the editable object.
   !item Allocate the text buffer with edit_set_buf.
   !item If necessary alter the settings of the editable object with edit_set_xxx.
   !item Open editable object with edit_open.
   !item Only then draw the tree with objc_draw.
  !end_itemize
!item In order to pass keyboard codes and mouse clicks to the editable object,
  one has to call edit_evnt. The syntax is fully analogous to
  wdlg_evnt, fslx_evnt and fnts_evnt.
!item When closing, the edit field must be closed with edit_close, after
  which the memory reserved for the edit field is released again with 
  edit_delete. No further objc_draw may be performed! If necessary, 
  set the object type on G_BOX once more.
!end_itemize

See also: Keyboard codes for G_EDIT
!end_node 

!begin_node Keyboard codes for G_EDIT

These keyboard codes are evaluated by G_EDIT:

!begin_table [ll]
Cursor    !!      Corresponding cursor movements
Ctrl-Cursor-up/down !!  Scrolling
Ctrl-Cursor-left/right  !!  Move cursor word by word
Shift-Cursor-left/right !!  Cursor to start/end of line
Esc           !!   Nothing (yet)
Insert        !!   Nothing (yet)
Shift-Insert  !!   Nothing (yet)
Backspace     !!   Delete character left of cursor
Delete        !!   Delete character right of cursor
Ctrl-Delete   !!   Nothing (yet)
Home          !!   Cursor to start of text
Ende (MF-2) (!U)and(!u) !!
Ende (Mac) (!U)and(!u)   !!
Shift-Clr/Home  !!      End of text
PgUp (Mac) (!U)and(!u) !!
Shift-Cursor-up !!    Cursor one page up
PgUp (Mac) (!U)and(!u) !!
Shift-Cursor-down !!    Cursor one page down
^A        !!    Select all (from 27.1.98 on)
^C        !!    Copy block to clipboard (leave it in text)
^X        !!    Cut block to clipboard (delete it from text)
^V        !!    Insert clipboard contents at cursor position
!end_table
!end_node

!else

!begin_node Verwendung G_EDIT-Objekt
!label G_EDIT-Objekt, Verwendung

!begin_itemize !compressed
!item In der RSC-Datei wird eine G_BOX, weiû, ohne Rahmen eingetragen
!item Im Programm wird die SharedLib geladen
!item FÅr jedes G_EDIT-Objekt:
  !begin_itemize
   !item Textpuffer anlegen.
   !item Editobjekt mit edit_create erzeugen.
   !item Objekttyp in G_EDIT Ñndern und ob_spec auf das Editobjekt legen.
   !item mit edit_set_buf den Textpuffer zuweisen.
   !item Ggf. Einstellungen des Edit-Objekt per edit_set_xxx Ñndern.
   !item Edit-Objekt mit edit_open îffnen.
   !item Erst dann den Baum per objc_draw zeichnen.
  !end_itemize
!item Um Tastaturcodes und Mausklicks an das Edit-Objekt zu Åbergeben,
  muû man edit_evnt aufrufen. Die Syntax ist vîllig analog zu
  wdlg_evnt, fslx_evnt und fnts_evnt.
!item Beim Schlieûen muû das Edit-Feld per edit_close geschlossen
  werden, per edit_delete wird der Speicher fÅr das Editfeld
  wieder freigegeben. Es darf dann kein objc_draw mehr durchgefÅhrt
  werden! Ggf. den Objekttyp wieder auf G_BOX setzen.
!end_itemize

Querverweise: Tastaturcodes von G_EDIT
!end_node

!begin_node Tastaturcodes von G_EDIT

Folgend Tastaturcodes werden von G_EDIT ausgewertet:

!begin_table [ll]
Cursor    !!      Cursorbewegung
Ctrl-Cursor-hoch/runter !!  Scrollen
Ctrl-Cursor-links/rechts  !!  Wortweise Cursor bewegen
Shift-Cursor-links/rechts !!  Cursor zum Zeilenanfang/-ende
Esc           !! (noch) nichts
Einf          !! (noch) nichts
Shift-Einf    !! (noch) nichts
Backspace     !! Zeichen links vom Cursor lîschen
Delete        !! Zeichen rechts vom Cursor lîschen
Ctrl-Delete   !! (noch) nichts
Home          !!  Cursor an Textanfang
Ende (MF-2) (!U)und(!u) !!
Ende (Mac) (!U)und(!u)  !!
Shift-Clr/Home !!      Textende
Bild hoch (Mac) (!U)und(!u) !!
Shift-Cursor-hoch !!    Cursor eine Seite hoch
Bild runter (Mac) (!U)und(!u) !!
Shift-Cursor-runter !!    Cursor eine Seite runter
^A        !!    alles auswÑhlen (seit 27.1.98)
^C        !!    Block aufs Klemmbrett
^X        !!    Block lîschen und aufs Klemmbrett
^V        !!    Klemmbrett an Cursorposition einfÅgen
!end_table
!end_node

!endif
