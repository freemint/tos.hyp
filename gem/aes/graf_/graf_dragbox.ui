!iflang [english]

!begin_node graf_dragbox

(!begin_liste) [Availability]

!item [Name:]
ØGraphics drag boxÆ - Move a rectangular outline frame with the mouse.

!item [Opcode:]
71

!item [Syntax:]
int16_t graf_dragbox ( int16_t gr_dwidth, int16_t gr_dheight, int16_t gr_dstartx,
                    int16_t gr_dstarty, int16_t gr_dboundx, int16_t gr_dboundy,
                    int16_t gr_dboundw, int16_t gr_dboundh, int16_t *gr_dfinishx,
                    int16_t *gr_dfinishy );

!item [Description:]
The call graf_dragbox allows the movement a small, rectangular outline frame
within a larger bounding rectangle. Its most frequent use is to give the user
a visual clue when an object is being dragged on the screen. The following
apply:

!begin_xlist !compressed [gr_dfinishy]
!item [Parameter]
Meaning
!item [~]
~
!item [gr_dwidth]
Initial width,
!item [gr_dheight]
Height,
!item [gr_dstartx]
X-coordinate, (!U)and(!u)
!item [gr_dstarty]
Y-coordinate of the frame to be moved
!item [gr_dboundx]
X-coordinate,
!item [gr_dboundy]
Y-coordinate,
!item [gr_dboundw]
Width, (!U)and(!u)
!item [gr_dboundh]
Height of the bounding rectangle
!item [gr_dfinishx]
X-coordinate, (!U)and(!u)
!item [gr_dfinishy]
Y-coordinate of the frame destination when the mouse button is released
!end_xlist

!item [(!nolink [Return]) value:]
An error has arisen only if the value 0 is returned.

!item [Availability:]
All (!nolink [AES]) versions.

!item [Group:]
Graphics library

!item [See also:]
(!link [Binding] [Bindings for graf_dragbox])

(!ende_liste)



!begin_node Bindings for graf_dragbox
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t graf_dragbox ( int16_t gr_dwidth, int16_t gr_dheight, int16_t gr_dstartx,
                    int16_t gr_dstarty, int16_t gr_dboundx, int16_t gr_dboundy,
                    int16_t gr_dboundw, int16_t gr_dboundh, int16_t *gr_dfinishx,
                    int16_t *gr_dfinishy );

!item [Binding:]
!begin_verbatim
int16_t graf_dragbox (int16_t gr_dwidth, int16_t gr_dheight,
                      int16_t gr_dstartx, int16_t gr_dstarty,
                      int16_t gr_dboundx, int16_t gr_dboundy,
                      int16_t gr_dboundw, int16_t gr_dboundh,
                      int16_t *gr_dfinishx,
                      int16_t *gr_dfinishy)
{
   int_in[0] = gr_dwidth;
   int_in[1] = gr_dheight;
   int_in[2] = gr_dstartx;
   int_in[3] = gr_dstarty;  
   int_in[4] = gr_dboundx;
   int_in[5] = gr_dboundy;  
   int_in[6] = gr_dboundw;
   int_in[7] = gr_dboundh;  

   crys_if (71);

   *gr_dfinishx = int_out[1];
   *gr_dfinishy = int_out[2];

   return ( int_out[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! (!nolink [Contents])
!hline
control   !! control[0] !! 71    # Function opcode
control+2 !! control[1] !! 8     # Entry in int_in
control+4 !! control[2] !! 3     # Entry in int_out
control+6 !! control[3] !! 0     # Entry in addr_in
control+8 !! control[4] !! 0     # Entry in addr_out
int_in    !! int_in[0]  !! gr_dwidth
int_in+2  !! int_in[1]  !! gr_dheight
int_in+4  !! int_in[2]  !! gr_dstartx
int_in+6  !! int_in[3]  !! gr_dstarty
int_in+8  !! int_in[4]  !! gr_dboundx
int_in+10 !! int_in[5]  !! gr_dboundy
int_in+12 !! int_in[6]  !! gr_dboundw
int_in+14 !! int_in[7]  !! gr_dboundh
int_out   !! int_out[0] !! Return value
int_out+2 !! int_out[1] !! gr_dfinishx
int_out+4 !! int_out[2] !! gr_dfinishy
!end_table

(!ende_liste)
!end_node
!end_node

!else

!begin_node graf_dragbox

(!begin_liste) [Beschreibung]

!item [Name:]
ØGraphics drag BoxÆ - verschiebt ein Rechteck mit der Maus.

!item [AES-Nummer:]
71

!item [Deklaration:]
int16_t graf_dragbox ( int16_t gr_dwidth, int16_t gr_dheight, int16_t gr_dstartx,
                    int16_t gr_dstarty, int16_t gr_dboundx, int16_t gr_dboundy,
                    int16_t gr_dboundw, int16_t gr_dboundh, int16_t *gr_dfinishx,
                    int16_t *gr_dfinishy );

!item [Beschreibung:]
Die Funktion ermîglicht das Verschieben eines kleineren Rechtecks innerhalb
eines grîûeren Begrenzungsrechtecks.

!begin_xlist !compressed [gr_dfinishy]
!item [Parameter]
Bedeutung
!item [~]
~
!item [gr_dwidth]
Breite
!item [gr_dheight]
Hîhe
!item [gr_dstartx]
x-Koordinate
!item [gr_dstarty]
y-Koordinate des zu verschiebenden Rechtecks
!item [gr_dboundx]
x-Koordinate
!item [gr_dboundy]
y-Koordinate
!item [gr_dboundw]
Breite
!item [gr_dboundh]
Hîhe des Begrenzungsrechteckes
!item [gr_dfinishx]
x-Koordinate 
!item [gr_dfinishy]
y-Koordinate des zu verschiebenden Rechtecks beim Loslassen des Mausknopfs
!end_xlist

!item [Ergebnis:]
Ein Fehler ist nur dann aufgetreten, wenn als Ergebnis 0 zurÅckgegeben wird.

!item [VerfÅgbar:]
All (!nolink [AES]) versions.

!item [Gruppe:]
Grafikfunktionen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr graf_dragbox])

(!ende_liste)



!begin_node Bindings fÅr graf_dragbox
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t graf_dragbox ( int16_t gr_dwidth, int16_t gr_dheight, int16_t gr_dstartx,
                    int16_t gr_dstarty, int16_t gr_dboundx, int16_t gr_dboundy,
                    int16_t gr_dboundw, int16_t gr_dboundh, int16_t *gr_dfinishx,
                    int16_t *gr_dfinishy );

!item [Umsetzung:]
!begin_verbatim
int16_t graf_dragbox (int16_t gr_dwidth, int16_t gr_dheight,
                      int16_t gr_dstartx, int16_t gr_dstarty,
                      int16_t gr_dboundx, int16_t gr_dboundy,
                      int16_t gr_dboundw, int16_t gr_dboundh,
                      int16_t *gr_dfinishx,
                      int16_t *gr_dfinishy)
{
   int_in[0] = gr_dwidth;
   int_in[1] = gr_dheight;
   int_in[2] = gr_dstartx;
   int_in[3] = gr_dstarty;  
   int_in[4] = gr_dboundx;
   int_in[5] = gr_dboundy;  
   int_in[6] = gr_dboundw;
   int_in[7] = gr_dboundh;  

   crys_if (71);

   *gr_dfinishx = int_out[1];
   *gr_dfinishy = int_out[2];

   return ( int_out[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 71    # Opcode der Funktion
control+2 !! control[1] !! 8     # EintrÑge in int_in
control+4 !! control[2] !! 3     # EintrÑge in int_out
control+6 !! control[3] !! 0     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
int_in    !! int_in[0]  !! gr_dwidth
int_in+2  !! int_in[1]  !! gr_dheight
int_in+4  !! int_in[2]  !! gr_dstartx
int_in+6  !! int_in[3]  !! gr_dstarty
int_in+8  !! int_in[4]  !! gr_dboundx
int_in+10 !! int_in[5]  !! gr_dboundy
int_in+12 !! int_in[6]  !! gr_dboundw
int_in+14 !! int_in[7]  !! gr_dboundh
int_out   !! int_out[0] !! Return-Wert
int_out+2 !! int_out[1] !! gr_dfinishx
int_out+4 !! int_out[2] !! gr_dfinishy
!end_table

(!ende_liste)
!end_node
!end_node

!endif
