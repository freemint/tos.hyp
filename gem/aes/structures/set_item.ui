!iflang [english]

!begin_node SET_ITEM

!begin_verbatim
typedef int16_t (cdecl *SET_ITEM)( LIST_BOX *box, OBJECT *tree,
                                struct _lbox_item *item,
                                int16_t obj_index, void *user_data,
                                GRECT *rect, int16_t first );
!end_verbatim


!begin_table [l|l]
Parameter !! Meaning
!hline
(!I)box(!i) !! points to the list box structure
(!I)tree(!i) !! points to the object tree of the dialog
(!I)item(!i) !! points to the LBOX_ITEM structure of the entry to be set 
(!I)obj_index(!i) !! is the number of the object to be set
(!I)user_data(!i) !! is the pointer passed by lbox_create
(!I)rect(!i) !! is the pointer to the GRECT for the object redraw or 0L
(!I)first(!i) !! contains the number of the first visible item for Slider B
!end_table

For a list box that only contains text strings, <set> is typically a 
function that copies a string pointed to by the LBOX_ITEM structure 
into the object (!I)obj_index(!i).

(!I)rect(!i) is 0L when a redraw of the dialog box is executed or when 
lbox_update has been called. (!I)rect(!i) is not 0L when the user has
selected or deselected an object, and points to the GRECT for the redraw.

The return value is the number of the start object for objc_draw/wdlg_redraw.

For entries in the list box that consist of several objects it is
sometimes sensible to reduce the redraw rectangle when selecting/
deselecting an object, or to alter the start object, to prevent
unnecessary drawing operations and/or unnecessary flicker. In most
cases the list box routines call the function objc_draw/wdlg_redraw
after <set> to display the altered contents.

(!I)first(!i)  contains the number of the first visible item for Slider B if 
the list box has two sliders. For a (vertical) list box with text 
strings and two sliders, when calling lbox_create, for instance, one 
enters the number of visible characters in (!I)visible_b(!i), the total 
string length in (!I)entries_b(!i) and the index of the first visible 
character in (!I)first_b(!i). If the text is scrolled horizontally, <set> is 
called for all visible strings and the affected parts of the screen are 
redrawn or moved. If the list box has only one slider, (!I)first(!i) is 
always 0.

See also: List boxes ~ lbox_create
!end_node

!else

!begin_node SET_ITEM

!begin_verbatim
typedef int16_t (cdecl *SET_ITEM)( LIST_BOX *box, OBJECT *tree,
                                struct _lbox_item *item,
                                int16_t obj_index, void *user_data,
                                GRECT *rect, int16_t first );
!end_verbatim

Dabei gilt:

!begin_table [l|l]
Parameter !! Bedeutung
!hline
(!I)box(!i) !! Zeiger auf die Listbox-Struktur
(!I)tree(!i) !! Zeiger auf den Objektbaum des Dialogs
(!I)item(!i) !! Zeiger auf LBOX_ITEM-Struktur des zu setzenden Eintrags
(!I)obj_index(!i) !! Nummer des zu setzenden Objektes
(!I)user_data(!i) !! Zeiger der bei lbox_create Åbergeben wurde
(!I)rect(!i) !! Rechteck fÅr das Objekt-Redraw (oder NULL)
(!I)first(!i) !! Nummer des ersten sichtbaren Elements fÅr Slider-B
!end_table

(!B)Hinweis:(!b) Bei einer Listbox, die nur Text-Strings enthÑlt, ist dies
typischerweise eine Funktion, die einen String, auf den die LBOX_ITEM
Struktur verweist, in das Objekt (!I)obj_index(!i) kopiert. Der Parameter
(!I)rect(!i) ist 0L, wenn ein Redraw der Dialogbox durchgefÅhrt wird oder
wenn lbox_update aufgerufen wurde. Er ist hingegen (!I)nicht(!i) 0L, wenn
der Anwender ein Objekt selektiert oder deselektiert hat, und zeigt auf das
GRECT fÅr den Redraw.

Der RÅckgabewert der Funktion ist die Nummer des Startobjekts fÅr die
Funktion objc_draw bzw. wdlg_redraw.

Bei EintrÑgen in der Listbox, die aus mehreren Objekten bestehen, ist es
manchmal sinnvoll bei Selektion/Deselektion eines Objekts das Redrawrechteck
zu verkleinern oder das Startobjekt zu Ñndern, um unnîtige
Zeichenoperationen und unnîtiges Geflacker zu vermeiden. In den meisten
FÑllen rufen die Listbox-Routinen nach der oben beschriebenen Funktion die
Routinen objc_draw bzw. wdlg_redraw auf, um den geÑnderten Inhalt
anzuzeigen.

Der Parameter (!I)first(!i) enthÑlt die Nummer des ersten sichtbaren
Elements fÅr Slider B, wenn die Listbox 2 Slider hat. Bei einer (vertikalen)
Listbox mit Text-Strings und zwei Slidern gibt man z.B. beim  Aufruf von
lbox_create die Anzahl der sichtbaren Zeichen in (!I)visible_b(!i), die
gesamte StringlÑnge in (!I)entries_b(!i) und den Index des ersten sichtbaren
Zeichens in (!I)first_b(!i) an. Wird der Text horizontal gescrollt, wird die
Funktion fÅr alle sichtbaren Strings aufgerufen und der Bereich
neugezeichnet bzw. verschoben. Wenn die Listbox nur einen Slider hat, ist
first immer 0.

Querverweis: Listboxen ~ lbox_create
!end_node

!endif
