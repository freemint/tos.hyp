!iflang [english]

!begin_node PRN_SETTINGS

!begin_verbatim
typedef struct _prn_settings
{
   int32_t  magic;            /* 'pset'                              */
   int32_t  length;           /* (+) Structure length                */
   int32_t  format;           /* Structure type                      */
   int32_t  reserved;         /* Reserved                            */
   int32_t  page_flags;       /* (+) Flags, inc. even/odd pages:
                                  0x0001 = Only pages with even number
                                  0x0002 = Only pages with odd number*/
   int16_t  first_page;       /* (+) First page to print (min. 1)    */
   int16_t  last_page;        /* (+) Last page to print (max. 9999)  */
   int16_t  no_copies;        /* (+) Number of copies                */
   int16_t  orientation;      /* (+) Page orientation:
                                  0x0000 =  Orientation unknown and
                                            not adjustable
                                  0x0001 = Output in portrait format
                                  0x0002 = Output in landscape format*/
   int32_t  scale;            /* (+) Scaling: 0x10000L = 100%        */
   int16_t  driver_id;        /* (+) VDI device number               */
   int16_t  driver_type;      /* Type of the selected driver         */
   int32_t  driver_mode;      /* Flags, inc. for background printing */
   int32_t  reserved1;        /* Reserved                            */
   int32_t  reserved2;        /* Reserved                            */
   int32_t  printer_id;       /* Printer ID number                   */
   int32_t  mode_id;          /* Mode ID number                      */
   int16_t  mode_hdpi;        /* Horizontal resolution in dpi        */
   int16_t  mode_vdpi;        /* Vertical resolution in dpi          */
   int32_t  quality_id;       /* Printing mode (hardware-dependent
                                 quality, e.g. Microweave or Econofast)*/
   int32_t  color_mode;       /* Color mode                          */
   int32_t  plane_flags;      /* Flags for color planes to be output
                                 (e.g. cyan only)                    */
   int32_t  dither_mode;      /* Rasterizing (dithering) process     */
   int32_t  dither_value;     /* Parameter for the dithering process */
   int32_t  size_id;          /* Paper format                        */
   int32_t  type_id;          /* Paper type (normal, glossy)         */
   int32_t  input_id;         /* Paper feed tray                     */
   int32_t  output_id;        /* Paper output tray                   */
   int32_t  contrast;         /* Contrast:   0x10000L = normal       */
   int32_t  brightness;       /* Brightness: 0x1000L  = normal       */
   int32_t  reserved3;        /* Reserved                            */
   int32_t  reserved4;        /* Reserved                            */
   int32_t  reserved5;        /* Reserved                            */
   int32_t  reserved6;        /* Reserved                            */
   int32_t  reserved7;        /* Reserved                            */
   int32_t  reserved8;        /* Reserved                            */
   int8_t   device[128];      /* Filename for the printout           */
   #ifdef __PRINTING__
   TPrint   mac_settings;     /* Setting of the Mac printer driver   */
   #else
   struct
   {
      uint8_t inside[120];
   } mac_settings;
   #endif
} PRN_SETTINGS;
!end_verbatim

(!B)Note:(!b) The structure elements marked with (+) can be read out by the
application. All other entries should (!I)not(!i) be accessed. Data such as
the printer resolution or number of colors should (!I)not(!i) be taken from
the setting structure, but inquired for from the printer at the start
of the printout (it would be possible, for instance, that due to a
memory shortage the printer driver is forced to use a lower resolution
compared to that entered in PRN_SETTINGS).

See also: Print dialogs ~ pdlg_open
!end_node

!else

!begin_node PRN_SETTINGS

!begin_verbatim
typedef struct _prn_settings
{
   int32_t  magic;            /* 'pset'                                 */
   int32_t  length;           /* (+) StrukturlÑnge                      */
   int32_t  format;           /* Strukturtyp                            */
   int32_t  reserved;         /* reserviert                             */
   int32_t  page_flags;       /* (+) Flags, u.a. gerade/ungerade Seiten
                                 0x0001 = nur Seiten mit gerader Nummer
                                 0x0002 = dto. mit ungeraden Nummern    */
   int16_t  first_page;       /* (+) erste zu druckende Seite (min.1)   */
   int16_t  last_page;        /* (+) dto. letzte Seite (max. 9999)      */
   int16_t  no_copies;        /* (+) Anzahl der Kopien                  */
   int16_t  orientation;      /* (+) Drehung
                                  0x0000 = Ausrichtung unbekannt und
                                           nicht verstellbar
                                  0x0001 = Seite im Hochformat ausgeben
                                  0x0002 = Seite im Querformat ausgeben */
   int32_t  scale;            /* (+) Skalierung: 0x10000L = 100%        */
   int16_t  driver_id;        /* (+) VDI-GerÑtenummer                   */
   int16_t  driver_type;      /* Typ des eingestellten Treibers         */
   int32_t  driver_mode;      /* Flags, u.a. fÅr Hintergrunddruck       */
   int32_t  reserved1;        /* reserviert                             */
   int32_t  reserved2;        /* reserviert                             */
   int32_t  printer_id;       /* Druckernummer                          */
   int32_t  mode_id;          /* Modusnummer                            */
   int16_t  mode_hdpi;        /* horizontale Auflîsung in dpi           */
   int16_t  mode_vdpi;        /* vertikale Auflîsung in dpi             */
   int32_t  quality_id;       /* Druckmodus (hardwÑremÑûige QualitÑt,
                                 z.B. Microweave oder Econofast)        */
   int32_t  color_mode;       /* Farbmodus                              */
   int32_t  plane_flags;      /* Flags fÅr auszugebende Farbebenen
                                 (z.B. nur cyan)                        */
   int32_t  dither_mode;      /* Rasterverfahren                        */
   int32_t  dither_value;     /* Parameter fÅr das Rasterverfahren      */
   int32_t  size_id;          /* Papierformat                           */
   int32_t  type_id;          /* Papiertyp (normal, glossy)             */
   int32_t  input_id;         /* Papiereinzug                           */
   int32_t  output_id;        /* Papierauswurf                          */
   int32_t  contrast;         /* Kontrast:   0x10000L = normal          */
   int32_t  brightness;       /* Helligkeit: 0x1000L  = normal          */
   int32_t  reserved3;        /* reserviert                             */
   int32_t  reserved4;        /* reserviert                             */
   int32_t  reserved5;        /* reserviert                             */
   int32_t  reserved6;        /* reserviert                             */
   int32_t  reserved7;        /* reserviert                             */
   int32_t  reserved8;        /* reserviert                             */
   int8_t   device[128];      /* Dateiname fÅr den Ausdruck             */
   #ifdef __PRINTING__
   TPrint   mac_settings;     /* Einstellung des Mac-Druckertreibers    */
   #else
   struct
   {
      uint8_t inside[120];
   } mac_settings;
   #endif
} PRN_SETTINGS;
!end_verbatim

(!B)Hinweis:(!b) Die mit (+) gekennzeichneten Strukturelemente kînnen von
der Applikation ausgelesen werden. Auf alle anderen EintrÑge sollte
(!I)nicht(!i) zugegriffen werden. Daten wie z.B. die Druckerauflîsung oder
die Farbanzahl sollten (!I)nicht(!i) der Einstellstruktur entnommen werden,
sondern beim Start des Ausdrucks vom Drucker erfragt werden (es wÑre z.B.
mîglich, daû der Druckertreiber durch Speichermangel gezwungen wird, die
Druckauflîsung gegenÅber der in PRN_SETTINGS eingetragenen Einstellung zu
verringern).

Querverweis: Druckdialoge ~ pdlg_open
!end_node

!endif
