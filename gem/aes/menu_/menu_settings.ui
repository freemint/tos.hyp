!iflang [english]

!begin_node menu_settings

(!begin_liste) [Availability]

!item [Name:]
ØMenu settingsÆ - Set or inquire popup/submenu parameters.

!item [Opcode:]
39

!item [Syntax:]
int16_t menu_settings ( int16_t me_flag, MN_SET *me_values );

!item [Description:]
The call menu_settings enables manipulation of the global parameters for popups
and for submenus. The following apply:

!begin_xlist !compressed [Parameter]
!item [Parameter]
Meaning
!item [~]
~
!item [me_flag]
Parameter
!begin_table [l l l]
0 !! = !! Inquire current settings
1 !! = !! Set current settings from MN_SET
!end_table
!item [me_values]
Pointer to MN_SET structure
!end_xlist

(!B)Note:(!b) The settings made with this function apply not just for the calling
program, but for the whole system. For this reason this call should (!I)not(!i)
be used by normal application programs but only in configuration programs
(such as (!link [CPX modules][About XCONTROL]), for instance).

!item [(!nolink [Return]) value:]
The function always returns the value 1.

!item [Availability:]
This function is available only with (!nolink [AES]) versions 3.30 and above.

The presence of this function can be ascertained with a call of
(!link [appl_getinfo][%apgi_9]) (opcode 9).

!item [Group:]
Menu library

!item [See also:]
(!link [Binding] [Bindings for menu_settings]) ~ menu_popup ~ XMEN_MGR

(!ende_liste)



!begin_node Bindings for menu_settings
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t menu_settings ( int16_t me_flag, MN_SET *me_values );

!item [Binding:]
!begin_verbatim
int16_t menu_settings (int16_t me_flag, MN_SET *me_values)
{
   int_in[0]  = me_flag;
   addr_in[0] = me_values;

   return ( crys_if(39) );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! (!nolink [Contents])
!hline
control   !! control[0] !! 39    # Function opcode
control+2 !! control[1] !! 1     # Entry in int_in
control+4 !! control[2] !! 1     # Entry in int_out
control+6 !! control[3] !! 1     # Entry in addr_in
control+8 !! control[4] !! 0     # Entry in addr_out
int_in    !! int_in[0]  !! me_flag
addr_in   !! addr_in[0] !! me_values
int_out   !! int_out[0] !! Return value
!end_table

(!ende_liste)
!end_node
!end_node

!else

!begin_node menu_settings

(!begin_liste) [Beschreibung]

!item [Name:]
ØMenu SettingsÆ - Parameter fÅr (!nolink [Popup])/SubmenÅs setzen bzw. abfragen.

!item [AES-Nummer:]
39

!item [Deklaration:]
int16_t menu_settings ( int16_t me_flag, MN_SET *me_values );

!item [Beschreibung:]
Die Funktion ermîglicht die Manipulation der Parameter fÅr (!nolink [Popup])- und
SubmenÅs. Es gilt:

!begin_xlist !compressed [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [me_flag]
Parameter
!begin_table [l l l]
0 !! = !! abfragen
1 !! = !! setzen
!end_table
!item [me_values]
Zeiger auf MN_SET-Struktur
!end_xlist

(!B)Hinweis:(!b) 
Die durch das Setzen vorgenommenen Einstellungen gelten nicht nur fÅr das
eigene Programm, sondern fÅr das ganze System. Aus diesem Grund sollte die
Funktion in normalen Anwenderprogrammen (!I)nicht(!i) benutzt werden,
sondern nur in Konfigurations-Programmen (z.B. CPX-Modulen) zum Einsatz
kommen.

!item [Ergebnis:]
Die Funktion liefert stets den Wert 1 zurÅck.

!item [VerfÅgbar:]
Diese Funktion ist nur verf(!uumlaut)gbar seit (!nolink [AES]) Version 3.30 und
h(!oumlaut)her.

Das Vorhandensein dieser Funktion kann Åber einen Aufruf
von (!link [appl_getinfo][%apgi_9]) (Opcode 9) festgestellt werden.
              
!item [Gruppe:]
(!link [MenÅs][MenÅfunktionen])

!item [Querverweis:]
(!link [Binding] [Bindings fÅr menu_settings]) ~ menu_popup ~ XMEN_MGR

(!ende_liste)



!begin_node Bindings fÅr menu_settings
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t menu_settings ( int16_t me_flag, MN_SET *me_values );

!item [Umsetzung:]
!begin_verbatim
int16_t menu_settings (int16_t me_flag, MN_SET *me_values)
{
   int_in[0]  = me_flag;
   addr_in[0] = me_values;

   return ( crys_if(39) );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 39    # Opcode der Funktion
control+2 !! control[1] !! 1     # EintrÑge in int_in
control+4 !! control[2] !! 1     # EintrÑge in int_out
control+6 !! control[3] !! 1     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
int_in    !! int_in[0]  !! me_flag
addr_in   !! addr_in[0] !! me_values
int_out   !! int_out[0] !! Return-Wert
!end_table

(!ende_liste)
!end_node
!end_node

!endif
