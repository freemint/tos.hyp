!iflang [english]

!begin_node fsel_boxinput

(!begin_liste) [Availability]

!item [Name:]
ØFile selection extended inputÆ - Select filenames.

!item [Opcode:]
91

!item [Syntax:]
int16_t fsel_boxinput (  int16_t *global, int8_t *fs_einpath, int8_t *fs_einsel,
                    int16_t *fs_eexbutton, int8_t *elabel, FSEL_CALLBACK callback );

!item [Description:]
The call fsel_boxinput makes a file-selector dialog box available, which can
also be passed a title string. It is used in an extended version of the
file-selector BoxKite.
               
(!B)The function can be passed the following parameters:(!b)

!begin_xlist !compressed [fs_eexbutton]
!item [Parameter]
Meaning
!item [~]
~
!item [fs_einpath]
Name of the default access path (absolute) with appended search mask; after the
call it contains the new pathname
!item [fs_einsel]
Name of the default file; after the call it contains the newly selected filename
!item [fs_eexbutton]
Exit button:
!begin_table [l l l]
0 !! = !! 'Cancel' was selected
1 !! = !! 'OK' was selected
!end_table
!item [fs_elabel]
(!nolink [Title])-line
!item [callback]
Address of a function that is called by BoxKite if a (!nolink [GEM]) message
is to be passed to the main application.  (!nl)
This includes not just the message WM_REDRAW but also WM_MOVED, for instance,
as there are some operating system versions that offer movement of windows
lying at the back. (!nolink [Messages]) that implicitly open new windows or top
existing ones, on the other hand, should be ignorerd or stored and only
processed after return from the file-selector. WM_TOPPED messages are not passed
through to the message callback.
!end_xlist

(!B)Hint:(!b) BoxKite as of Version 2.00 also makes the functions of the
(!link [MagiC file-selector][Extended file-selectors]) available. The
presence of this call should be checked for using (!link [appl_getinfo][%apgi_7])
(opcode 7).
               
!item [(!nolink [Return]) value:]
It is imperative that the return value of the function (0 = error) is respected,
as a shortage of memory, for instance, may make it impossible to use a
file-selector.

!item [Availability:]
If BoxKite from Version 1.71 on is (!nolink [installed]). This can be checked for by the
presence of the cookie HBFS. But note that this is also present for versions
earlier than Version 1.71.

!item [Group:]
File-selector library

!item [See also:]
(!link [Binding] [Bindings for fsel_boxinput]) ~
(!link [XFS-concept in MagiC][MagiC's XFS-concept])

(!ende_liste)



!begin_node Bindings for fsel_boxinput
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
!label FSEL_CALLBACK
/* Message handler for updating background windows */ (!nl)
typedef void cdecl (* FSEL_CALLBACK)(int16_t *msg);

int16_t fsel_boxinput (  int16_t *global, int8_t *fs_einpath, int8_t *fs_einsel,
                    int16_t *fs_eexbutton, int8_t *elabel, FSEL_CALLBACK callback );

!item [Binding:]
!begin_verbatim
int16_t fsel_boxinput ( int16_t *global, int8_t *fs_einpath,
                        int8_t *fs_einsel,
                        int16_t *fs_eexbutton,
                        int8_t *elabel,
                        FSEL_CALLBACK callback )
{
  void *aespb[6], *addrin[6], *addrout[6];
  int contrl[5], intin[16], intout[7];

  aespb[0] = contrl;
  aespb[1] = global;
  aespb[2] = intin;
  aespb[3] = intout;
  aespb[4] = addrin;
  aespb[5] = addrout;

  contrl[0] = 91;
  contrl[1] = 0;
  contrl[2] = 2;
  contrl[3] = 4;
  contrl[4] = 0;

   addr_in[0] = fs_einpath;
   addr_in[1] = fs_einsel;
   addr_in[2] = elabel;
   addr_in[3] = callback;

  _crystal((AESPB *)aespb);

   *fs_eexbutton = int_out[1];
   return ( int_out[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! (!nolink [Contents])
!hline
control   !! control[0] !! 91    # Function opcode
control+2 !! control[1] !! 0     # Entry in int_in
control+4 !! control[2] !! 2     # Entry in int_out
control+6 !! control[3] !! 4     # Entry in addr_in
control+8 !! control[4] !! 0     # Entry in addr_out
addr_in   !! addr_in[0] !! fs_einpath
addr_in+4 !! addr_in[1] !! fs_einsel
addr_in+8 !! addr_in[2] !! elabel
addr_in+12 !! addr_in[3] !! callback
int_out   !! int_out[0] !! Return value
int_out+2 !! int_out[1] !! fs_eexbutton
!end_table

(!ende_liste)
(!B)Note:(!b) BoxKite requires information from the '(!nolink [global])' array of the
main application. The supplied (!nolink [GEM]) bindings of development systems
normally pass this automatically.

!end_node
!end_node

!else

!begin_node fsel_boxinput

(!begin_liste) [Beschreibung]

!item [Name:]
ØFile Selection Extended InputÆ - selektiert Dateinamen.

!item [AES-Nummer:]
91

!item [Deklaration:]
int16_t fsel_boxinput (  int16_t *global, int8_t *fs_einpath, int8_t *fs_einsel,
                    int16_t *fs_eexbutton, int8_t *elabel, FSEL_CALLBACK callback );

!item [Beschreibung:]
Die Funktion stellt eine Dateiauswahlbox zur VerfÅgung, der auch ein
(!nolink [Titel-String]) Åbergeben werden kann. Es handelt sich hierbei um eine erweiterte
Version der Dateiauswahl BoxKite.

(!B)Der Funktion werden folgende Parameter Åbergeben:(!b)

!begin_xlist !compressed [fs_eexbutton]
!item [Parameter]
Bedeutung
!item [~]
~
!item [fs_einpath]
Name des Default-Zugriffspfades (absolut) mit angehÑngter Suchmaske. EnthÑlt
nach dem Aufruf den neuen Pfadnamen.
!item [fs_einsel]
Name der Default-Datei. EnthÑlt nach dem Aufruf den neuen Dateinamen.
!item [fs_eexbutton]
!begin_table [l l l]
0 !! = !! es wurde Abbruch gewÑhlt
1 !! = !! es wurde Ok gewÑhlt
!end_table
!item [fs_elabel]
Titelzeile
!item [callback]
Adresse einer Funktion, welche von BoxKite aufgerufen wird falls eine GEM-Message
an die Hauptapplikation Åbergeben werden soll. (!nl)
Es handelt sich dabei nicht nur um die Message WM_REDRAW.
Sondern z.B. auch um WM_MOVED, da es immerhin Betriebssystemversionen gibt, die
das Verschieben von hintenliegenden Fenstern
ermîglichen. (!nolink [Messages]), die implizit neue Fenster îffnen oder vorhandene 
nach oben bringen, sollten dagegen ignoriert oder aufgehoben und erst 
nach der RÅckkehr aus dem Fileselector behandelt werden.
WM_TOPPED-(!nolink [Messages]) werden nicht an den Message-Callback durchgereicht.
!end_xlist

(!B)Hinweis:(!b) BoxKite stellt ab Version 2.00 auch die Funktionen der MagiC 4
(!link[Dateiauswahl][Fileselektoren]) zur VerfÅgung. Das Vorhandensein dieser
Funktionen kann per (!link [appl_getinfo][%apgi_7]) (Opcode 7) festgestellt werden.

!item [Ergebnis:]
Der RÅckgabewert der Funktion (0 = Fehler) sollte unbedingt beachtet werden,
da z.B. bei Speichermangel kein Fileselektor mehr benutzt werden kann.

!item [VerfÅgbar:]
Wenn der BoxKite ab Version 1.71 installiert ist. Dazu kann der Cookie HBFS auf
des vorhandensein geprÅft werden. Allerdings ist dieser auch schon vor der Version
1.71 vorhanden.

!item [Gruppe:]
Dateiauswahl

!item [Querverweis:]
(!link [Binding] [Bindings fÅr fsel_boxinput]) ~
(!link [XFS-Konzept in MagiC][Das XFS-Konzept von MagiC])

(!ende_liste)



!begin_node Bindings fÅr fsel_boxinput
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
!label FSEL_CALLBACK
/* Prototyp des Message-Handlers. */  (!nl)
typedef void cdecl (* FSEL_CALLBACK)(int16_t *msg);

int16_t fsel_boxinput (  int16_t *global, int8_t *fs_einpath, int8_t *fs_einsel,
                    int16_t *fs_eexbutton, int8_t *elabel, FSEL_CALLBACK callback );

!item [Umsetzung:]
!begin_verbatim
int16_t fsel_boxinput ( int16_t *global, int8_t *fs_einpath,
                        int8_t *fs_einsel,
                        int16_t *fs_eexbutton,
                        int8_t *elabel,
                        FSEL_CALLBACK callback )
{
  void *aespb[6], *addrin[6], *addrout[6];
  int contrl[5], intin[16], intout[7];

  aespb[0] = contrl;
  aespb[1] = global;
  aespb[2] = intin;
  aespb[3] = intout;
  aespb[4] = addrin;
  aespb[5] = addrout;

  contrl[0] = 91;
  contrl[1] = 0;
  contrl[2] = 2;
  contrl[3] = 4;
  contrl[4] = 0;

   addr_in[0] = fs_einpath;
   addr_in[1] = fs_einsel;
   addr_in[2] = elabel;
   addr_in[3] = callback;

  _crystal((AESPB *)aespb);

   *fs_eexbutton = int_out[1];
   return ( int_out[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 91    # Opcode der Funktion
control+2 !! control[1] !! 0     # EintrÑge in int_in
control+4 !! control[2] !! 2     # EintrÑge in int_out
control+6 !! control[3] !! 4     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
addr_in   !! addr_in[0] !! fs_einpath
addr_in+4 !! addr_in[1] !! fs_einsel
addr_in+8 !! addr_in[2] !! elabel
addr_in+12 !! addr_in[3] !! callback
int_out   !! int_out[0] !! Return-Wert
int_out+2 !! int_out[1] !! fs_eexbutton
!end_table

(!ende_liste)
(!B)Achtung(!b) BoxKite benîtigt Informationen aus dem '(!nolink [global])'-Array der
Hauptapplikation. Die mitgelieferten GEM-Bindings von Entwicklungssystemen
Åbergeben dieses normalerweise automatisch.

!end_node
!end_node

!endif
