!iflang [english]

!begin_node objc_sysvar

(!begin_liste) [Availability]

!item [Name:]
ØObject sysvarÆ - Manipulation of 3D objects.

!item [Opcode:]
48

!item [Syntax:]
int16_t objc_sysvar ( int16_t ob_smode, int16_t ob_swhich, int16_t ob_sival1,
                   int16_t ob_sival2, int16_t *ob_soval1, int16_t *ob_soval2 );

!item [Description:]
The call objc_sysvar permits the setting or inquiring the appearance of the
(!nolink [AES]) 3D objects. The following apply:

!begin_xlist !compressed [Parameter]
!item [Parameter]
Meaning
!item [~]
~
!item [ob_smode]
!begin_table [l l l]
0 !! - !! Inquire status
1 !! - !! Set new status
!end_table
!item [ob_swhich]
Desired 3D elements:
(!nl)
!label LK3DIND
(!B)LK3DIND (1) - Indicators(!b)
!begin_xlist !compressed
!item [Mode 0:]
(!I)ob_soval1(!i) = 0
(!nl)
On selection of an object the associated text does not move
(!I)ob_soval1(!i) = 1
(!nl)
On selection of an abject the associated text moves
(!nl)
(!I)ob_soval2(!i) = 0
(!nl)
Object colour does not change on selection
(!nl)
(!I)ob_soval2(!i) = 1
(!nl)
Object colour changes on selection
!item [Mode 1:]
As mode 1, but now the relevant values may be set with the parameters
(!I)ob_sival1(!i) or (!I)ob_sival2(!i)
!end_xlist

!label LK3DACT
(!B)LK3DACT (2) - Activators(!b)
(!nl)
Determines behaviour of the activators; all further statements are to be
used in the same way as for indicators
(!nl)

!label INDBUTCOL
(!B)INDBUTCOL (3) - Colour of non-selected indicators(!b)
!begin_xlist !compressed
!item [Mode 0:]
(!I)ob_soval1(!i) is the current colour
!item [Mode 1:]
(!I)ob_sival1(!i) contains the colour to be set
!end_xlist


!label ACTBUTCOL
(!B)ACTBUTCOL (4) - Colour of non-selected activators(!b)
!begin_xlist !compressed
!item [Mode 0:]
(!I)ob_soval1(!i) is the current colour
!item [Mode 1:]
(!I)ob_sival1(!i) contains the colour to be set
!end_xlist


!label BACKGRCOL
(!B)BACKGRCOL (5) - Colour of the 3D background(!b)
!begin_xlist !compressed
!item [Mode 0:]
(!I)ob_soval1(!i) is the current colour
!item [Mode 1:]
(!I)ob_sival1(!i) contains the colour to be set
!end_xlist


!label AD3DVALUE
(!B)AD3DVALUE (6) - Inquire pixel enlargement(!b)
!begin_xlist !compressed
!item [Mode 0:]
(!I)ob_soval1(!i)
(!nl)
Number of pixels in the horizontal direction by which the 3D buttons should be
enlarged on each side
(!nl)
(!I)ob_soval2(!i)
(!nl)
Number of pixels in the vertical direction by which the 3D buttons should be
enlarged on each side
(!nl)
(!B)Note:(!b) This mode always returns the value 0 in MagiC as the object
sizes of the system are not affected in this case
!item [Mode 1:]
Not supported at present
!end_xlist


!label MX_ENABLE3D
(!B)MX_ENABLE3D (10) - Switch on/off 3D-look(!b)
This mode is only present under (!nolink [MagiC]) (since Version 3.0), and
allows the 3D-look to be switched on or off. The following apply:
!begin_xlist !compressed
!item [Mode 0:]
(!I)ob_soval1(!i) = 0
(!nl)
(3D is off)
(!nl)
(!I)ob_soval1(!i) = 1
(!nl)
(3D is active)
!item [Mode 1:]
(!I)ob_sival1(!i) = 0
(!nl)
(!I)ob_sival2(!i) = 0
(!nl)
(3D-look off)
(!nl)
(!I)ob_sival1(!i) = 1
(!nl)
(!I)ob_sival2(!i) = 1
(!nl)
(3D-look on)
!end_xlist

!label MX_MENUCOL
(!B)MX_MENUCOL (11) - MenÅfarbe(!b)
Dieser Modus ist nur unter (!nolink [MagiC]) (ab Version 6.0 09.04.1998) vorhanden. (!nl)
Es kann die Farbe der MenÅzeile ermittelt werden.
!begin_xlist !compressed
!item [Modus 0:]
ob_soval1 ist die aktuelle Farbe.
!item [Modus 1:]
Liefert einen Fehler.
!end_xlist

!end_xlist

(!B)Note:(!b) The settings made with objc_sysvar apply not just for your own
program, but are (!nolink [global]) for the whole system. For this reason the function should
not be used in normal user applications, but only in configuration
programs (such as (!link [CPX modules][About XCONTROL])).

Although the function is present in MagiC 2.0, due to not yet implemented
3D-objects no modifications are possible. For this reason close attention should
be paid to the function's return value. As of (!nolink [MagiC]) 3 the 3D-look is
available, but some differences have to be borne in mind.

!item [(!nolink [Return]) value:]
An error has arisen only if the value 0 is returned.

!item [Availability:]
Available as of (!nolink [AES]) version 3.40.

The presence of this function can be ascertained with a call of
(!link [appl_getinfo][%apgi_13]) (opcode 13).


!item [Group:]
Object library

!item [See also:]
(!link [Binding] [Bindings for objc_sysvar])

(!ende_liste)



!begin_node Bindings for objc_sysvar
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t objc_sysvar ( int16_t ob_smode, int16_t ob_swhich, int16_t ob_sival1,
                   int16_t ob_sival2, int16_t *ob_soval1, int16_t *ob_soval2 );

!item [Binding:]
!begin_verbatim
int16_t objc_sysvar (int16_t ob_smode, int16_t ob_swhich,
                     int16_t ob_sival1, int16_t ob_sival2,
                     int16_t *ob_soval1, int16_t *ob_soval2)
{
   int_in[0] = ob_smode;
   int_in[1] = ob_swhich;
   int_in[2] = ob_sival1;
   int_in[3] = ob_sival2;

   crys_if (48);

   *ob_soval1 = int_out[1];
   *ob_soval2 = int_out[2];

   return ( int_out[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! (!nolink [Contents])
!hline
control   !! control[0] !! 48    # Function opcode
control+2 !! control[1] !! 4     # Entry in int_in
control+4 !! control[2] !! 3     # Entry in int_out
control+6 !! control[3] !! 0     # Entry in addr_in
control+8 !! control[4] !! 0     # Entry in addr_out
int_in    !! int_in[0]  !! ob_smode
int_in+2  !! int_in[1]  !! ob_swhich
int_in+4  !! int_in[2]  !! ob_sival1
int_in+6  !! int_in[3]  !! ob_sival2
int_out   !! int_out[0] !! Return value
int_out+2 !! int_out[1] !! ob_soval1
int_out+4 !! int_out[2] !! ob_soval2
!end_table

(!ende_liste)
!end_node
!end_node

!else

!begin_node objc_sysvar

(!begin_liste) [Beschreibung]

!item [Name:]
ØObject sysvarÆ - Manipulation der 3D Objekte

!item [AES-Nummer:]
48

!item [Deklaration:]
int16_t objc_sysvar ( int16_t ob_smode, int16_t ob_swhich, int16_t ob_sival1,
                   int16_t ob_sival2, int16_t *ob_soval1, int16_t *ob_soval2 );

!item [Beschreibung:]
Die Funktion erlaubt es, das Erscheinungsbild der 3D-Objekte des AES zu
setzen bzw. zu erfragen. Es gilt:

!begin_xlist !compressed [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [ob_smode]
!begin_table [l l l]
0 !! - !! Status abfragen
1 !! - !!neuen Status setzen
!end_table
!item [ob_swhich]
GewÅnschte 3D-Komponente:
(!nl)
!label LK3DIND
(!B)LK3DIND (1) - Indikatoren(!b)
!begin_xlist !compressed
!item [Modus 0:]
ob_soval1 = 0
(!nl)
beim Selektieren eines Objektes bewegt sich der zugehîrige Text nicht.
(!nl)
ob_soval1 = 1
(!nl)
beim Selektieren eines Objektes bewegt sich der zugehîrige Text.
(!nl)
ob_soval2 = 0
(!nl)
Objektfarbe Ñndert sich beim Selektieren nicht.
(!nl)
ob_soval2 = 1
(!nl)
Objektfarbe wird beim Selektieren verÑndert.
!item [Modus 1:]
wie Modus 0, nur lassen sich jetzt die jeweiligen Werte, Åber die Parameter
(!I)ob_sival1(!i) bzw. (!I)ob_sival2(!i) setzen.
!end_xlist

!label LK3DACT
(!B)LK3DACT (2) - Aktivatoren(!b)
(!nl)
Bestimmt das Verhalten der Aktivatoren. Alle weiteren Angaben sind analog
den Indikatoren zu verwenden.
(!nl)

!label INDBUTCOL
(!B)INDBUTCOL (3) - Farbe nicht-selektierter Indikatoren!(!b)
!begin_xlist !compressed
!item [Modus 0:]
ob_soval1 ist die aktuelle Farbe.
!item [Modus 1:]
ob_sival1 enthÑlt die zu setzende Farbe.
!end_xlist


!label ACTBUTCOL
(!B)ACTBUTCOL (4) - Farbe nicht-selektierter Aktivatoren(!b)
!begin_xlist !compressed
!item [Modus 0:]
ob_soval1 ist die aktuelle Farbe.
!item [Modus 1:]
ob_sival1 enthÑlt die zu setzende Farbe.
!end_xlist


!label BACKGRCOL
(!B)BACKGRCOL (5) - Farbe des 3D Hintergrundes(!b)
!begin_xlist !compressed
!item [Modus 0:]
ob_soval1 ist die aktuelle Farbe.
!item [Modus 1:]
ob_sival1 enthÑlt die zu setzende Farbe.
!end_xlist


!label AD3DVALUE
(!B)AD3DVALUE (6) - Pixelvergrîûerung erfragen(!b)
!begin_xlist !compressed
!item [Modus 0:]
ob_soval1
(!nl)
Anzahl der Pixel in horizontaler Richtung, um die 3D-Buttons nach jeder
Seite vergrîûert werden.
(!nl)
ob_soval2
(!nl)
Anzahl der Pixel in vertikaler Richtung, um die 3D-Buttons nach jeder Seite
vergrîûert werden.
(!nl)
(!B)Hinweis:(!b) Dieser Modus liefert in MagiC stets den Wert 0, da die
Objektgrîûen vom System nicht angetastet werden.
!item [Modus 1:]
z.Zt. nicht unterstÅtzt.
!end_xlist


!label MX_ENABLE3D
(!B)MX_ENABLE3D (10) - 3D Look ein-/ausschalten(!b)
Dieser Modus ist nur unter (!nolink [MagiC]) (ab Version 3.0) vorhanden, und erlaubt es,
den 3D-Look ein- bzw. auszuschalten. Es gilt:
!begin_xlist !compressed
!item [Modus 0:]
ob_soval1 = 0
(!nl)
(3D ist aus)
(!nl)
ob_soval1 = 1
(!nl)
(3D ist aktiv)
!item [Modus 1:]
ob_sival1 = 0
(!nl)
ob_sival2 = 0
(!nl)
(3D-Look aus)
(!nl)
ob_sival1 = 1
(!nl)
ob_sival2 = 1
(!nl)
(3D-Look ein)
!end_xlist

!label MX_MENUCOL
(!B)MX_MENUCOL (11) - MenÅfarbe(!b)
Dieser Modus ist nur unter (!nolink [MagiC]) (ab Version 6.0 09.04.1998) vorhanden. (!nl)
Es kann die Farbe der MenÅzeile ermittelt werden.
!begin_xlist !compressed
!item [Modus 0:]
ob_soval1 ist die aktuelle Farbe.
!item [Modus 1:]
Liefert einen Fehler.
!end_xlist
!end_xlist

(!B)Hinweis:(!b) Die per objc_sysvar vorgenommenen Einstellungen gelten
nicht nur fÅr das eigene Programm, sondern fÅr das ganze System. Aus diesem
Grund sollte die Funktion in normalen Anwenderprogrammen nicht benutzt
werden, sondern nur in Konfigurations-Programmen (z.B. CPX-Modulen) zum
Einsatz kommen.

In MagiC 2.0 ist die Funktion zwar vorhanden, lÑût jedoch aufgrund der noch
fehlenden 3D-Objekte keine Modifikationen zu. Deshalb sollte der
RÅckgabewert der Funktion beachtet werden. Ab (!nolink [MagiC]) 3 steht der 3D-Look zwar
zur VerfÅgung, jedoch gilt es einige Unterschiede zu beachten.

!item [Ergebnis:]
Ein Fehler ist nur dann aufgetreten, wenn als Ergebnis der Wert 0
zurÅckgegeben wird.

!item [VerfÅgbar:]
Available as of AES version 3.40.

Das Vorhandensein dieser Funktion kann per (!link [appl_getinfo][%apgi_13])
(Opcode 13) erfragt werden.


!item [Gruppe:]
(!link [Objekte][Objektfunktionen])

!item [Querverweise:]
(!link [Binding] [Bindings fÅr objc_sysvar])

(!ende_liste)



!begin_node Bindings fÅr objc_sysvar
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t objc_sysvar ( int16_t ob_smode, int16_t ob_swhich, int16_t ob_sival1,
                   int16_t ob_sival2, int16_t *ob_soval1, int16_t *ob_soval2 );

!item [Umsetzung:]
!begin_verbatim
int16_t objc_sysvar (int16_t ob_smode, int16_t ob_swhich,
                     int16_t ob_sival1, int16_t ob_sival2,
                     int16_t *ob_soval1, int16_t *ob_soval2)
{
   int_in[0] = ob_smode;
   int_in[1] = ob_swhich;
   int_in[2] = ob_sival1;
   int_in[3] = ob_sival2;

   crys_if (48);

   *ob_soval1 = int_out[1];
   *ob_soval2 = int_out[2];

   return ( int_out[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 48    # Opcode der Funktion
control+2 !! control[1] !! 4     # EintrÑge in int_in
control+4 !! control[2] !! 3     # EintrÑge in int_out
control+6 !! control[3] !! 0     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
int_in    !! int_in[0]  !! ob_smode
int_in+2  !! int_in[1]  !! ob_swhich
int_in+4  !! int_in[2]  !! ob_sival1
int_in+6  !! int_in[3]  !! ob_sival2
int_out   !! int_out[0] !! Return-Wert
int_out+2 !! int_out[1] !! ob_soval1
int_out+4 !! int_out[2] !! ob_soval2
!end_table

(!ende_liste)
!end_node
!end_node

!endif
