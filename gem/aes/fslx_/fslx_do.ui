!iflang [english]

!begin_node fslx_do

(!begin_liste) [Availability]

!item [Name:]
ØFile selectionX doÆ - Faster call-up of the file-selector.

!item [Opcode:]
194

!item [Syntax:]
void *fslx_do ( int8_t *title, int8_t *path, int16_t pathlen, int8_t *fname,
                int16_t fnamelen, int8_t *patterns, XFSL_FILTER *filter,
                int8_t *paths, int16_t *sort_mode, int16_t flags, int16_t *button,
                int16_t *nfiles, int8_t **pattern );

!item [Description:]
The call fslx_do displays a file-selector box on the screen, and takes over its
handling. The following apply:

!begin_xlist !compressed [Parameter]

!item [Parameter]
Meaning

!item [~]
~

!item [title]
(!nolink [Title]) of the file-selector, or NULL

!item [path]
Complete path, which starts with the drive letter, and ends with '\'

!item [pathlen]
Length of the path-receiving buffer

!item [fname]
Buffer for the filename

!item [fnamelen]
Length of the filename-receiving buffer

!item [patterns]
Filename masks such as '*.TXT', '*.PRG' or '*.IMG'; these alternative
selectable masks are separated by EOS and terminated by EOS, EOS

!item [filter]
(!B)Filter function(!b) which is called before the mask comparison (or NULL);
if this returns the value 0 the file is invalid, while a value of 1 will
display the filename

!item [paths]
Path history; the alternative selectable paths are separated by EOS and
terminated by EOS, EOS

!item [sort_mode]
(!B)Sort-mode for the display:(!b)
!begin_table [l l l]
0 !! = !! By name
1 !! = !! By date
2 !! = !! By size
3 !! = !! By type
4 !! = !! Unsorted (physical order)
!end_table

!item [flags]
(!B)Various settings:(!b)
!begin_xlist [1 =]
!item [1 =]
DOSMODE - This is the compatibility mode, also used by fsel_(ex)input, and
returns filenames basically in the 8+3 format; for this all sub!-directories
are called with Dopendir (name, 1)
!item [2 =]
Do (!I)not(!i) follow symbolic links; so in that case the date, time as well as
the XATTR structure that will pass (!I)filter(!i) will belong to the link
itself
!item [8 =]
Multiple selection - In this case several files can be selected and passed at a
time
!end_xlist

!item [button]
Index of the selected button:
!begin_table [l l l]
0 !! = !! 'Cancel' button
1 !! = !! 'OK' button
!end_table

!item [nfiles]
Number of selected files

!item [pattern]
Selected file mask, such as '*.TXT'

!end_xlist

(!B)Note:(!b) The function is a combination of fslx_open and fslx_evnt, but uses
a non-windowed dialog box.

!item [(!nolink [Return]) value:]
The function returns a pointer to a descriptor, which is to be specified for the
other routines.

!item [Availability:]
The presence of this call should be checked for using
(!link [appl_getinfo][%apgi_7]) (opcode 7).

!item [Group:]
Extended file-selectors

!item [See also:]
(!link [Binding] [Bindings for fslx_do]) ~ fslx_open ~ fslx_evnt

(!ende_liste)



!begin_node Bindings for fslx_do
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
void *fslx_do ( int8_t *title, int8_t *path, int16_t pathlen, int8_t *fname,
                int16_t fnamelen, int8_t *patterns, XFSL_FILTER *filter,
                int8_t *paths, int16_t *sort_mode, int16_t flags, int16_t *button,
                int16_t *nfiles, int8_t **pattern );

!item [Binding:]
!begin_verbatim
void *fslx_do ( int8_t *title, int8_t *path, int16_t pathlen,
                int8_t *fname, int16_t fnamelen,
                int8_t *patterns, XFSL_FILTER *filter,
                int8_t *paths, int16_t *sort_mode,
                int16_t flags, int16_t *button,
                int16_t *nfiles, int8_t **pattern )
{
   addr_in[0] = title;
   addr_in[1] = path;
   addr_in[2] = fname;
   addr_in[3] = patterns;
   addr_in[4] = filter;
   addr_in[5] = paths;

   int_in[0] = pathlen;
   int_in[1] = fnamelen;
   int_in[2] = *sort_mode;
   int_in[3] = flags;

   crys_if (194);

   *button    = int_out[1];
   *nfiles    = int_out[2];
   *sort_mode = int_out[3];
   *pattern   = addr_out[1];

   return ( (void *) addr_out[0] ); 
} 
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! (!nolink [Contents])
!hline
control    !! control[0]  !! 194   # Function opcode
control+2  !! control[1]  !! 4     # Entry in int_in
control+4  !! control[2]  !! 4     # Entry in int_out
control+6  !! control[3]  !! 6     # Entry in addr_in
control+8  !! control[4]  !! 2     # Entry in addr_out
addr_in    !! addr_in[0]  !! title
addr_in+4  !! addr_in[1]  !! path
addr_in+8  !! addr_in[2]  !! fname
addr_in+12 !! addr_in[3]  !! patterns
addr_in+16 !! addr_in[4]  !! filter
addr_in+20 !! addr_in[5]  !! paths
int_in     !! int_in[0]   !! pathlen
int_in+2   !! int_in[1]   !! fnamelen
int_in+4   !! int_in[2]   !! sort_mode
int_in+6   !! int_in[3]   !! flags
addr_out   !! addr_out[0] !! Return value
addr_out+4 !! addr_out[1] !! pattern
int_out    !! int_out[0]  !! 1
int_out+2  !! int_out[1]  !! button
int_out+4  !! int_out[2]  !! nfiles
int_out+6  !! int_out[3]  !! sort_mode
!end_table

(!ende_liste)
!end_node
!end_node

!else

!begin_node fslx_do

(!begin_liste) [Beschreibung]

!item [Name:]
ØFile SelectionX DoÆ - schneller Aufruf des Fileselektors.

!item [AES-Nummer:]
194

!item [Deklaration:]
void *fslx_do ( int8_t *title, int8_t *path, int16_t pathlen, int8_t *fname,
                int16_t fnamelen, int8_t *patterns, XFSL_FILTER *filter,
                int8_t *paths, int16_t *sort_mode, int16_t flags, int16_t *button,
                int16_t *nfiles, int8_t **pattern );

!item [Beschreibung:]
Die Funktion stellt eine Dateiauswahlbox auf dem Bildschirm dar, und
Åbernimmt deren Bearbeitung. Es gilt:

!begin_xlist !compressed [Parameter]

!item [Parameter]
Bedeutung

!item [~]
~

!item [title]
(!nolink [Titel]) der Auswahl oder NULL

!item [path]
vollstÑndiger Pfad, welcher mit dem Laufwerk beginnt, und mit '\' endet.

!item [pathlen]
LÑnge des aufnehmenden Pfad-Puffers.

!item [fname]
Puffer fÅr den Dateinamen.

!item [fnamelen]
LÑnge des aufnehmenden Dateinamen-Puffers.

!item [patterns]
Dateinamensmuster wie "*.TXT", "*.PRG" oder "*.IMG". Diese alternativ
anwÑhlbaren Muster sind durch EOS getrennt und durch EOS, EOS abgeschlossen.

!item [filter]
(!B)Filterfunktion(!b), die vor dem Mustervergleich aufgerufen wird (oder
NULL). Gibt diese den Wert 0 zurÅck, so ist die Datei ungÅltig; bei einem
Wert von 1 wird der Dateiname angezeigt.

!item [paths]
Pfad-(!nolink [History]). Die alternativ anwÑhlbaren Pfade sind durch EOS getrennt, und
durch EOS, EOS abgeschlossen.

!item [sort_mode]
(!B)Sortiermodus fÅr die Anzeige(!b)
!begin_table [l l l]
0 !! = !! nach Namen
1 !! = !! nach Datum
2 !! = !! nach Grîûe
3 !! = !! nach Typ
4 !! = !! unsortiert (physik. Reihenfolge)
!end_table

!item [flags]
(!B)verschiedene Einstellungen(!b)
!begin_xlist [1 =]
!item [1 =]
DOSMODE. Dies ist der KompatibilitÑtsmodus, der auch von fsel_(ex)input
verwendet wird, und Dateinamen grundsÑtzlich im Format 8+3 liefert. Dazu
werden alle Unterverzeichnisse per Dopendir (name, 1) aufgerufen.
!item [2 =]
symbolische Links (!I)nicht(!i) verfolgen. In diesem Fall gehîren also
Datum, Uhrzeit sowie die XATTR-Struktur, die filter Åbergeben wird, zum Link
selbst.
!item [8 =]
Mehrfachauswahl. In diesem Fall kînnen mehrere Dateien auf einmal ausgewÑhlt
und Åbergeben werden.
!end_xlist

!item [button]
Nummer des ausgewÑhlten Buttons
!begin_table [l l l]
0 !! = !! Abbruch-Button
1 !! = !! Ok-Button
!end_table

!item [nfiles]
Anzahl der ausgewÑhlten Dateien

!item [pattern]
ausgewÑhltes Dateinamensmuster wie "*.TXT"

!end_xlist

(!B)Hinweis:(!b) Die Funktion ist eine Kombination aus fslx_open und
fslx_evnt, benutzt aber eine Dialogbox ohne Fenster.

!item [Ergebnis:]
Die Funktion liefert einen Zeiger auf einen Deskriptor zurÅck, der bei den
anderen Routinen anzugeben ist.

!item [VerfÅgbar:]
Das Vorhandensein dieser Funktion kann per (!link [appl_getinfo][%apgi_7]) (Opcode 7)
festgestellt werden.

!item [Gruppe:]
Fileselektoren

!item [Querverweis:]
(!link [Binding] [Bindings fÅr fslx_do]) ~ fslx_open ~ fslx_evnt

(!ende_liste)



!begin_node Bindings fÅr fslx_do
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
void *fslx_do ( int8_t *title, int8_t *path, int16_t pathlen, int8_t *fname,
                int16_t fnamelen, int8_t *patterns, XFSL_FILTER *filter,
                int8_t *paths, int16_t *sort_mode, int16_t flags, int16_t *button,
                int16_t *nfiles, int8_t **pattern );

!item [Umsetzung:]
!begin_verbatim
void *fslx_do ( int8_t *title, int8_t *path, int16_t pathlen,
                int8_t *fname, int16_t fnamelen,
                int8_t *patterns,
                XFSL_FILTER *filter, int8_t *paths,
                int16_t *sort_mode, int16_t flags,
                int16_t *button,
                int16_t *nfiles, int8_t **pattern )
{
   addr_in[0] = title;
   addr_in[1] = path;
   addr_in[2] = fname;
   addr_in[3] = patterns;
   addr_in[4] = filter;
   addr_in[5] = paths;

   int_in[0] = pathlen;
   int_in[1] = fnamelen;
   int_in[2] = *sort_mode;
   int_in[3] = flags;

   crys_if (194);

   *button    = int_out[1];
   *nfiles    = int_out[2];
   *sort_mode = int_out[3];
   *pattern   = addr_out[1];

   return ( (void *) addr_out[0] ); 
} 
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control    !! control[0]  !! 194   # Opcode der Funktion
control+2  !! control[1]  !! 4     # EintrÑge in int_in
control+4  !! control[2]  !! 4     # EintrÑge in int_out
control+6  !! control[3]  !! 6     # EintrÑge in addr_in
control+8  !! control[4]  !! 2     # EintrÑge in addr_out
addr_in    !! addr_in[0]  !! title
addr_in+4  !! addr_in[1]  !! path
addr_in+8  !! addr_in[2]  !! fname
addr_in+12 !! addr_in[3]  !! patterns
addr_in+16 !! addr_in[4]  !! filter
addr_in+20 !! addr_in[5]  !! paths
int_in     !! int_in[0]   !! pathlen
int_in+2   !! int_in[1]   !! fnamelen
int_in+4   !! int_in[2]   !! sort_mode
int_in+6   !! int_in[3]   !! flags
addr_out   !! addr_out[0] !! Return-Wert
addr_out+4 !! addr_out[1] !! pattern
int_out    !! int_out[0]  !! 1
int_out+2  !! int_out[1]  !! button
int_out+4  !! int_out[2]  !! nfiles
int_out+6  !! int_out[3]  !! sort_mode
!end_table

(!ende_liste)
!end_node
!end_node

!endif
