!iflang [english]

!begin_node fslx_open

(!begin_liste) [Availability]

!item [Name:]
ØFile selectionX openÆ - Initializes and opens the file-selector

!item [Opcode:]
190

!item [Syntax:]
void *fslx_open ( int8_t *title, int16_t x, int16_t y, int16_t *whdl, int8_t *path,
                  int16_t pathlen, int8_t *fname, int16_t fnamelen, int8_t *patterns,
                  XFSL_FILTER *filter, int8_t *paths, int16_t sort_mode,
                  int16_t flags );

!item [Description:]
The call fslx_open initializes and opens the file-selector box. The following
apply:

!begin_xlist !compressed [Parameter]

!item [Parameter]
Meaning

!item [~]
~

!item [title]
Window title of file-selector, may be NULL

!item [x]
X-coordinate, (!U)and(!u)

!item [y]
Y-coordinate of the top left corner of the window; for (!I)x(!i)=(!I)y(!i)=-1
the window will be centred

!item [whdl]
Window handle after successful opening

!item [path]
Complete path, starts with drive and ends with '\'. (!nl)
From MagiC 6.10 onwards the path may be initialized incompletely, as with
fsel_xxx, e.g. as an empty string; MagiC will then complete the path in a
sensible way

!item [pathlen]
Length of path buffer, i.e. maximum pathlength + 1 (for EOS)

!item [fname]
Buffer for the filename

!item [fnamelen]
Length of filename buffer, i.e. maximum length of filename + 1 (for EOS)

!item [patterns]
Filemask, e.g. '*.TXT' or '*.PRG,*.APP'. The alternatively selectable masks are
separated by EOS and terminated by EOS,EOS. (!nl)
From MagiC 6.10 onwards a NULL-pointer may be passed here, in which case MagiC
then uses '*\0'.

!item [filter]
May be NULL. The filter function is called before the mask comparison.
If it returns 0 then the file is invalid, if 1 is returned then the filename
will be displayed.

!item [paths]
Path "history" e.g. "C:\\BIN\\" etc. The alternatively selectable paths are
separated by EOS and terminated by EOS,EOS. A NULL-pointer may be passed here.

!item [sort_mode]
(!B)Sort-mode for the display:(!b)
!label SORTBYNAME
!label SORTBYDATE
!label SORTBYSIZE
!label SORTBYTYPE
!label SORTBYNONE
!label SORTDEFAULT
!begin_table [l l l]
SORTBYNAME (0) !! = !! By name
SORTBYDATE (1) !! = !! By date
SORTBYSIZE (2) !! = !! By size
SORTBYTYPE (3) !! = !! By type
SORTBYNONE (4) !! = !! Unsorted (physical order)
SORTDEFAULT (-1) !! = !! Default
!end_table
SORTDEFAULT exists from Magic 6.10 onwards and means that the sort mode saved
in the system will be used.

!label DOSMODE
!label NFOLLOWSLKS
!label GETMULTI
!item [flags]
(!B)Various settings:(!b)
!begin_xlist [1=]
!item [1 =]
(DOSMODE) 
This is the compatibility mode that is also used by fsel_(ex)input and
basically returns filenames in the 8+3 format; for this all directories are
called with Dopendir(DOPEN_COMPAT)

!item [2 =]
(NFOLLOWSLKS)
Symbolic links will not be followed, i.e. date and time etc., as well as the
XATTR-structure that is passed to (!I)filter(!i), belong to the link itself

!item [8 =]
If GETMULTI is set, one can select and pass several files at the same time;
for this fslx_getnxtfile is used if fslx_evnt or fslx_do in the parameter
(!I)nfiles(!i) signals that there are still further files selected

!end_xlist

!end_xlist

!item [(!nolink [Return]) value:]
The function returns a descriptor for the further actions, else the value NULL
if an error has arisen.

!item [Availability:]
The presence of this call should be checked for using
(!link [appl_getinfo][%apgi_7])  (opcode 7).

!item [Group:]
Extended file-selectors

!item [See also:]
(!link [Binding] [Bindings for fslx_open]) ~ fslx_close

(!ende_liste)



!begin_node Bindings for fslx_open
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
void *fslx_open ( int8_t *title, int16_t x, int16_t y, int16_t *whdl, int8_t *path,
                  int16_t pathlen, int8_t *fname, int16_t fnamelen, int8_t *patterns,
                  XFSL_FILTER *filter, int8_t *paths, int16_t sort_mode,
                  int16_t flags );

!item [Binding:]
!begin_verbatim
void *fslx_open ( int8_t *title, int16_t x, int16_t y,
                  int16_t *whdl, int8_t *path,
                  int16_t pathlen, int8_t *fname,
                  int16_t fnamelen, int8_t *patterns,
                  XFSL_FILTER *filter, int8_t *paths,
                  int16_t sort_mode, int16_t flags )
{
   addr_in[0] = title;
   addr_in[1] = path;
   addr_in[2] = fname;
   addr_in[3] = patterns;
   addr_in[4] = filter;
   addr_in[5] = paths;

   int_in[0] = x;
   int_in[1] = y;
   int_in[2] = pathlen;
   int_in[3] = fnamelen;
   int_in[4] = sort_mode;
   int_in[5] = flags;

   crys_if (190);

   *whdl = int_out[0];
   return ( (void *) addr_out[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! (!nolink [Contents])
!hline
control    !! control[0]  !! 190   # Function opcode
control+2  !! control[1]  !! 6     # Entry in int_in
control+4  !! control[2]  !! 1     # Entry in int_out
control+6  !! control[3]  !! 6     # Entry in addr_in
control+8  !! control[4]  !! 1     # Entry in addr_out
addr_in    !! addr_in[0]  !! title
addr_in+4  !! addr_in[1]  !! path
addr_in+8  !! addr_in[2]  !! fname
addr_in+12 !! addr_in[3]  !! patterns
addr_in+16 !! addr_in[4]  !! filter
addr_in+20 !! addr_in[5]  !! paths
int_in     !! int_in[0]   !! x
int_in+2   !! int_in[1]   !! y
int_in+4   !! int_in[2]   !! pathlen
int_in+6   !! int_in[3]   !! fnamelen
int_in+8   !! int_in[4]   !! sort_mode
int_in+10  !! int_in[5]   !! flags
addr_out   !! addr_out[0] !! Return value
int_out    !! int_out[0]  !! whdl
!end_table

(!ende_liste)
!end_node
!end_node

!else

!begin_node fslx_open

(!begin_liste) [Beschreibung]

!item [Name:]
ØFile SelectionX OpenÆ - initialisiert und îffnet die (!nolink [Dateiauswahl]).

!item [AES-Nummer:]
190

!item [Deklaration:]
void *fslx_open ( int8_t *title, int16_t x, int16_t y, int16_t *whdl, int8_t *path,
                  int16_t pathlen, int8_t *fname, int16_t fnamelen, int8_t *patterns,
                  XFSL_FILTER *filter, int8_t *paths, int16_t sort_mode,
                  int16_t flags );

!item [Beschreibung:]
Die Funktion initialisiert und îffnet die Dateiauswahlbox. Es gilt:

!begin_xlist !compressed [Parameter]

!item [Parameter]
Bedeutung

!item [~]
~

!item [title]
Fenstertitel der Auswahl oder NULL

!item [x]
x-Koordinate

!item [y]
y-Koordinate der linken oberen Ecke des Fensters. Falls diese den Wert -1
besitzen, so wird das Fenster zentriert dargestellt.

!item [whdl]
Fensterkennung nach erfolgreichem ôffnen.

!item [path]
vollstÑndiger Pfad, welcher mit dem Laufwerk beginnt, und mit '\' endet. (!nl)
Seit MagiC 6.10 darf der Pfad, wie bei fsel_xxx(), unvollstÑndig initialisiert
werden, z.B. als Leer-String. MagiC komplettiert dann den Pfad sinnvoll.


!item [pathlen]
LÑnge des aufnehmenden Pfad-Puffers.

!item [fname]
Puffer fÅr den Dateinamen.

!item [fnamelen]
LÑnge des aufnehmenden Dateinamen-Puffers.

!item [patterns]
Dateinamensmuster wie "*.TXT", "*.PRG" oder "*.IMG". Diese alternativ
anwÑhlbaren Muster sind durch EOS getrennt und durch EOS,EOS abgeschlossen. (!nl)
Seit MagiC 6.10 darf hier ein Nullzeiger Åbergeben werden, MagiC verwendet
dann "*\0".

!item [filter]
(!B)Filterfunktion(!b), die vor dem Mustervergleich aufgerufen wird (oder
NULL). Gibt diese den Wert 0 zurÅck, so ist die Datei ungÅltig; bei einem
Wert von 1 wird der Dateiname angezeigt.

!item [paths]
Pfad-(!nolink [History]). Die alternativ anwÑhlbaren Pfade sind durch EOS getrennt, und
durch EOS,EOS abgeschlossen.

!item [sort_mode]
(!B)Sortiermodus fÅr die Anzeige(!b)
!label SORTBYNAME
!label SORTBYDATE
!label SORTBYSIZE
!label SORTBYTYPE
!label SORTBYNONE
!label SORTDEFAULT
!begin_table [l l l]
SORTBYNAME (0) !! = !! nach Namen
SORTBYDATE (1) !! = !! nach Datum
SORTBYSIZE (2) !! = !! nach Grîûe
SORTBYTYPE (3) !! = !! nach Typ
SORTBYNONE (4) !! = !! unsortiert (physik. Reihenfolge)
SORTDEFAULT (-1) !! = !! default
!end_table
SORTDEFAULT existiert seit MagiC 6.10 und bedeutet, daû der im
System gespeicherte Sortiermodus verwendet wird.

!label DOSMODE
!label NFOLLOWSLKS
!label GETMULTI
!item [flags]
(!B)verschiedene Einstellungen(!b)
!begin_xlist [1=]
!item [1 =]
(DOSMODE) Dies ist der KompatibilitÑtsmodus, der auch von fsel_(ex)input
verwendet wird, und Dateinamen grundsÑtzlich im Format 8+3 liefert. Dazu
werden alle Unterverzeichnisse per Dopendir (DOPEN_COMPAT) aufgerufen.
!item [2 =]
(NFOLLOWSLKS) symbolische Links (!I)nicht(!i) verfolgen. In diesem Fall gehîren also
Datum, Uhrzeit sowie die XATTR-Struktur, die (!I)filter(!i) Åbergeben wird,
zum Link selbst.
!item [8 =]
Ist GETMULTI gesetzt, kînnen mehrere Dateien auf einmal ausgewÑhlt und Åbergeben
werden. Dazu wird fslx_getnxtfile	verwendet, wenn fslx_evnt bzw. fslx_do
im Parameter (!I)nfiles(!i) signalisieren, daû noch weitere Dateien selektiert sind.
!end_xlist

!end_xlist

!item [Ergebnis:]
Die Funktion liefert einen Deskriptor fÅr die weiteren Aktionen, bzw. den
Wert NULL, wenn ein Fehler aufgetreten ist.

!item [VerfÅgbar:]
Das Vorhandensein dieser Funktion kann per (!link [appl_getinfo][%apgi_7]) (Opcode 7)
festgestellt werden.

!item [Gruppe:]
Fileselektoren

!item [Querverweis:]
(!link [Binding] [Bindings fÅr fslx_open]) ~  fslx_close

(!ende_liste)



!begin_node Bindings fÅr fslx_open
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
void *fslx_open ( int8_t *title, int16_t x, int16_t y, int16_t *whdl, int8_t *path,
                  int16_t pathlen, int8_t *fname, int16_t fnamelen, int8_t *patterns,
                  XFSL_FILTER *filter, int8_t *paths, int16_t sort_mode,
                  int16_t flags );

!item [Umsetzung:]
!begin_verbatim
void *fslx_open ( int8_t *title, int16_t x, int16_t y,
                  int16_t *whdl, int8_t *path,
                  int16_t pathlen, int8_t *fname,
                  int16_t fnamelen, int8_t *patterns,
                  XFSL_FILTER *filter, int8_t *paths,
                  int16_t sort_mode, int16_t flags )
{
   addr_in[0] = title;
   addr_in[1] = path;
   addr_in[2] = fname;
   addr_in[3] = patterns;
   addr_in[4] = filter;
   addr_in[5] = paths;

   int_in[0] = x;
   int_in[1] = y;
   int_in[2] = pathlen;
   int_in[3] = fnamelen;
   int_in[4] = sort_mode;
   int_in[5] = flags;

   crys_if (190);

   *whdl = int_out[0];
   return ( (void *) addr_out[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control    !! control[0]  !! 190   # Opcode der Funktion
control+2  !! control[1]  !! 6     # EintrÑge in int_in
control+4  !! control[2]  !! 1     # EintrÑge in int_out
control+6  !! control[3]  !! 6     # EintrÑge in addr_in
control+8  !! control[4]  !! 1     # EintrÑge in addr_out
addr_in    !! addr_in[0]  !! title
addr_in+4  !! addr_in[1]  !! path
addr_in+8  !! addr_in[2]  !! fname
addr_in+12 !! addr_in[3]  !! patterns
addr_in+16 !! addr_in[4]  !! filter
addr_in+20 !! addr_in[5]  !! paths
int_in     !! int_in[0]   !! x
int_in+2   !! int_in[1]   !! y
int_in+4   !! int_in[2]   !! pathlen
int_in+6   !! int_in[3]   !! fnamelen
int_in+8   !! int_in[4]   !! sort_mode
int_in+10  !! int_in[5]   !! flags
addr_out   !! addr_out[0] !! Return-Wert
int_out    !! int_out[0]  !! whdl
!end_table

(!ende_liste)
!end_node
!end_node

!endif
