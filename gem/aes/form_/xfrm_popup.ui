!iflang [english]

!begin_node xfrm_popup

(!begin_liste) [Availability]

!item [Name:]
ØXForm popupÆ - Manage a popup menu (extended MagiC version).

!item [Opcode:]
135

!item [Syntax:]
int16_t xfrm_popup( OBJECT *tree, int16_t x, int16_t y, int16_t firstscrlob,
        int16_t lastscrlob, int16_t nlines,
        void  cdecl (*init)(OBJECT *tree, int16_t scrollpos,
             int16_t nlines, void *param),
        void *param, int16_t *lastscrlpos )

!item [Description:]
The call xfrm_popup displays a popup menu on the screen, and takes on its
management. The followiong apply:

!begin_xlist !compressed [firstscrlob]
!item [Parameter]
Meaning
!item [~]
~
!item [tree]
Address of the object tree
!item [x]
X-coordinate, (!U)and(!u)
!item [y]
Y-coordinate around which the box is to be centered

!item [firstscrlob]
Object index of the first scrollable object

!item [lastscrlob]
Object index of the last scrollable object

!item [nlines]
Number of lines actually present

!item [init]
Callback routine for translating the objects. (!I)tree(!i), (!I)param(!i) and
(!I)nlines(!i) are the parameters that were passed in xfrm_popup.
(!I)scrollpos(!i) specifies the current scroll position. It lies at:
0..(nlines-(lastscrlob-firstscrlob+1). If the popup should not scroll,
(!I)init(!i) == NULL must be passed.

!item [param]
User-defined parameter

!item [lastscrlpos]
Last scroll position

!end_xlist

(!B)Note:(!b) If the parameters (!I)x(!i) and (!I)y(!i) have the value 0, then the
corresponding values from the object structure will be respected, and the centering
is abandoned. At all times the function ensures that the complete popup is
displayed on the screen.

Selectable objects must have the status SELECTABLE and (!I)non-selectable(!i)
objects the status DISABLED assigned. The object with the index 0 in the object
tree should be of the type G_BOX or G_IBOX.


!begin_enumerate
!item The object tree is initialized automatically by a call of the (!I)init(!i)
  routine before the first drawing action.
!item The variable (!I)scrollpos(!i) need not be initialized, as the system always
  start at scrollpos 0.
!item The (!I)init(!i) routine is responsible for initializing the first and/or last
  scroll object with an arrow.
!item The scrollable objects are (!I)firstscrlob(!i) ... (!I)lastscrlob.(!i) The
  object indices must be consecu!-tive numbers. The objects must lie directly below
  each other and all must have the same size.

!end_enumerate

!item [(!nolink [Return]) value:]
The function returns the index of the selected object from the popup menu, else
the value -1.

!item [Availability:]
The function is available as of MagiC 5.03.

!item [Group:]
Form library

!item [See also:]
(!link [Binding] [Bindings for xfrm_popup]) ~ OBJECT ~ form_popup

(!ende_liste)



!begin_node Bindings for xfrm_popup
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t xfrm_popup( OBJECT *tree, int16_t x, int16_t y, int16_t firstscrlob,
        int16_t lastscrlob, int16_t nlines,
        void  cdecl (*init)(OBJECT *tree, int16_t scrollpos,
             int16_t nlines, void *param),
        void *param, int16_t *lastscrlpos )

!item [Binding:]
!begin_verbatim
int16_t xfrm_popup( OBJECT *tree, int16_t x, int16_t y,
                    int16_t firstscrlob, int16_t lastscrlob,
                    int16_t nlines,
                    void  cdecl (*init)(OBJECT *tree,
                    int16_t scrollpos,
                    int16_t nlines, void *param),
                    void *param, int16_t *lastscrlpos )
{
   int_in[0]  = x;
   int_in[1]  = y;
   int_in[2]  = firstscrlob;
   int_in[3]  = lastscrlob;
   int_in[4]  = nlines;
   int_in[5]  = *lastscrlpos;
   addr_in[0] = tree;
   addr_in[1] = init;
   addr_in[2] = param;

   int_out[1] = *lastscrlpos;   /* Preset this */

   crys_if(135)
   
   *lastscrlpos = int_out[1];
   return ( int_out[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! (!nolink [Contents])
!hline
control   !! control[0] !! 135   # Function opcode
control+2 !! control[1] !! 6     # Entry in int_in
control+4 !! control[2] !! 2     # Entry in int_out
control+6 !! control[3] !! 3     # Entry in addr_in
control+8 !! control[4] !! 0     # Entry in addr_out
int_in    !! int_in[0]  !! x
int_in+2  !! int_in[1]  !! y
int_in+4  !! int_in[2]  !! firstscrlob
int_in+6  !! int_in[3]  !! lastscrlob
int_in+8  !! int_in[4]  !! nlines
int_in+10 !! int_in[5]  !! lastscrlpos
addr_in   !! addr_in[0] !! tree
addr_in+4 !! addr_in[1] !! init
addr_in+8 !! addr_in[2] !! param
int_out   !! int_out[0] !! Return value
int_out+2 !! int_out[1] !! lastscrlpos
!end_table

(!ende_liste)
!end_node
!end_node

!else

!begin_node xfrm_popup

(!begin_liste) [Beschreibung]

!item [Name:]
ØForm (!nolink [Popup])Æ - verwaltet ein (!nolink [Popup])-MenÅ

!item [AES-Nummer:]
135

!item [Deklaration:]
int16_t xfrm_popup( OBJECT *tree, int16_t x, int16_t y, int16_t firstscrlob,
        int16_t lastscrlob, int16_t nlines,
        void  cdecl (*init)(OBJECT *tree, int16_t scrollpos,
             int16_t nlines, void *param),
        void *param, int16_t *lastscrlpos )

!item [Beschreibung:]
Die Funktion stellt ein Popup-MenÅ auf dem Bildschirm dar, und Åbernimmt
dessen Verwaltung. Es gilt:

!begin_xlist !compressed [firstscrlob]
!item [Parameter]
Bedeutung
!item [~]
~
!item [tree]
Adresse des Objektbaumes
!item [x]
x-Koordinate
!item [y]
y-Koordinate, um die die Box zentriert werden soll.

!item [firstscrlob]
Objektnummer des ersten scrollenden Objekts

!item [lastscrlob]
Objektnummer des letzten scrollenden Objekts

!item [nlines]
Anzahl tatsÑchlich vorhandener Zeilen

!item [init]
Callback- Routine zum Umsetzen der Objekte.
<tree>, <param> und <nlines> sind die
Parameter, die  an xfrm_popup Åbergeben
wurden. <scrollpos> gibt die aktuelle
Scrollposition an. Sie liegt in:
0..(nlines-(lastscrlob-firstscrlob+1).
Soll das Popup nicht scrollen, muû
init == NULL Åbergeben werden.

!item [param]
benutzerdefinierter Parameter

!item [lastscrlpos]
letzte Scrollposition

!end_xlist

(!B)Hinweis:(!b) Falls die Parameter (!I)x(!i) und (!I)y(!i) den Wert 0
besitzen, werden die entsprechenden Werte aus der Objektstruktur beachtet,
und das zentrieren entfÑllt. Es wird immer dafÅr gesorgt, daû das (!nolink [Popup])
vollstÑndig auf dem Bildschirm liegt.

WÑhlbare Objekte mÅssen den Status SELECTABLE, (!I)nicht(!i) wÑhlbare
Objekte den Status DISABLED erhalten. Das Objekt mit der Nummer 0 im
Objektbaum, sollte den Typ G_BOX oder G_IBOX besitzen.

!begin_enumerate
!item  Der Objektbaum wird vor dem ersten Zeichnen automatisch durch
        Aufruf der init()- Routine initialisiert.
!item   Die Variable <scrollpos> braucht nicht initialisiert zu werden,
        das System beginnt immer bei Scrollpos 0.
!item  Die Init-Routine ist dafÅr verantwortlich, das erste/und/oder
        letzte Scrollobjekt mit einem Pfeil zu initialisieren.
!item  Die scrollenden Objekte sind <firstscrlob> .. <lastscrlob>. Die
        Objektnummern mÅssen direkt aufeinanderfolgen. Die Objekte mÅssen
        untereinander liegen und alle dieselbe Grîûe haben.
!end_enumerate


!item [Ergebnis:]
Die Funktion liefert die Nummer des gewÑhlten Objektes aus dem (!nolink [Popup])-MenÅ
oder den Wert -1.

!item [VerfÅgbar:]
Die Funktion steht ab MagiC 5.03 zur VerfÅgung.

!item [Gruppe:]
(!link [Formulare][Formularfunktionen])

!item [Querverweis:]
(!link [Binding] [Bindings fÅr xfrm_popup]) ~ OBJECT ~ form_popup

(!ende_liste)



!begin_node Bindings fÅr xfrm_popup
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t xfrm_popup( OBJECT *tree, int16_t x, int16_t y, int16_t firstscrlob,
        int16_t lastscrlob, int16_t nlines,
        void  cdecl (*init)(OBJECT *tree, int16_t scrollpos,
             int16_t nlines, void *param),
        void *param, int16_t *lastscrlpos )

!item [Umsetzung:]
!begin_verbatim
int16_t xfrm_popup( OBJECT *tree, int16_t x, int16_t y,
                    int16_t firstscrlob, int16_t lastscrlob,
                    int16_t nlines,
                    void  cdecl (*init)(OBJECT *tree,
                    int16_t scrollpos,
                    int16_t nlines, void *param),
                    void *param, int16_t *lastscrlpos )
{
   int_in[0]  = x;
   int_in[1]  = y;
   int_in[2]  = firstscrlob;
   int_in[3]  = lastscrlob;
   int_in[4]  = nlines;
   int_in[5]  = *lastscrlpos;
   addr_in[0] = tree;
   addr_in[1] = init;
   addr_in[2] = param;

   int_out[1] = *lastscrlpos;   /* vorbesetzen */

   crys_if(135)
   
   *lastscrlpos = int_out[1];
   return ( int_out[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 135   # Opcode der Funktion
control+2 !! control[1] !! 6     # EintrÑge in int_in
control+4 !! control[2] !! 2     # EintrÑge in int_out
control+6 !! control[3] !! 3     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
int_in    !! int_in[0]  !! x
int_in+2  !! int_in[1]  !! y
int_in+4  !! int_in[2]  !! firstscrlob
int_in+6  !! int_in[3]  !! lastscrlob
int_in+8  !! int_in[4]  !! nlines
int_in+10 !! int_in[5]  !! lastscrlpos
addr_in   !! addr_in[0] !! tree
addr_in+4 !! addr_in[1] !! init
addr_in+8 !! addr_in[2] !! param
int_out   !! int_out[0] !! Return-Wert
int_out+2 !! int_out[1] !! lastscrlpos
!end_table

(!ende_liste)
!end_node
!end_node

!endif
