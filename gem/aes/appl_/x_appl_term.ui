!iflang [english]

!begin_node x_appl_term
(!begin_liste) [Availability]
!item [Name:]
ØTerminate applicationÆ - Terminate an application and remove it from memory
(Geneva).

!item [Opcode:]
28931

!item [Syntax:]
int16_t x_appl_term( int16_t apid, int16_t retrn, int16_t set_me );

!item [Description:]
The call x_appl_term will cause an application to terminate. It is similar to
shel_write mode 4, except that it allows for just one application to be
terminated.

!begin_itemize !compressed
   !item (!I)apid(!i) is the application ID of the application to be terminated.
   !item (!I)retrn(!i) is a value which is returned to the program which launched the
     application; this should usually correspond to a (!nolink [GEMDOS]) error
     number, or 0 for no error.
	!item The (!I)set_me(!i) parameter must always be non-zero.
!end_itemize
If the application to be terminated does not recognize the AP_TERM
message, the user will first be presented with an alert box confirming
that he wants to terminate.

!item [(!nolink [Return]) value:]
0: The application was not found

!item [Availability:]
The function is available only under Geneva.

!item [Group:]
Application library

!item [See also:]
(!link [Binding] [Bindings for x_appl_font])
(!ende_liste)



!begin_node Bindings for x_appl_term
!ignore_index
(!begin_liste) [GEM-Arrays]
!item [C:]
int16_t x_appl_term( int16_t apid, int16_t retrn, int16_t set_me );
!item [Binding:]
!begin_verbatim
int16_t x_appl_term( int16_t apid, int16_t retrn,
                     int16_t set_me )
{
   int_in[0]  = apid;
   int_in[1]  = retrn;
   int_in[2]  = set_me;
   return ( crys_if(28931) );
}
!end_verbatim
!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! (!nolink [Contents])
!hline
control !! control[0] !! 28931  # Function opcode
control+2 !! control[1] !! 3      # Entry in int_in
control+4 !! control[2] !! 1      # Entry in int_out
control+6 !! control[3] !! 0      # Entry in addr_in
control+8 !! control[4] !! 0      # Entry in addr_out
int_in !! int_in[0] !! apid
int_in+2 !! int_in[1] !! retrn
int_in+4 !! int_in[2] !! set_me
int_out !! int_out[0] !! Return value
!end_table
(!ende_liste)
!end_node
!end_node

!else

!begin_node x_appl_term
(!begin_liste) [Beschreibung]
!item [Name:]
ØTerminate applicationÆ - Terminate an application and remove it from memory
(Geneva).

!item [AES-Nummer:]
28931

!item [Deklaration:]
int16_t x_appl_term( int16_t apid, int16_t retrn, int16_t set_me );

!item [Beschreibung:]
The call x_appl_term will cause an application to terminate. It is similar to
shel_write mode 4, except that it allows for just one application to be
terminated.

!begin_itemize !compressed
   !item (!I)apid(!i) is the application ID of the application to be terminated.
   !item (!I)retrn(!i) is a value which is returned to the program which launched the
     application; this should usually correspond to a (!nolink [GEMDOS]) error
     number, or 0 for no error.
	!item The (!I)set_me(!i) parameter must always be non-zero.
!end_itemize
If the application to be terminated does not recognize the AP_TERM
message, the user will first be presented with an alert box confirming
that he wants to terminate.

!item [Ergebnis:]
0: The application was not found

!item [VerfÅgbar:]
Die Funktion steht nur unter Geneva zur VerfÅgung.

!item [Gruppe:]
(!link [Applikationen][Applikationsfunktionen])
!item [Querverweis:]
(!link [Binding] [Bindings fÅr x_appl_term])
(!ende_liste)



!begin_node Bindings fÅr x_appl_term
!ignore_index
(!begin_liste) [GEM-Arrays]
!item [C:]
int16_t x_appl_term( int16_t apid, int16_t retrn, int16_t set_me );
!item [Umsetzung:]
!begin_verbatim
int16_t x_appl_term( int16_t apid, int16_t retrn,
                     int16_t set_me )
{
   int_in[0]  = apid;
   int_in[1]  = retrn;
   int_in[2]  = set_me;
   return ( crys_if(28931) );
}
!end_verbatim
!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control !! control[0] !! 28931  # Opcode der Funktion
control+2 !! control[1] !! 3      # EintrÑge in int_in
control+4 !! control[2] !! 1      # EintrÑge in int_out
control+6 !! control[3] !! 0      # EintrÑge in addr_in
control+8 !! control[4] !! 0      # EintrÑge in addr_out
int_in !! int_in[0] !! apid
int_in+2 !! int_in[1] !! retrn
int_in+4 !! int_in[2] !! set_me
int_out !! int_out[0] !! Return-Wert
!end_table
(!ende_liste)
!end_node
!end_node

!endif
