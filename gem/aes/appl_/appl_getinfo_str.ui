!iflang [english]

!begin_node appl_getinfo_str
(!begin_liste) [Availability]
!item [Name:]
ØApplication get informationÆ - Inquire extended infor!-mation about available
function calls and properties.
!item [Opcode:]
130
!item [Syntax:]
int16_t appl_getinfo_str ( int16_t ap_gtype, int16_t *ap_gout1, int16_t *ap_gout2,
                    int16_t *ap_gout3, int16_t *ap_gout4 );

!item [Description:]
The call appl_getinfo_str is an extended version of  appl_getinfo. Instead of the
integer values, it returns character strings.

(!I)ap_gtype(!i) determines the type of information that is to be inquired for.
Details are as follows:

(!B)96: AES Version(!b)
!begin_xlist !compressed [ap_gout1]
!item [ap_gout1:]
This is a character string with a fixed length of 8 bytes, into which the
(!nolink [AES]) will write its unique (!nolink [AES]) ID. The (!nolink [AES])
ID is a left-aligned, space padded string, and can be considered to be the
current (!nolink [AES])'s short name. For (!nolink [XaAES]) this string is
filled with "(!nolink [XaAES])". This string is not NULL-terminated.
                          
!item [ap_gout2:]
This is a character buffer that the application must ensure can take up to 256
(255 + '0' termination) characters. The (!nolink [AES]) fills its long name
description into this buffer. Lines in here are delimitted using CR (ASCII 13).
For (!nolink [XaAES]), this buffer contains the following after the call:

"(!nolink [XaAES]) Ain't the (!nolink [AES]), a free MultiTasking
(!nolink [AES]) for FreeMiNT"

!item [ap_gout3:]
This is a character buffer that the application must ensure can take up to 256
(255 + '0' termination) characters. The (!nolink [AES]) fills this buffer with
the following information where each element is delimitted by the "|" (ASCII 0x7c)
character. The string is constructed as follows: (!nl)

"asci version|development status| architecture target| build date & time|
compiler used",0 (!nl)

Example string returned might be: (!nl)
"0.992|Alpha|m68k|Dec 17 2004 22:58:52|gcc 2.95.3",0

!item [ap_gout4:]
Reserved, set to NULL.
!end_xlist

(!B)Note:(!b) A problem with this function consists of establishing just when
it may be called. Although it ought to be present as of (!nolink [AES]) version
4.0, MagiC 2.0 (and also MagiC 3.0) for example show the version 3.99. For
this reason many programmers define the function appl_xgetinfo, in which a check
is made whether appl_getinfo is present in the current system envi!-ronment.

!item [(!nolink [Return]) value:]
A return value of 0 indicates an error; with a value of 1, no error has arisen.

!item [Availability:]
As of (!nolink [XaAES]) from 2004-12-18.

!item [Group:]
Application library

!item [See also:]
(!link [Binding] [Bindings for appl_getinfo_str]) ~ appl_getinfo

(!ende_liste)



!begin_node Bindings for appl_getinfo_str
!ignore_index
(!begin_liste) [GEM-Arrays]
!item [C:]
int16_t appl_getinfo_str ( int16_t ap_gtype, int16_t *ap_gout1, int16_t *ap_gout2,
                    int16_t *ap_gout3, int16_t *ap_gout4 );
!item [Binding:]
!begin_verbatim
int16_t appl_getinfo_str(int16_t ap_gtype, int16_t *ap_gout1,
                         int16_t *ap_gout2, int16_t *ap_gout3,
                         int16_t *ap_gout4)
{
   int_in[0] = ap_gtype;

   addr_in[0] = (int32_t)ap_out1;
   addr_in[1] = (int32_t)ap_out2;
   addr_in[2] = (int32_t)ap_out3;
   addr_in[3] = (int32_t)ap_out4;

   crys_if (130);

   return ( int_out[0] );
}
!end_verbatim
!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! (!nolink [Contents])
!hline
control   !! control[0] !! 130   # Function opcode
control+2 !! control[1] !! 1     # Entry in int_in
control+4 !! control[2] !! 1     # Entry in int_out
control+6 !! control[3] !! 4     # Entry in addr_in
control+8 !! control[4] !! 0     # Entry in addr_out
int_in     !! int_in[0] !! ap_gtype
addr_in    !! addr_in[0] !! ap_gout1
addr_in+4  !! addr_in[1] !! ap_gout2
addr_in+8  !! addr_in[2] !! ap_gout3
addr_in+12 !! addr_in[3] !! ap_gout4
int_out    !! int_out[0] !! Return value
!end_table
(!ende_liste)
!end_node
!end_node


!else

!begin_node appl_getinfo_str
(!begin_liste) [Beschreibung]
!item [Name:]
ØApplication get informationÆ - Informationen Åber vorhandene
Funktionsaufrufe und Eigenschaften erfragen.
!item [AES-Nummer:]
130
!item [Deklaration:]
int16_t appl_getinfo_str ( int16_t ap_gtype, int16_t *ap_gout1, int16_t *ap_gout2,
                    int16_t *ap_gout3, int16_t *ap_gout4 );

!item [Beschreibung:]
Dies ist eine erweiterte Version von appl_getinfo. Statt der integer Werte liefert sie
Zeichenketten zurÅck.

(!I)ap_gtype(!i) bestimmt die Art der Informationen, die erfragt werden
sollen. Es bedeutet:

(!B)96: AES Version(!b)
!begin_xlist !compressed [ap_gout1]
!item [ap_gout1:]
This is a character string with a fixed length of 8 bytes,
into which the AES will write its unique AES ID.
the AES ID is a left-aligned, space padded string, and can
be considered to be the current AES's short name.
For XaAES this string is filled with "   XaAES".
This string is not null-terminated.
!item [ap_gout2:]
This is a character buffer that the application must ensure
can take up to 256 (255 + 0 termination) characters. The AES
fills its long name description into this buffer. Lines in
here are delimitted using CR (ascii 13). For XaAES, this
buffer contains the following after the call;

"XaAES Ain't the AES, a free MultiTasking AES for FreeMiNT"

!item [ap_gout3:]
This is a character buffer that the application must ensure
can take up to 256 (255 + 0 termination) characters. The AES
fills this buffer with the following information where each
element is delimitted by the "|" (ascii 0x7c) character.
The string is constructed as follows;
 (!nl)
"asci version|development status|architecture target|
build date & time|compiler used",0
 (!nl)
Example string returned might be; (!nl)
"0.992|Alpha|m68k|Dec 17 2004 22:58:52|gcc 2.95.3",0
!item [ap_gout4:]
  reserved, set to NULL.
!end_xlist


(!B)Hinweis:(!b) Ein Problem dieser Funktion besteht darin, festzustellen,
wann sie Åberhaupt aufgerufen werden darf. Zwar sollte sie ab AES-Version
4.0 vorhanden sein, MagiC 2.0 (und auch MagiC 3.0) besitzt
aber beispielsweise die Version 3.99. Aus diesem Grund definieren viele
Programmierer die Funktion appl_xgetinfo, in der ÅberprÅft wird, ob
appl_getinfo in der aktuellen Systemumgebung vorhanden ist.

!item [Ergebnis:]
Ein RÅckgabewert von 0 zeigt einen Fehler an; bei einem Wert von 1 ist kein
Fehler aufgetreten.

!item [VerfÅgbar:]
since XaAES from 2004-12-18

!item [Gruppe:]
(!link [Applikationen][Applikationsfunktionen])
!item [Querverweis:]
(!link [Binding] [Bindings fÅr appl_getinfo_str]) ~ appl_getinfo

(!ende_liste)



!begin_node Bindings fÅr appl_getinfo_str
!ignore_index
(!begin_liste) [GEM-Arrays]
!item [C:]
int16_t appl_getinfo_str ( int16_t ap_gtype, int16_t *ap_gout1, int16_t *ap_gout2,
                    int16_t *ap_gout3, int16_t *ap_gout4 );
!item [Umsetzung:]
!begin_verbatim
int16_t appl_getinfo_str(int16_t ap_gtype, int16_t *ap_gout1,
                         int16_t *ap_gout2, int16_t *ap_gout3,
                         int16_t *ap_gout4)
{
   int_in[0] = ap_gtype;

   addr_in[0] = (int32_t)ap_out1;
   addr_in[1] = (int32_t)ap_out2;
   addr_in[2] = (int32_t)ap_out3;
   addr_in[3] = (int32_t)ap_out4;

   crys_if (130);

   return ( int_out[0] );
}
!end_verbatim
!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 130   # Opcode der Funktion
control+2 !! control[1] !! 1     # EintrÑge in int_in
control+4 !! control[2] !! 1     # EintrÑge in int_out
control+6 !! control[3] !! 4     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
int_in     !! int_in[0] !! ap_gtype
addr_in    !! addr_in[0] !! ap_gout1
addr_in+4  !! addr_in[1] !! ap_gout2
addr_in+8  !! addr_in[2] !! ap_gout3
addr_in+12 !! addr_in[3] !! ap_gout4
int_out    !! int_out[0] !! Return-Wert
!end_table
(!ende_liste)
!end_node

!end_node

!endif
