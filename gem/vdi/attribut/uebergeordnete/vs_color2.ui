!iflang [english]

!begin_node vs_color2

(!begin_liste) [Availability]

!item [Name:]
ØSet color representation-2Æ - Set color intensity and color for attributes.

!item [Opcode:]
138 (Opcode 0,1,2)

!item [Syntax:]
void vs_color2 ( int16_t handle, int16_t *rgb, int16_t index );

!item [Description:]
The call vs_color2 sets the color intensity and color for certain attribute
functions. The following apply:

!begin_xlist !compressed [Parameter]
!item [Parameter]
Meaning
!item [~]
~
!item [handle]
Workstation identifier
!item [rgb[0!]]
Red portion in tenths of a percent
!item [rgb[1!]]
Green portion in tenths of a percent
!item [rgb[2!]]
Blue portion in tenths of a percent
!item [index]
Color number
!end_xlist

(!B)Note:(!b) The function is available (!I)directly(!i) only under
PC-(!nolink [GEM]). However it can be emulated on the Atari, which
some applications (e.g. Kandinsky and GEM) actually do.
               
It works similarly to vs_color, with the difference that with an opcode of

!begin_xlist !compressed
!item [0]
the text color
!item [1]
the fill color
!item [2]
the line color
!end_xlist
is altered, and so the corresponding calls of vsl_color etc. are no longer
necessary. Due to lack of documen!-tation, one unfortunately (!I)cannot(!i)
say for certain whether the name of the function (vs_color2) is really
correct.
               
!item [(!nolink [Return]) value:]
Die Funktion liefert kein Ergebnis zurÅck.The function does not return a result.

!item [Availability:]
The above statement cannot be confirmed. It is to be assumed that the function
v_setrgb is actually meant here; however the passing of parameters is somewhat
different.
               
!item [Group:]
Superior attributes

!item [See also:]
(!link [Binding] [Bindings for vs_color2]) ~ v_setrgb ~  vs_color   vswr_mode

(!ende_liste)
!end_node



!begin_node Bindings for vs_color2
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
void vs_color2 ( int16_t handle, int16_t *rgb, int16_t index );

!item [Binding:]
!begin_verbatim
void vs_color2 (int16_t handle, int16_t *rgb, int16_t index)
{
   int16_t i;

   for (i=0; i<3; i++)
      intin[i] = *rgb;	

   intin[3] = index;

   contrl[0] = 138;
   contrl[1] = 0;
   contrl[3] = 4;
   contrl[5] = opcode;
   contrl[6] = handle;

   vdi ();
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! Contents
!hline
contrl    !! contrl[0]   !! 138   # Function Opcode
contrl+2  !! contrl[1]   !! 0     # entry in ptsin
contrl+4  !! contrl[2]   !! 0     # entry in ptsout
contrl+6  !! contrl[3]   !! 4     # entry in intin
contrl+8  !! contrl[4]   !! 0     # entry in intout
contrl+10 !! contrl[5]   !! opcode
contrl+12 !! contrl[6]   !! handle
intin     !! intin[0..2] !! rgb
intin+6   !! intin[3]    !! index
!end_table

(!ende_liste)
!end_node

!else

!begin_node vs_color2

(!begin_liste) [Beschreibung]

!item [Name:]
ØSet Color Representation-2Æ - FarbintensitÑt und Farbe fÅr Attribute
festlegen.

!item [VDI-Nummer:]
138 (Opcode 0,1,2)

!item [Deklaration:]
void vs_color2 ( int16_t handle, int16_t *rgb, int16_t index );

!item [Beschreibung:]
Die Funktion legt die FarbintensitÑt und Farbe fÅr bestimmte
Attributfunktionen fest. Es gilt:

!begin_xlist !compressed [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [rgb[0!]]
Rotanteil in Promille
!item [rgb[1!]]
GrÅnanteil in Promille
!item [rgb[2!]]
Blauanteil in Promille
!item [index]
Farbnummer
!end_xlist

(!B)Hinweis:(!b) Die Funktion steht (!I)direkt(!i) nur unter PC-(!nolink [GEM]) zur
VerfÅgung. Sie kann jedoch auf dem Atari nachgebildet werden, was von
einigen Applikationen (z.B. Kandinsky und GEM) auch tatsÑchlich gemacht wird.

Sie arbeitet Ñhnlich wie vs_color, mit dem Unterschied, daû bei einem Opcode
von

!begin_xlist !compressed
!item [0]
die Textfarbe,
!item [1]
die FÅllfarbe,
!item [2]
die Linienfarbe
!end_xlist

geÑndert wird, und somit die entsprechenden Aufrufe von vsl_color etc. nicht
mehr notwendig sind. Ob der Name der Funktion (vs_color2) wirklich stimmt,
kann mangels Dokumentation leider (!I)nicht(!i) mit Sicherheit gesagt
werden.

!item [Ergebnis:]
Die Funktion liefert kein Ergebnis zurÅck.

!item [VerfÅgbar:]
Obige Aussage kann nicht bestÑtigt werden. Es ist zu vermuten das hier
eigentlich die Funktion v_setrgb gemeint. Allerdings ist die öbergabe der
Parameter etwas anderst.

!item [Gruppe:]
Åbergeordnete Attribute

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vs_color2]) ~ v_setrgb ~  vs_color   vswr_mode

(!ende_liste)
!end_node



!begin_node Bindings fÅr vs_color2
!ignore_index

(!begin_liste) [Umsetzung]

!item [C:]
void vs_color2 ( int16_t handle, int16_t *rgb, int16_t index );

!item [Umsetzung:]
!begin_verbatim
void vs_color2 (int16_t handle, int16_t *rgb, int16_t index)
{
   int16_t i;

   for (i=0; i<3; i++)
      intin[i] = *rgb;	

   intin[3] = index;

   contrl[0] = 138;
   contrl[1] = 0;
   contrl[3] = 4;
   contrl[5] = opcode;
   contrl[6] = handle;

   vdi ();
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0]   !! 138   # Opcode der Funktion
contrl+2  !! contrl[1]   !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2]   !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3]   !! 4     # EintrÑge in intin
contrl+8  !! contrl[4]   !! 0     # EintrÑge in intout
contrl+10 !! contrl[5]   !! opcode
contrl+12 !! contrl[6]   !! handle
intin     !! intin[0..2] !! rgb
intin+6   !! intin[3]    !! index
!end_table

(!ende_liste)
!end_node

!endif
