!iflang [english]

!begin_node v_alpha_text

(!begin_liste) [Availability]

!item [Name:]
ØOutput alpha textÆ - Output a line of alpha text in text mode to a printer
or metafile.

!item [Opcode:]
5 (Escape 25)

!item [Syntax:]
void v_alpha_text ( int16_t handle, int8_t *string );

!item [Description:]
The call v_alpha_text outputs a line of alpha text in text mode to a printer
(or metafile) at the current position of the printhead. The following apply:

!begin_xlist !compressed [Parameter]
!item [Parameter]
Meaning
!item [~]
~
!item [handle]
Workstation identifier
!item [string]
Address of text string (NULL-termminated)
!end_xlist

(!B)Note:(!b) The output is (!I)not(!i) made in graphic mode. Two special
BYTE codes may be embedded in the text for (!nolink [control]) functions that are
standardized for all printers ('DC2' corresponds to ASCII 18):

!begin_xlist !compressed [Code]
!item [Code]
Meaning
!item [~]
~
!item [DC2 0]
Enable bold print
!item [DC2 1]
Disable bold print
!item [DC2 2]
Enable italic print
!item [DC2 3]
Disable italic print
!item [DC2 4]
Enable underlining
!item [DC2 5]
Disable underlining
!item [DC2 6]
Enable superscript
!item [DC2 7]
Disable superscript
!item [DC2 8]
Enable subscript
!item [DC2 9]
Disable subscript
!item [DC2 A]
Enable NLQ mode
!item [DC2 B]
Disable NLQ mode
!item [DC2 C]
Enable wide printing
!item [DC2 D]
Disable wide printing
!item [DC2 E]
Enable light printing
!item [DC2 F]
Disable light printing
!item [DC2 G]
~
!item [:]
~
!item [:]
~
!item [DC2 V]
Reserved, will be ignored
!item [DC2 W]
Switch to pica printing (10 cpi)
!item [DC2 X]
Switch to elite printing (12 cpi)
!item [DC2 Y]
Toggle compressed printing
!item [DC2 Z]
Toggle proportional printing
!end_xlist

In addition, form-feed with the ASCII value 12 is supported. Under
PC-(!nolink [GEM]), graphics can be taken into account as well; the
syntax in this case is:

(ESC)(ESC)GEM,x,y,w,h,C:\pathname\filename.img

The parameters (!I)x, y, w(!i) and (!I)h(!i) for this are to be given in
character units relative to the current cursor position.

!item [(!nolink [Return]) value:]
The function does not return a result.

!item [Availability:]
Supported by all printer and metafile drivers.

!item [Group:]
Text functions

!item [See also:]
(!link [Binding] [Bindings for v_alpha_text]) ~
(!link [OUT file format][The OUT file format])

(!ende_liste)
!end_node



!begin_node Bindings for v_alpha_text
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
void v_alpha_text ( int16_t handle, int8_t *string );

!item [Binding:]
!begin_verbatim
void v_alpha_text (int16_t handle, int8_t *string)
{
   int16_t *tmp;

   tmp = intin;
   while (*tmp++ = *string++)
      ;

   contrl[0] = 5;
   contrl[1] = 0;
   contrl[3] = ((int16_t) (tmp-intin)-1);
   contrl[5] = 25;
   contrl[6] = handle;

   vdi ();
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! Contents
!hline
contrl    !! contrl[0]     !! 5     # Function opcode
contrl+2  !! contrl[1]     !! 0     # Entry in ptsin
contrl+4  !! contrl[2]     !! 0     # Entry in ptsout
contrl+6  !! contrl[3]     !! n     # Entry in intin
contrl+8  !! contrl[4]     !! 0     # Entry in intout
contrl+10 !! contrl[5]     !! 25    # Escape/Sub-opcode
contrl+12 !! contrl[6]     !! handle
intin     !! intin[0..n-1] !! string[0..n-1]
!end_table

(!ende_liste)
!end_node

!else

!begin_node v_alpha_text

(!begin_liste) [Beschreibung]

!item [Name:]
ØOutput Alpha TextÆ - Ausgabe von Text im Textmodus

!item [VDI-Nummer:]
5 (Escape 25)

!item [Deklaration:]
void v_alpha_text ( int16_t handle, int8_t *string );

!item [Beschreibung:]
Die Funktion gibt einen Text an der aktuellen Position des Druckkopfes aus.
Es gilt:

!begin_xlist !compressed [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [string]
Adresse der Zeichenkette
!end_xlist

(!B)Hinweis:(!b) Die Ausgabe erfolgt (!I)nicht(!i) im Grafik-Modus. Wichtige
Steuerfunktionen sind fÅr alle Druckertypen genormt:

!begin_xlist !compressed [Code]
!item [Code]
Bedeutung
!item [~]
~
!item [DC2 0]
Fettschrift ein
!item [DC2 1]
Fettschrift aus
!item [DC2 2]
Kursiv ein
!item [DC2 3]
Kursiv aus
!item [DC2 4]
Unterstrichen ein
!item [DC2 5]
Unterstrichen aus
!item [DC2 6]
Superscript ein
!item [DC2 7]
Superscript aus
!item [DC2 8]
Subscript ein
!item [DC2 9]
Subscript aus
!item [DC2 A]
BriefqualitÑt-Modus ein
!item [DC2 B]
BriefqualitÑt-Modus aus
!item [DC2 C]
Breitschrift ein
!item [DC2 D]
Breitschrift aus
!item [DC2 E]
helle Schrift ein
!item [DC2 F]
helle Schrift aus
!item [DC2 G]
~
!item [:]
~
!item [:]
~
!item [DC2 V]
reserviert, wird ignoriert
!item [DC2 W]
Pica-Schrift (10 cpi)
!item [DC2 X]
Elite-Schrift (12 cpi)
!item [DC2 Y]
komprimierter Druck
!item [DC2 Z]
Proportionalschrift
!end_xlist

DarÅber hinaus wird auch ein Seitenvorschub (Formfeed) mit dem ASCII-Wert 12
unterstÅtzt. Unter PC-GEM kînnen auch Grafiken berÅcksichtigt werden; die
Syntax lautet in diesem Fall:

(ESC)(ESC)GEM,x,y,w,h,C:\pathname\filename.img

Die Parameter x,y,w und h sind dabei in Zeicheneinheiten relativ zur
aktuellen Cursorposition anzugeben.

!item [Ergebnis:]
Die Funktion liefert kein Ergebnis.

!item [VerfÅgbar:]
Supported by all printer and metafile drivers.

!item [Gruppe:]
Text-Funktionen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr v_alpha_text]) ~
(!link [OUT-Dateiformat][Das OUT-Dateiformat])

(!ende_liste)
!end_node



!begin_node Bindings fÅr v_alpha_text
!ignore_index

(!begin_liste) [Umsetzung]

!item [C:]
void v_alpha_text ( int16_t handle, int8_t *string );

!item [Umsetzung:]
!begin_verbatim
void v_alpha_text (int16_t handle, int8_t *string)
{
   int16_t *tmp;

   tmp = intin;
   while (*tmp++ = *string++)
      ;

   contrl[0] = 5;
   contrl[1] = 0;
   contrl[3] = ((int16_t) (tmp-intin)-1);
   contrl[5] = 25;
   contrl[6] = handle;

   vdi ();
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0]     !! 5     # Opcode der Funktion
contrl+2  !! contrl[1]     !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2]     !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3]     !! n     # EintrÑge in intin
contrl+8  !! contrl[4]     !! 0     # EintrÑge in intout
contrl+10 !! contrl[5]     !! 25    # Escape/Sub-Opcode
contrl+12 !! contrl[6]     !! handle
intin     !! intin[0..n-1] !! string[0..n-1]
!end_table

(!ende_liste)
!end_node

!endif
