!iflang [english]

!begin_node vm_pagesize

(!begin_liste) [Availability]

!item [Name:]
Ø(!nolink [VDI]) page sizeÆ - Set the physical page size for metafiles.

!item [Opcode:]
5 (Escape 99, Opcode 0)

!item [Syntax:]
void vm_pagesize ( int16_t handle, int16_t pgwidth, int16_t pgheight );

!item [Description:]
The call vm_pagesize sets the metafile's source page size in 1/10 mm. The
following apply:

!begin_xlist !compressed [Parameter]
!item [Parameter]
Meaning
!item [~]
~
!item [handle]
Workstation identifier
!item [pgwidth]
Page width in 1/10 mm
!item [pgheight]
Page height in 1/10 mm
!end_xlist

(!B)Note:(!b) As the width and height of a page may be set separately, it is
also possible to create graphics in landscape format (width greater than the
height).

!item [(!nolink [Return]) value:]
The function does not return a result.

!item [Availability:]
Supported by all metafile drivers.

!item [Group:]
Metafile functions

!item [See also:]
(!link [Binding] [Bindings for vm_pagesize]) ~ v_write_meta ~ Metafile format ~
(!link [sub-opcodes][Metafile sub-opcodes])

(!ende_liste)
!end_node



!begin_node Bindings for vm_pagesize
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
void vm_pagesize ( int16_t handle, int16_t pgwidth, int16_t pgheight );

!item [Binding:]
!begin_verbatim
void vm_pagesize (int16_t handle, int16_t pgwidth,
                  int16_t pgheight)
{
   intin[0] = 0;
   intin[1] = pgwidth;
   intin[2] = pgheight;

   contrl[0] = 5;
   contrl[1] = 0;
   contrl[3] = 3;
   contrl[5] = 99;
   contrl[6] = handle;

   vdi ();
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! Contents
!hline
contrl    !! contrl[0] !! 5     # Function opcode
contrl+2  !! contrl[1] !! 0     # Entry in ptsin
contrl+4  !! contrl[2] !! 0     # Entry in ptsout
contrl+6  !! contrl[3] !! 3     # Entry in intin
contrl+8  !! contrl[4] !! 0     # Entry in intout
contrl+10 !! contrl[5] !! 99
contrl+12 !! contrl[6] !! handle
intin     !! intin[0]  !! 0     # Sub-opcode
intin+2   !! intin[1]  !! pgwidth
intin+4   !! intin[2]  !! pgheight
!end_table

(!ende_liste)
!end_node

!else

!begin_node vm_pagesize

(!begin_liste) [Beschreibung]

!item [Name:]
ØVDI page sizeÆ - legt die physikalische Seitengrîûe fÅr Metafiles fest.

!item [VDI-Nummer:]
5 (Escape 99, Opcode 0)

!item [Deklaration:]
void vm_pagesize ( int16_t handle, int16_t pgwidth, int16_t pgheight );

!item [Beschreibung:]
Die Funktion setzt die Seitengrîûe in 1/10mm. Es gilt:

!begin_xlist !compressed [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [pgwidth]
Breite in 1/10 mm
!item [pgheight]
Hîhe in 1/10 mm
!end_xlist

(!B)Hinweis:(!b) Da Breite und Hîhe einer Seite getrennt eingestellt werden,
ist es auch mîglich, Grafiken im Querformat zu erstellen (Breite grîûer als
die Hîhe).

!item [Ergebnis:]
Die Funktion liefert kein Ergebnis.

!item [VerfÅgbar:]
Supported by all metafile drivers.

!item [Gruppe:]
Metafile-Funktionen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vm_pagesize]) ~  v_write_meta ~ Metafile-Format ~
(!link [Sub-Opcodes][Metafile Sub-Opcodes])

(!ende_liste)
!end_node



!begin_node Bindings fÅr vm_pagesize
!ignore_index

(!begin_liste) [Umsetzung]

!item [C:]
void vm_pagesize ( int16_t handle, int16_t pgwidth, int16_t pgheight );

!item [Umsetzung:]
!begin_verbatim
void vm_pagesize (int16_t handle, int16_t pgwidth,
                  int16_t pgheight)
{
   intin[0] = 0;
   intin[1] = pgwidth;
   intin[2] = pgheight;

   contrl[0] = 5;
   contrl[1] = 0;
   contrl[3] = 3;
   contrl[5] = 99;
   contrl[6] = handle;

   vdi ();
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0] !! 5     # Opcode der Funktion
contrl+2  !! contrl[1] !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2] !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3] !! 3     # EintrÑge in intin
contrl+8  !! contrl[4] !! 0     # EintrÑge in intout
contrl+10 !! contrl[5] !! 99
contrl+12 !! contrl[6] !! handle
intin     !! intin[0]  !! 0     # Unter-Opcode
intin+2   !! intin[1]  !! pgwidth
intin+4   !! intin[2]  !! pgheight
!end_table

(!ende_liste)
!end_node

!endif
