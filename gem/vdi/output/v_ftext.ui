!iflang [english]

!begin_node v_ftext

(!begin_liste) [Availability]

!item [Name:]
ØOutput Outlined TextÆ - Output an outline (vector) font text.

!item [Opcode:]
241

!item [Syntax:]
void v_ftext ( int16_t handle, int16_t x, int16_t y, int8_t *string );

!item [Description:]
The call v_ftext outputs an outline (vector) text string (NULL-terminated) to
a workstation, paying regard to spacing remainders. The following apply:

!begin_xlist !compressed [Parameter]
!item [Parameter]
Meaning
!item [~]
~
!item [handle]
Workstation identifier
!item [x]
X-coordinate, (!U)and(!u)
!item [y]
Y-coordinate of starting position
!item [string]
Pointer to text string (NULL-terminated)
!end_xlist

(!B)Notes:(!b) In contrast to v_gtext, the function respects also the set
(!nolink [kerning]) attributes, and takes the remainder amounts from
vqt_f_extent into account; it also calculates internally with a precision of
1/65536 pixels, both of which ensure better positioning of the individual
characters.

To output 16-bit Speedo character strings, you can use v_ftext16.

!item [(!nolink [Return]) value:]
The function does not return a result.

!item [Availability:]
FSMGDOS, SpeedoGDOS 4.00 onwards, and as of NVDI 3.00.

!item [Group:]
Output functions

!item [See also:]
(!link [Binding] [Bindings for v_ftext]) ~ v_gtext ~ v_ftext_offset ~ SpeedoGDOS ~
NVDI ~ fix31

(!ende_liste)
!end_node



!begin_node Bindings for v_ftext
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
void v_ftext ( int16_t handle, int16_t x, int16_t y, int8_t *string );

!item [Binding:]
!begin_verbatim
void v_ftext (int16_t handle, int16_t x, int16_t y,
              int8_t *string)
{
   int16_t i;

   ptsin[0]  = x;
   ptsin[1]  = y;

   i = 0;
   while (intin[i++] = *string++)
      ;

   contrl[0] = 241;
   contrl[1] = 1;
   contrl[3] = strlen(string);
   contrl[6] = handle;

   vdi ();
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! Contents
!hline
contrl    !! contrl[0]     !! 241   # Function Opcode
contrl+2  !! contrl[1]     !! 1     # entry in ptsin
contrl+4  !! contrl[2]     !! 0     # entry in ptsout
contrl+6  !! contrl[3]     !! n     # entry in intin
contrl+8  !! contrl[4]     !! 0     # entry in intout
contrl+12 !! contrl[6]     !! handle
intin     !! intin[0..n-1] !! string[0..n-1]
ptsin     !! ptsin[0]      !! x
ptsin+2   !! ptsin[1]      !! y
!end_table

(!B)Note:(!b) Here n = strlen(string);

(!ende_liste)
!end_node

!else

!begin_node v_ftext

(!begin_liste) [Beschreibung]

!item [Name:]
ØOutput Outlined TextÆ - gibt einen Text per Vektorfont aus.

!item [VDI-Nummer:]
241

!item [Deklaration:]
void v_ftext ( int16_t handle, int16_t x, int16_t y, int8_t *string );

!item [Beschreibung:]
Die Funktion gibt einen Text auf einer Workstation aus. Es gilt:

!begin_xlist !compressed [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [x]
x-Koordinate
!item [y]
y-Koordinate des Textes
!item [string]
Adresse der Zeichenkette
!end_xlist

(!B)Hinweis:(!b) Die Funktion beachtet im Gegensatz zu v_gtext auch die
eingestellten Kerning-Attribute, und rechnet intern mit einer Genauigkeit
von 1/65536 Pixeln, wodurch eine bessere Positionierung der Zeichen
gewÑhrleistet ist.

!item [Ergebnis:]
Die Funktion liefert kein Ergebnis.

!item [VerfÅgbar:]
FSMGDOS, ab SpeedoGDOS 4.00 und ab NVDI 3.00

!item [Gruppe:]
Ausgabefunktionen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr v_ftext]) ~ v_gtext ~ v_ftext_offset ~ SpeedoGDOS ~
NVDI ~ fix31

(!ende_liste)
!end_node



!begin_node Bindings fÅr v_ftext
!ignore_index

(!begin_liste) [Umsetzung]

!item [C:]
void v_ftext ( int16_t handle, int16_t x, int16_t y, int8_t *string );

!item [Umsetzung:]
!begin_verbatim
void v_ftext (int16_t handle, int16_t x, int16_t y,
              int8_t *string)
{
   int16_t i;

   ptsin[0]  = x;
   ptsin[1]  = y;

   i = 0;
   while (intin[i++] = *string++)
      ;

   contrl[0] = 241;
   contrl[1] = 1;
   contrl[3] = strlen(string);
   contrl[6] = handle;

   vdi ();
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0]     !! 241   # Opcode der Funktion
contrl+2  !! contrl[1]     !! 1     # EintrÑge in ptsin
contrl+4  !! contrl[2]     !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3]     !! n     # EintrÑge in intin
contrl+8  !! contrl[4]     !! 0     # EintrÑge in intout
contrl+12 !! contrl[6]     !! handle
intin     !! intin[0..n-1] !! string[0..n-1]
ptsin     !! ptsin[0]      !! x
ptsin+2   !! ptsin[1]      !! y
!end_table

(!B)Hinweis:(!b) Dabei gilt n = strlen (string);

(!ende_liste)
!end_node

!endif
