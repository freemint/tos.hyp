!iflang [english]

!begin_node v_ftext_offset

(!begin_liste) [Availability]

!item [Name:]
ØOutput Outlined Text with OffsetsÆ - Output an 8-bit ASCII outline text, using
character offset vectors.

!item [Opcode:]
241

!item [Syntax:]
void v_ftext_offset ( int16_t handle, int16_t x, int16_t y, 
                      int8_t *string, int16_t *offset );

!item [Description:]
The call v_ftext_offset is a variant of v_ftext for use under SpeedoGDOS,
outputting an 8-bit ASCII character string to a workstation; one can specify
an offset vector for each character.

!begin_xlist !compressed [offset+2n-2+]
!item [Parameter]
Meaning
!item [~]
~
!item [handle]
Workstation identifier
!item [x]
X-coordinate, (!U)and(!u)
!item [y]
Y-coordinate of starting position
!item [string]
Pointer to the string (NULL-terminated)
!item [offset[0!]]
X-offset of the first character
!item [offset[1!]]
Y-offset of the first character
!item [...]
~
!item [...]
~
!item [offset[2n-2!]]
X-offset of the last character
!item [offset[2n-1!]]
Y-offset of the last character
!end_xlist

The parameter (!I)offset(!i) permits setting your own offsets in place of the
character values calculated by the system; this permits substantially better
control for positioning the characters on the output device.

(!B)Notes:(!b) The (!link [text attributes][Text attributes]) as well as the
(!link [kerning][Kerning]) settings will be respected.

To output 16-bit Speedo character strings, you can use v_ftext_offset16.
               
!item [(!nolink [Return]) value:]
The function does not return a result.

!item [Availability:]
 As of SpeedoGDOS 4.00, and NVDI 3.00 onwards.

!item [Group:]
Output functions

!item [See also:]
(!link [Binding] [Bindings for v_ftext_offset]) ~ v_gtext ~ v_ftext ~ SpeedoGDOS ~
NVDI

(!ende_liste)
!end_node



!begin_node Bindings for v_ftext_offset
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
void v_ftext_offset ( int16_t handle, int16_t x, int16_t y, 
                      int8_t *string, int16_t *offset );

!item [Binding:]
!begin_verbatim
void v_ftext_offset (int16_t handle, int16_t x, int16_t y,
                     int8_t *string, int16_t *offset)
{
   ptsin[0]  = x;
   ptsin[1]  = y;
   ptsin[2]  = offset[0];
   ptsin[3]  = offset[1];
   ptsin[4..2*n+1] = offset[2..(2*n)-1]

   intin[0..n-1] = string[0..n-1];

   contrl[0] = 241;
   contrl[1] = 1+n;
   contrl[3] = n;
   contrl[6] = handle;

   vdi ();
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! Contents
!hline
contrl    !! contrl[0]      !! 241   # Function Opcode
contrl+2  !! contrl[1]      !! 1+n   # entry in ptsin
contrl+4  !! contrl[2]      !! 0     # entry in ptsout
contrl+6  !! contrl[3]      !! n     # entry in intin
contrl+8  !! contrl[4]      !! 0     # entry in intout
contrl+12 !! contrl[6]      !! handle
intin     !! intin[0..n-1]  !! string[0..n-1]
ptsin     !! ptsin[0]       !! x
ptsin+2   !! ptsin[1]       !! y
ptsin+4   !! ptsin[2]       !! offset[0]  # X-offset 1st character
ptsin+6   !! ptsin[3]       !! offset[1]  # Y-offset 1st character
ptsin+8   !! ptsin[4..2n+1] !! offset[2..2n-1] # ditto for rest
!end_table

(!B)Note:(!b) Here n = strlen(string);

(!ende_liste)
!end_node

!else

!begin_node v_ftext_offset

(!begin_liste) [Beschreibung]

!item [Name:]
ØOutput Outlined Text with OffsetsÆ - gibt einen Text aus.

!item [VDI-Nummer:]
241

!item [Deklaration:]
void v_ftext_offset ( int16_t handle, int16_t x, int16_t y, 
                      int8_t *string, int16_t *offset );

!item [Beschreibung:]
Die Funktion gibt eine Zeichenkette auf einer Workstation aus. Es gilt:

!begin_xlist !compressed [offset+2n-2+]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [x]
x-Koordinate
!item [y]
y-Koordinate fÅr die Textausgabe
!item [string]
Adresse der Zeichenkette
!item [offset[0!]]
x-Offset
!item [offset[1!]]
y-Offset des ersten Zeichens
!item [...]
~
!item [...]
~
!item [offset[2n-2!]]
x-Offset des letzten Zeichens
!item [offset[2n-1!]]
y-Offset des letzten Zeichens
!end_xlist

Der Parameter (!I)offset(!i) erlaubt es, eigene Offsets anstelle der vom
System berechneten Zeichen-Werte zu benutzen; dies ermîglicht eine
wesentlich grîûere Kontrolle fÅr das Setzen der Zeichen auf dem
AusgabegerÑt.

(!B)Hinweis:(!b) Die Text-Attribute sowie die Einstellungen des Kernings
werden beachtet.

!item [Ergebnis:]
Die Funktion liefert kein Ergebnis zurÅck.

!item [VerfÅgbar:]
ab SpeedoGDOS 4.00 und NVDI 3.00 

!item [Gruppe:]
Ausgabefunktionen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr v_ftext_offset]) ~ v_gtext ~ v_ftext ~ SpeedoGDOS ~
NVDI

(!ende_liste)
!end_node



!begin_node Bindings fÅr v_ftext_offset
!ignore_index

(!begin_liste) [Umsetzung]

!item [C:]
void v_ftext_offset ( int16_t handle, int16_t x, int16_t y, 
                      int8_t *string, int16_t *offset );

!item [Umsetzung:]
!begin_verbatim
void v_ftext_offset (int16_t handle, int16_t x, int16_t y,
                     int8_t *string, int16_t *offset)
{
   ptsin[0]  = x;
   ptsin[1]  = y;
   ptsin[2]  = offset[0];
   ptsin[3]  = offset[1];
   ptsin[4..2*n+1] = offset[2..(2*n)-1]

   intin[0..n-1] = string[0..n-1];

   contrl[0] = 241;
   contrl[1] = 1+n;
   contrl[3] = n;
   contrl[6] = handle;

   vdi ();
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0]      !! 241   # Opcode der Funktion
contrl+2  !! contrl[1]      !! 1+n   # EintrÑge in ptsin
contrl+4  !! contrl[2]      !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3]      !! n     # EintrÑge in intin
contrl+8  !! contrl[4]      !! 0     # EintrÑge in intout
contrl+12 !! contrl[6]      !! handle
intin     !! intin[0..n-1]  !! string[0..n-1]
ptsin     !! ptsin[0]       !! x
ptsin+2   !! ptsin[1]       !! y
ptsin+4   !! ptsin[2]       !! offset[0]  # x-Offset erstes Zeichen
ptsin+6   !! ptsin[3]       !! offset[1]  # y-Offset erstes Zeichen
ptsin+8   !! ptsin[4..2n+1] !! offset[2..2n-1] # dto. fÅr Rest
!end_table

(!B)Hinweis:(!b) Dabei gilt n = strlen(string);

(!ende_liste)
!end_node

!endif
