!iflang [english]

!begin_node v_cellarray

(!begin_liste) [Availability]

!item [Name:]
ØCell arrayÆ - Color setup of the screen by reference to coordinates of
colored cells.

!item [Opcode:]
10

!item [Syntax:]
void v_cellarray ( int16_t handle, int16_t *pxyarray, int16_t row_length,
                   int16_t el_used, int16_t num_rows,  int16_t wrt_mode,
                   int16_t *colarray );

!item [Description:]
The call v_cellarray allows the color setup of the screen not to depend on
the objects being drawn, but on the coordinates of an array of colored cells
instead. The following apply:

!begin_xlist !compressed [row_length]
!item [Parameter]
Meaning
!item [~]
~
!item [handle]
Workstation identifier
!item [pxyarray]
Coordinates of the bounding rectangle
!item [row_length]
Line length of color index array
!item [el_used]
Number of columns
!item [num_rows]
Number of lines
!item [wrt_mode]
Writing mode
!item [colarray]
Color index array, contains the color information for the whole rectangle
(line-by-line)
!end_xlist

(!B)Note:(!b) The output device is subdivided into a number of cells, where
each cell has a color allocated to it. If any output occurs in the respective
cell, then it will take on the color allocated to the cell. The
function is (!I)not(!i) available on all output devices.
               
!item [(!nolink [Return]) value:]
The function does not return a result.

!item [Availability:]
Not supported by any current drivers.

This function is not guaranteed available in any driver and should therefore be
avoided unless you are sure the driver you are utilizing understands it.
               
!item [Group:]
Output functions

!item [See also:]
(!link [Binding] [Bindings for v_cellarray]) ~ vswr_mode

(!ende_liste)
!end_node



!begin_node Bindings for v_cellarray
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
void v_cellarray ( int16_t handle, int16_t *pxyarray, int16_t row_length,
                   int16_t el_used, int16_t num_rows,  int16_t wrt_mode,
                   int16_t *colarray );

!item [Binding:]
!begin_verbatim
void v_cellarray (int16_t handle, int16_t *pxyarray,
                  int16_t row_length, int16_t el_used,
                  int16_t num_rows,  int16_t wrt_mode,
                  int16_t *colarray)
{
   int16_t n;

   n = row_length * num_rows;

   intin[0..n-1] = colarray[0..n-1];
   ptsin[0..3] = pxyarray[0..3];

   contrl[0]  = 10;
   contrl[1]  = 2;
   contrl[3]  = n;
   contrl[6]  = handle;
   contrl[7]  = row_length;
   contrl[8]  = el_used;
   contrl[9]  = num_rows;  
   contrl[10] = wrt_mode;

   vdi ();
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! Contents
!hline
contrl    !! contrl[0]     !! 10    # Function Opcode
contrl+2  !! contrl[1]     !! 2     # entry in ptsin
contrl+4  !! contrl[2]     !! 0     # entry in ptsout
contrl+6  !! contrl[3]     !! n     # entry in intin
contrl+8  !! contrl[4]     !! 0     # entry in intout
contrl+12 !! contrl[6]     !! handle
contrl+14 !! contrl[7]     !! row_length
contrl+16 !! contrl[8]     !! el_used
contrl+18 !! contrl[9]     !! num_rows
contrl+20 !! contrl[10]    !! wrt_mode
intin     !! intin[0..n-1] !! colarray[0..n-1]
ptsin     !! ptsin[0..3]   !! pxyarray[0..3]
!end_table

(!B)Note:(!b) n is here the number of lines * number of columns of the cell
array.

(!ende_liste)
!end_node

!else

!begin_node v_cellarray

(!begin_liste) [Beschreibung]

!item [Name:]
ØCell ArrayÆ - Farbaufbau des Bildschirms in Koordinaten.

!item [VDI-Nummer:]
10

!item [Deklaration:]
void v_cellarray ( int16_t handle, int16_t *pxyarray, int16_t row_length,
                   int16_t el_used, int16_t num_rows,  int16_t wrt_mode,
                   int16_t *colarray );

!item [Beschreibung:]
Die Funktion ermîglicht es, den Farbaufbau des Bildschirms nicht von den
gezeichneten Objekten abhÑngig zu machen, sondern von den Koordinaten des
Bildschirms. Es gilt:

!begin_xlist !compressed [row_length]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [pxyarray]
Koordinaten des Begrenzungsrechtecks
!item [row_length]
ZeilenlÑnge im Farbindex-Array
!item [el_used]
Anzahl der Spalten
!item [num_rows]
Anzahl der Zeilen
!item [wrt_mode]
Schreibmodus
!item [colarray]
Farbindexarray, enthÑlt die Farbinformation fÅr das ganze Rechteck
(zeilenweise)
!end_xlist

(!B)Hinweis:(!b) Das AusgabegerÑt wird in eine Anzahl von Zellen unterteilt,
wobei jeder Zelle eine Farbe zugeordnet wird. Erfolgt nun eine Ausgabe in
der entsprechenden Zelle, so erfolgt diese in der, der Zelle zugeordneten
Farbe. Die Funktion ist (!I)nicht(!i) auf allen AusgabegerÑten verfÅgbar.

!item [Ergebnis:]
Die Funktion liefert kein Ergebnis.

!item [VerfÅgbar:]
Not supported by any current drivers.

This function is not guaranteed available in any driver and
should therefore be avoided unless you are sure the driver
you are utilizing understands it.

!item [Gruppe:]
Ausgabefunktionen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr v_cellarray]) ~  vswr_mode

(!ende_liste)
!end_node



!begin_node Bindings fÅr v_cellarray
!ignore_index

(!begin_liste) [Umsetzung]

!item [C:]
void v_cellarray ( int16_t handle, int16_t *pxyarray, int16_t row_length,
                   int16_t el_used, int16_t num_rows,  int16_t wrt_mode,
                   int16_t *colarray );

!item [Umsetzung:]
!begin_verbatim
void v_cellarray (int16_t handle, int16_t *pxyarray,
                  int16_t row_length, int16_t el_used,
                  int16_t num_rows,  int16_t wrt_mode,
                  int16_t *colarray)
{
   int16_t n;

   n = row_length * num_rows;

   intin[0..n-1] = colarray[0..n-1];
   ptsin[0..3] = pxyarray[0..3];

   contrl[0]  = 10;
   contrl[1]  = 2;
   contrl[3]  = n;
   contrl[6]  = handle;
   contrl[7]  = row_length;
   contrl[8]  = el_used;
   contrl[9]  = num_rows;  
   contrl[10] = wrt_mode;

   vdi ();
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0]     !! 10    # Opcode der Funktion
contrl+2  !! contrl[1]     !! 2     # EintrÑge in ptsin
contrl+4  !! contrl[2]     !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3]     !! n     # EintrÑge in intin
contrl+8  !! contrl[4]     !! 0     # EintrÑge in intout
contrl+12 !! contrl[6]     !! handle
contrl+14 !! contrl[7]     !! row_length
contrl+16 !! contrl[8]     !! el_used
contrl+18 !! contrl[9]     !! num_rows
contrl+20 !! contrl[10]    !! wrt_mode
intin     !! intin[0..n-1] !! colarray[0..n-1]
ptsin     !! ptsin[0..3]   !! pxyarray[0..3]
!end_table

(!B)Hinweis:(!b) n ist hier die #Zeilen * #Spalten der Zellenaufteilung.

(!ende_liste)
!end_node

!endif
