!iflang [english]

!begin_node vsc_form

(!begin_liste) [Availability]

!item [Name:]
ØSet mouse formÆ - Set the mouse pointer shape.

!item [Opcode:]
111

!item [Syntax:]
void vsc_form ( int16_t handle, int16_t *pcur_form );

!item [Description:]
The call vsc_form permits the definition of the shape of the mouse pointer,
which is stored in the MFORM structure. The following apply:

!begin_xlist !compressed [pcur_form+21..36+]
!item [Parameter]
Meaning
!item [~]
~
!item [handle]
Workstation identifier
!item [pcur_form[0!]]
X-coordinate, (!U)and(!u)
!item [pcur_form[1!]]
Y-coordinate of hot-spot
!item [pcur_form[2!]]
Number of planes, must be 1
!item [pcur_form[3!]]
Color index of background mask (should be 0)
!item [pcur_form[4!]]
Color index of foreground mask (should be 1)
!item [pcur_form[05..20!]]
Definition of background mask
!item [pcur_form[21..36!]]
Definition of foreground mask
!end_xlist

Each mask is dimensioned as a 16-WORD field each of 16 bits. Bit 15 of the
first WORD is here the top left corner of the mask, and bit 0 of WORD 16 is
the bottom right corner.

!label hot-spot
Under (!B)hot-spot(!b) one understands the exact position of the active part
of the graphic cursor. With an arrow this corresponds to the arrow's tip, with
a cross it is the crossing-point. The coordinates are specified relative to the
top left corner of the mask.

For setting the mouse pointer shape, all GEM programs should use the
(!nolink [AES]) function graf_mouse. Otherwise the mouse pointer shape
management of the (!nolink [AES]) will become permanently confused.

(!B)Note:(!b) The input functions of the (!nolink [VDI]) work only on the
(!I)physical(!i) workstation, which is normally used by the (!nolink [AES]).
Therefore it is better to fall back to using (!nolink [graf_mouse]) instead.

Under NVDI it is also possible to obtain the current shape of the mouse pointer
(see (!link [Binding][Bindings for vsc_form])).

!item [(!nolink [Return]) value:]
The function does not return a result.

!item [Availability:]
Supported by all screen drivers.

!item [Group:]
Input functions

!item [See also:]
(!link [Binding] [Bindings for vsc_form]) ~ graf_mouse ~ MFORM

(!ende_liste)
!end_node



!begin_node Bindings for vsc_form
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
void vsc_form ( int16_t handle, int16_t *pcur_form );

!item [Binding:]
!begin_verbatim
void vsc_form (int16_t handle, int16_t *pcur_form)
{
   intin[0..36] = pcur_form[0..36];

   contrl[0] = 111;
   contrl[1] = 0;
   contrl[3] = 37;
   contrl[6] = handle;

   vdi ();
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! Contents
!hline
contrl    !! contrl[0]    !! 111   # Function opcode
contrl+2  !! contrl[1]    !! 0     # Entry in ptsin
contrl+4  !! contrl[2]    !! 0     # Entry in ptsout
contrl+6  !! contrl[3]    !! 37    # Entry in intin
contrl+8  !! contrl[4]    !! 0     # Entry in intout
contrl+12 !! contrl[6]    !! handle
intin     !! intin[0..36] !! pcur_form[0..36]
!end_table

(!B)Note:(!b) Under NVDI it is also possible to obtain the
current shape of the mouse pointer. The assignment of the input/output fields
for this are as follows:
             
!begin_xlist !compressed [intout+0..36+ =]
!item [contrl[0!] =]
111;
!item [contrl[1!] =]
0;
!item [contrl[2!] =]
0;
!item [contrl[3!] =]
0;
!item [contrl[4!] =]
37;
!item [contrl[6!] =]
handle;
!item [intout[0..36!] =]
pcur_form[0..36];
!end_xlist

(!ende_liste)
!end_node

!else

!begin_node vsc_form

(!begin_liste) [Beschreibung]

!item [Name:]
ØSet Mouse FormÆ - setzt die Mauszeigerform.

!item [VDI-Nummer:]
111

!item [Deklaration:]
void vsc_form ( int16_t handle, int16_t *pcur_form );

!item [Beschreibung:]
Die Funktion erlaubt die Definition der Form des Mauszeigers. Es gilt:

!begin_xlist !compressed [pcur_form+21..36+]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [pcur_form[0!]]
x-Koordinate
!item [pcur_form[1!]]
y-Koordinate des Hot-Spot
!item [pcur_form[2!]]
reserviert, sollte 1 sein
!item [pcur_form[3!]]
Farbindex der Hintergrundmaske
!item [pcur_form[4!]]
Farbindex der Vordergrundmaske
!item [pcur_form[05..20!]]
Definition der Hintergrundmaske
!item [pcur_form[21..36!]]
Definition der Vordergrundmaske
!end_xlist

Jede Maske wird als Feld mit 16 Wîrtern zu je 16 Bit festgelegt. Bit-15 des
ersten Wortes ist hierbei die obere linke Ecke der Maske, und Bit 0 von Wort
16 ist ist die rechte untere Ecke.

!label Hot-Spot
Unter dem (!B)Hot-Spot(!b) versteht man die exakte Position des
Grafikcursors. Bei einem Pfeil wÅrde dies der Pfeilspitze, bei einem Kreuz
der Mitte entsprechen. Die Koordinaten werden relativ zur oberen linken
Ecke der Maske angegeben.

Zum Setzen der Mausform sollte in GEM-Programmen unbedingt die AES-Funktion
graf_mouse verwendet werden. Andernfalls wird die Mausform-Verwaltung des
(!nolink [AES]) nachhaltig verwirrt.

(!B)Hinweis:(!b) Die Eingabefunktionen des VDI arbeiten nur auf der
(!I)physikalischen(!i) Workstation, die im Normalfall von den (!nolink [AES]) benutzt
wird. Deshalb sollte man besser auf (!nolink [graf_mouse]) zurÅckgreifen.

Unter NVDI ist es auch mîglich, die aktuelle Form der Maus zu ermitteln
(vgl. (!link [Binding] [Bindings fÅr vsc_form])).

!item [Ergebnis:]
Die Funktion liefert kein Ergebnis.

!item [VerfÅgbar:]
Supported by all screen drivers.

!item [Gruppe:]
Eingabefunktionen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vsc_form]) ~ graf_mouse ~ MFORM

(!ende_liste)
!end_node



!begin_node Bindings fÅr vsc_form
!ignore_index

(!begin_liste) [Umsetzung]

!item [C:]
void vsc_form ( int16_t handle, int16_t *pcur_form );

!item [Umsetzung:]
!begin_verbatim
void vsc_form (int16_t handle, int16_t *pcur_form)
{
   intin[0..36] = pcur_form[0..36];

   contrl[0] = 111;
   contrl[1] = 0;
   contrl[3] = 37;
   contrl[6] = handle;

   vdi ();
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0]    !! 111   # Opcode der Funktion
contrl+2  !! contrl[1]    !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2]    !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3]    !! 37    # EintrÑge in intin
contrl+8  !! contrl[4]    !! 0     # EintrÑge in intout
contrl+12 !! contrl[6]    !! handle
intin     !! intin[0..36] !! pcur_form[0..36]
!end_table

(!B)Hinweis:(!b) Unter NVDI ist auch mîglich, die aktuelle Mausform zu
ermitteln. Die dazu nîtigen Belegungen der Ein-/Ausgabefelder lauten wie
folgt:

!begin_xlist !compressed [intout+0..36+ =]
!item [contrl[0!] =]
111;
!item [contrl[1!] =]
0;
!item [contrl[2!] =]
0;
!item [contrl[3!] =]
0;
!item [contrl[4!] =]
37;
!item [contrl[6!] =]
handle;
!item [intout[0..36!] =]
pcur_form[0..36];
!end_xlist

(!ende_liste)
!end_node

!endif
