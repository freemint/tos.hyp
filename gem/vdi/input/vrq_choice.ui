!iflang [english]

!begin_node vrq_choice

(!begin_liste) [Availability]

!item [Name:]
ØInput choice, Request modeÆ - Return the status of the 'choice' device
(e.g. function keys when one was pressed).

!item [Opcode:]
30

!item [Syntax:]
void vrq_choice ( int16_t handle, int16_t ch_in, int16_t *ch_out );

!item [Description:]
The call vrq_choice ascertains the actuation of a 'choice' device (e.g.
function key) in REQUEST mode. The following apply:

!begin_xlist !compressed [Parameter]
!item [Parameter]
Meaning
!item [~]
~
!item [handle]
Workstation identifier
!item [ch_in]
Starting value for choice device
!item [ch_out]
Selected key or code number
!end_xlist

The number of function keys depends on each individual device. If another key
is pressed, the corresponding code number will be returned.

!item [(!nolink [Return]) value:]
The function does not return a result.

!item [Availability:]
Although the function is implemented in ROM, it does not seem to work in any
way. The function is (!I)not(!i) supported by all device drivers.

The input functions of the (!nolink [VDI]) work only on the (!I)physical(!i)
workstation, which is normally used by the (!nolink [AES]).

!item [Group:]
Input functions

!item [See also:]
(!link [Binding] [Bindings for vrq_choice]) ~ vsm_choice ~ vsin_mode

(!ende_liste)

!end_node


!begin_node Bindings for vrq_choice
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
void vrq_choice ( int16_t handle, int16_t ch_in, int16_t *ch_out );

!item [Binding:]
!begin_verbatim
void vrq_choice (int16_t handle, int16_t ch_in,
                 int16_t *ch_out)
{
   intin[0] = ch_in;

   contrl[0] = 30;
   contrl[1] = 0;
   contrl[3] = 1;
   contrl[6] = handle;

   vdi ();

   *ch_out = intout[0];
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! Contents
!hline
contrl    !! contrl[0] !! 30    # Function Opcode
contrl+2  !! contrl[1] !! 0     # Entry in ptsin
contrl+4  !! contrl[2] !! 0     # Entry in ptsout
contrl+6  !! contrl[3] !! 1     # Entry in intin
contrl+8  !! contrl[4] !! 1     # Entry in intout
contrl+12 !! contrl[6] !! handle
intin     !! intin[0]  !! ch_in
intout    !! intout[0] !! ch_out
!end_table

(!ende_liste)
!end_node

!else

!begin_node vrq_choice

(!begin_liste) [Beschreibung]

!item [Name:]
ØInput Choice, Request ModeÆ - liefert den Status der Funktionstasten, wenn
eine gedrÅckt wurde.

!item [VDI-Nummer:]
30

!item [Deklaration:]
void vrq_choice ( int16_t handle, int16_t ch_in, int16_t *ch_out );

!item [Beschreibung:]
Die Funktion ermittelt die BetÑtigung einer Auswahltaste (z.B.
Funktionstaste). Es gilt:

!begin_xlist !compressed [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [ch_in]
initialisierende Auswahltaste
!item [ch_out]
ausgewÑhlte Taste bzw. Codenummer
!end_xlist

Die Anzahl der Funktionstasten ist abhÑngig vom jeweiligen GerÑt. Falls eine
andere Taste gedrÅckt wird, wird die entsprechende Codenummer
zurÅckgeliefert.

!item [Ergebnis:]
Die Funktion liefert kein Ergebnis.

!item [VerfÅgbar:]
Die Funktion ist zwar im ROM implementiert, scheint aber in
keiner Weise zu funktionieren. Die Funktion wird (!I)nicht(!i) von allen
GerÑtetreibern unterstÅtzt.

Die Eingabefunktionen des VDI arbeiten nur auf
der (!I)physikalischen(!i) Workstation, die im Normalfall von den AES
benutzt wird.

!item [Gruppe:]
Eingabefunktionen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vrq_choice]) ~ vsm_choice ~ vsin_mode

(!ende_liste)

!end_node


!begin_node Bindings fÅr vrq_choice
!ignore_index

(!begin_liste) [Umsetzung]

!item [C:]
void vrq_choice ( int16_t handle, int16_t ch_in, int16_t *ch_out );

!item [Umsetzung:]
!begin_verbatim
void vrq_choice (int16_t handle, int16_t ch_in,
                 int16_t *ch_out)
{
   intin[0] = ch_in;

   contrl[0] = 30;
   contrl[1] = 0;
   contrl[3] = 1;
   contrl[6] = handle;

   vdi ();

   *ch_out = intout[0];
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0] !! 30    # Opcode der Funktion
contrl+2  !! contrl[1] !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2] !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3] !! 1     # EintrÑge in intin
contrl+8  !! contrl[4] !! 1     # EintrÑge in intout
contrl+12 !! contrl[6] !! handle
intin     !! intin[0]  !! ch_in
intout    !! intout[0] !! ch_out
!end_table

(!ende_liste)
!end_node

!endif
