!iflang [english]

!begin_node vrt_cpyfm

(!begin_liste) [Availability]

!item [Name:]
(!rdouble)Copy raster, transparent(!ldouble) - Copy a monochrome raster onto a colour raster.

!item [Opcode:]
121

!item [Syntax:]
void vrt_cpyfm ( int16_t handle, int16_t vr_mode, int16_t *pxyarray, MFDB *psrcMFDB,
                 MFDB *pdesMFDB, int16_t *color_index );

!item [Description:]
The call vrt_cpyfm copies a monochrome, rectangular raster onto another
(possibly coloured) raster, paying respect to the
(!link [writing modes][Write mode]). The following apply:

!begin_xlist !compressed [color_index+0+]
!item [Parameter]
Meaning
!item [~]
~
!item [handle]
Workstation identifier
!item [vr_mode]
Writing mode:
!begin_xlist !compressed
!item [1 =]
Replace
!item [2 =]
Transparent
!item [3 =]
XOR
!item [4 =]
Reverse Transparent
!end_xlist
!item [pxyarray[0!]]
X-coordinate, (!U)and(!u)
!item [(!nolink [pxyarray])[1!]]
Y-coordinate of a corner of the source rectangle
!item [(!nolink [pxyarray])[2!]]
X-coordinate, (!U)and(!u)
!item [(!nolink [pxyarray])[3!]]
Y-coordinate of diagonally opposite corner of the source rectangle
!item [(!nolink [pxyarray])[4!]]
X-coordinate, (!U)and(!u)
!item [(!nolink [pxyarray])[5!]]
Y-coordinate of a corner of the destination rectangle
!item [(!nolink [pxyarray])[6!]]
X-coordinate, (!U)and(!u)
!item [(!nolink [pxyarray])[7!]]
Y-coordinate of diagonally opposite corner of the destination rectangle
!item [psrcMFDB]
Pointer to the source MFDB
!item [pdesMFDB]
Pointer to the destination (!nolink [MFDB])
!item [color_index[0!]]
Colour index of the colour which is to be interpreted as set
!item [color_index[1!]]
Colour index of the colour which is to be interpreted as cleared (not set)
!end_xlist

(!B)Note:(!b) Should the dimensions of the rasters not match, then the size of
the source raster and the upper left corner of the destination raster will be
used as a starting point. The screen may (!I)never(!i) be specified as the
source raster.

Usually vrt_cpyfm ignores the height and width of the destination rectangle and
uses the size of the source. If you want to scale a bitmap, you have to set the
most significant bit in the transfer mode ((!I)vr_mode(!i) | 0x8000). In this
case vrt_cpyfm scales the bitmap according to the size of the destination
rectangle. Whether the driver is able to scale or not is returned by vq_extnd
in (!I)work_out[30](!i) (you are only allowed to set the upper bit of the mode
if it is able to).

(!B)Warning:(!b) In some older NVDI printer drivers this function unfortunately has
an error, which results in bitmaps that are only a line high possibly not being
output. For this reason the passed bitmap should be at least two lines high.

(!B)Note for TC-VDI:(!b) TC-VDI has two new modes: (!nl)
1 - Copy multi color raster to screen (!nl)
Copy (!I)psrcMFDB(!i) (8bpp, packed pixels) to (!I)pdesMFDB(!i) (8 or 32bpp,
device-specific format). Convert VDI color numbers to pixel values, in 32bpp
expand pixel through the software palette. (!nl)
Valid modes are: REPLACE, (!I)color_index(!i) is not used, and TRANSPARENT,
(!I)color_index[0](!i) is the transparent color (source pixels with this color
are not copied, destination is unchanged). (!nl)
Others modes have no action.

2 - Expand packed 24bpp raster to screen (!nl)
Copy (!I)psrcMFDB(!i) (24bpp, packed pixels) to (!I)pdesMFDB(!i) (32bpp,
device-specific format). Expand 24bpp source to 32bpp destination. (!nl)
Valid mode is REPLACE, (!I)color_index(!i) is not used. (!nl)
Others modes have no action.

!item [(!nolink [Return]) value:]
The function does not return a result.

!item [Availability:]
Supported by all screen drivers.

!item [Group:]
Raster functions

!item [See also:]
(!link [Binding] [Bindings for vrt_cpyfm]) ~ vro_cpyfm ~ vswr_mode ~
Raster formats

(!ende_liste)
!end_node



!begin_node Bindings for vrt_cpyfm
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
void vrt_cpyfm ( int16_t handle, int16_t vr_mode, int16_t *pxyarray, MFDB *psrcMFDB,
                 MFDB *pdesMFDB, int16_t *color_index );

!item [Binding:]
!begin_verbatim
void vrt_cpyfm (int16_t handle, int16_t vr_mode,
                int16_t *pxyarray,MFDB *psrcMFDB,
                MFDB *pdesMFDB, int16_t *color_index)
{
   intin[0]    = vr_mode;
   intin[1]    = *color_index++;
   intin[2]    = *color_index;
   ptsin[0..7] = pxyarray[0..7];

   iptr (psrcMFDB);
   iptr_2 (pdesMFDB);

   contrl[0] = 121;
   contrl[1] = 4;
   contrl[3] = 3;
   contrl[6] = handle;

   vdi ();
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! Contents
!hline
contrl    !! contrl[0]    !! 121   # Function opcode
contrl+2  !! contrl[1]    !! 4     # Entry in ptsin
contrl+4  !! contrl[2]    !! 0     # Entry in ptsout
contrl+6  !! contrl[3]    !! 3     # Entry in intin
contrl+8  !! contrl[4]    !! 0     # Entry in intout
contrl+12 !! contrl[6]    !! handle
contrl+14 !! contrl[7,8]  !! psrcMFDB
contrl+18 !! contrl[9,10] !! pdesMFDB
intin     !! intin[0]     !! vr_mode
intin+2   !! intin[1..2]  !! color_index[0..1]
ptsin     !! ptsin[0..7]  !! pxyarray[0..7]
!end_table

(!ende_liste)
!end_node

!else

!begin_node vrt_cpyfm

(!begin_liste) [Beschreibung]

!item [Name:]
(!rdouble)Copy Raster, Transparent(!ldouble) - kopiert ein Monochromraster auf ein Farbraster.

!item [VDI-Nummer:]
121

!item [Deklaration:]
void vrt_cpyfm ( int16_t handle, int16_t vr_mode, int16_t *pxyarray, MFDB *psrcMFDB,
                 MFDB *pdesMFDB, int16_t *color_index );

!item [Beschreibung:]
Die Funktion kopiert ein monochromes, rechteckiges Raster unter Beachtung
der Schreibmodi auf ein anderes (auch farbiges) rechteckiges Raster. Es
gilt:

!begin_xlist !compressed [color_index+0+]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [vr_mode]
Schreibmodus
!begin_xlist !compressed
!item [1 =]
Replace
!item [2 =]
Transparent
!item [3 =]
XOR
!item [4 =]
Reverse Transparent
!end_xlist
!item [pxyarray[0!]]
x-Koordinate
!item [(!nolink [pxyarray])[1!]]
y-Koordinate des Eckpunktes des Quellrasters
!item [(!nolink [pxyarray])[2!]]
x-Koordinate
!item [(!nolink [pxyarray])[3!]]
y-Koordinate der diagonal gegen(!uumlaut)ber liegenden Ecke des Quellrasters
!item [(!nolink [pxyarray])[4!]]
x-Koordinate
!item [(!nolink [pxyarray])[5!]]
y-Koordinate des Eckpunktes des Zielrasters
!item [(!nolink [pxyarray])[6!]]
x-Koordinate
!item [(!nolink [pxyarray])[7!]]
y-Koordinate der diagonal gegen(!uumlaut)ber liegenden Ecke des Zielrasters
!item [psrcMFDB]
Zeiger auf den MFDB der Quelle
!item [pdesMFDB]
Zeiger auf den (!nolink [MFDB]) des Ziels
!item [color_index[0!]]
Farbnummer der Farbe, die als gesetzt interpretiert werden soll
!item [color_index[1!]]
Farbnummer der Farbe, die als nicht gesetzt interpretiert werden soll
!end_xlist

(!B)Hinweis:(!b) Sollten die Gr(!oumlaut)(!sharps)en beider Raster nicht (!uumlaut)bereinstimmen, so
werden die Gr(!oumlaut)(!sharps)e des Quellrasters und die obere linke Ecke des Zielrasters
als Startpunkt benutzt. Der Bildschirm darf (!I)niemals(!i) als Quellraster
angegeben werden.

Normalerweise ignoriert die Funktion die Breite und H(!oumlaut)he des Zielrasters und
geht von den Ma(!sharps)en des Quellrasters aus. Wenn ein Raster skaliert werden
soll, muss daher das oberste Bit im Schreibmodus gesetzt werden
((!I)vr_mode(!i)|0x8000). Die Funktion beachtet dann unterschiedliche
Ausma(!sharps)e und skaliert das Raster. Ob der jeweilige Treiber Raster skalieren
kann, sollte per vq_extnd ((!I)work_out(!i)[30]) ermittelt werden; das
oberste Bit im (!nolink [Schreibmodus]) darf nur gesetzt werden, wenn der Treiber
(!uumlaut)ber diese F(!aumlaut)higkeit verf(!uumlaut)gt.

(!B)Achtung:(!b) In (!aumlaut)lteren NVDI-Druckertreibern hat diese Funktion leider
einen Fehler, der dazu f(!uumlaut)hrt, da(!sharps) Bitmaps, die nur eine Zeile hoch sind,
evtl. nicht ausgegeben werden. Aus diesem Grund sollte die (!uumlaut)bergebene Bitmap
mindestens zwei Zeilen hoch sein.

(!B)Note for TC-VDI:(!b) TC-VDI has two new modes: (!nl)
1 - Copy multi color raster to screen (!nl)
Copy (!I)psrcMFDB(!i) (8bpp, packed pixels) to (!I)pdesMFDB(!i) (8 or 32bpp,
device-specific format). Convert VDI color numbers to pixel values, in 32bpp
expand pixel through the software palette. (!nl)
Valid modes are: REPLACE, (!I)color_index(!i) is not used, and TRANSPARENT,
(!I)color_index[0](!i) is the transparent color (source pixels with this color
are not copied, destination is unchanged). (!nl)
Others modes have no action.

2 - Expand packed 24bpp raster to screen (!nl)
Copy (!I)psrcMFDB(!i) (24bpp, packed pixels) to (!I)pdesMFDB(!i) (32bpp,
device-specific format). Expand 24bpp source to 32bpp destination. (!nl)
Valid mode is REPLACE, (!I)color_index(!i) is not used. (!nl)
Others modes have no action.

!item [Ergebnis:]
Die Funktion liefert kein Ergebnis.

!item [Verf(!uumlaut)gbar:]
Supported by all screen drivers.

!item [Gruppe:]
Rasterfunktionen

!item [Querverweis:]
(!link [Binding] [Bindings f(!uumlaut)r vrt_cpyfm]) ~ vro_cpyfm ~ vswr_mode ~ 
Rasterformate

(!ende_liste)
!end_node



!begin_node Bindings f(!uumlaut)r vrt_cpyfm
!ignore_index

(!begin_liste) [Umsetzung]

!item [C:]
void vrt_cpyfm ( int16_t handle, int16_t vr_mode, int16_t *pxyarray, MFDB *psrcMFDB,
                 MFDB *pdesMFDB, int16_t *color_index );

!item [Umsetzung:]
!begin_verbatim
void vrt_cpyfm (int16_t handle, int16_t vr_mode,
                int16_t *pxyarray,MFDB *psrcMFDB,
                MFDB *pdesMFDB, int16_t *color_index)
{
   intin[0]    = vr_mode;
   intin[1]    = *color_index++;
   intin[2]    = *color_index;
   ptsin[0..7] = pxyarray[0..7];

   iptr (psrcMFDB);
   iptr_2 (pdesMFDB);

   contrl[0] = 121;
   contrl[1] = 4;
   contrl[3] = 3;
   contrl[6] = handle;

   vdi ();
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0]    !! 121   # Opcode der Funktion
contrl+2  !! contrl[1]    !! 4     # Eintr(!aumlaut)ge in ptsin
contrl+4  !! contrl[2]    !! 0     # Eintr(!aumlaut)ge in ptsout
contrl+6  !! contrl[3]    !! 3     # Eintr(!aumlaut)ge in intin
contrl+8  !! contrl[4]    !! 0     # Eintr(!aumlaut)ge in intout
contrl+12 !! contrl[6]    !! handle
contrl+14 !! contrl[7,8]  !! psrcMFDB
contrl+18 !! contrl[9,10] !! pdesMFDB
intin     !! intin[0]     !! vr_mode
intin+2   !! intin[1..2]  !! color_index[0..1]
ptsin     !! ptsin[0..7]  !! pxyarray[0..7]
!end_table

(!ende_liste)
!end_node

!endif
