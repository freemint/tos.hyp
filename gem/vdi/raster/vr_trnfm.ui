!iflang [english]

!begin_node vr_trnfm

(!begin_liste) [Availability]

!item [Name:]
ØTransform formÆ - Transform a raster image memory

!item [Opcode:]
110

!item [Syntax:]
void vr_trnfm ( int16_t handle, (!nolink [MFDB]) *psrcMFDB, MFDB *pdesMFDB );

!item [Description:]
The call vr_trnf transforms a raster image memory block from standard format
to a device-dependent format and vice versa. The following apply:

!begin_xlist !compressed [Parameter]
!item [Parameter]
Meaning
!item [~]
~
!item [handle]
Workstation identifier
!item [psrcMFDB]
Pointer to the source MFDB
!item [pdesMFDB]
Pointer to the destination (!nolink [MFDB])
!end_xlist

The standard format mentioned above is a platform-independent data format,
which can therefore be used for interchanging data between various
(!nolink [GEM]) systems.

(!B)Notes:(!b) One can relieve the (!nolink [VDI]) of a lot of work by specifying
different raster addresses for source and destination MFDBs; otherwise an in-place
transform may well take several minutes for a large form.

!item [(!nolink [Return]) value:]
The function does not return a result.

!item [Availability:]
Supported by all drivers.

!item [Group:]
Raster functions

!item [See also:]
(!link [Binding] [Bindings for vr_trnfm]) ~ vro_cpyfm ~ vrt_cpyfm ~ Raster formats

(!ende_liste)
!end_node



!begin_node Bindings for vr_trnfm
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
void vr_trnfm ( int16_t handle, MFDB *psrcMFDB, MFDB *pdesMFDB );

!item [Binding:]
!begin_verbatim
void vr_trnfm (int16_t handle, MFDB *psrcMFDB, MFDB *pdesMFDB)
{
   iptr (psrcMFDB);
   iptr_2 (pdesMFDB);

   contrl[0] = 110;
   contrl[1] = 0;
   contrl[3] = 0;
   contrl[6] = handle;

   vdi ();
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! Contents
!hline
contrl    !! contrl[0]    !! 110   # Function opcode
contrl+2  !! contrl[1]    !! 0     # Entry in ptsin
contrl+4  !! contrl[2]    !! 0     # Entry in ptsout
contrl+6  !! contrl[3]    !! 0     # Entry in intin
contrl+8  !! contrl[4]    !! 0     # Entry in intout
contrl+12 !! contrl[6]    !! handle
contrl+14 !! contrl[7,8]  !! psrcMFDB
contrl+18 !! contrl[9,10] !! pdesMFDB
!end_table

(!ende_liste)
!end_node

!else

!begin_node vr_trnfm

(!begin_liste) [Beschreibung]

!item [Name:]
ØTransform FormÆ - wandelt ein Rasterbild um.

!item [VDI-Nummer:]
110

!item [Deklaration:]
void vr_trnfm ( int16_t handle, (!nolink [MFDB]) *psrcMFDB, MFDB *pdesMFDB );

!item [Beschreibung:]
Die Funktion transformiert ein Raster vom Standardformat in das
gerÑtespezifische Format oder umgekehrt. Es gilt:

!begin_xlist !compressed [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [psrcMFDB]
Zeiger auf MFDB des Quellrasters
!item [pdesMFDB]
Zeiger auf (!nolink [MFDB]) des Zielrasters
!end_xlist

Beim Standardformat handelt es sich um ein plattformunabhÑngiges
Datenformat, welches daher zum Austausch von Dateien zwischen verschiedenen
GEM-Systemen benutzt werden kann.

(!B)Hinweis:(!b) Man kann dem VDI die Arbeit erleichtern, indem in
Quell/Ziel-MFDB unterschiedliche Rasteradressen angegeben werden;
anderenfalls kann eine Transformation durchaus mehrere Minuten in Anspruch
nehmen.

!item [Ergebnis:]
Die Funktion liefert kein Ergebnis.

!item [VerfÅgbar:]
Supported by all drivers.

!item [Gruppe:]
Rasterfunktionen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vr_trnfm]) ~ vro_cpyfm ~ vrt_cpyfm ~ Rasterformate

(!ende_liste)
!end_node



!begin_node Bindings fÅr vr_trnfm
!ignore_index

(!begin_liste) [Umsetzung]

!item [C:]
void vr_trnfm ( int16_t handle, MFDB *psrcMFDB, MFDB *pdesMFDB );

!item [Umsetzung:]
!begin_verbatim
void vr_trnfm (int16_t handle, MFDB *psrcMFDB, MFDB *pdesMFDB)
{
   iptr (psrcMFDB);
   iptr_2 (pdesMFDB);

   contrl[0] = 110;
   contrl[1] = 0;
   contrl[3] = 0;
   contrl[6] = handle;

   vdi ();
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0]    !! 110   # Opcode der Funktion
contrl+2  !! contrl[1]    !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2]    !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3]    !! 0     # EintrÑge in intin
contrl+8  !! contrl[4]    !! 0     # EintrÑge in intout
contrl+12 !! contrl[6]    !! handle
contrl+14 !! contrl[7,8]  !! psrcMFDB
contrl+18 !! contrl[9,10] !! pdesMFDB
!end_table

(!ende_liste)
!end_node

!endif
