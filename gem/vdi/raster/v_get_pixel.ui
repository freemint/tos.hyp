!iflang [english]

!begin_node v_get_pixel

(!begin_liste) [Availability]

!item [Name:]
Ø(!nolink [Get pixel])Æ - Returns the color value of a pixel.

!item [Opcode:]
105

!item [Syntax:]
void v_get_pixel ( int16_t handle, int16_t x, int16_t y, int16_t *pel, int16_t *index );

!item [Description:]
The call v_get_pixel obtains the pixel value and the color index of a pixel
for resolutions up to 256 colors (8 planes). The following apply:

!begin_xlist !compressed [Parameter]
!item [Parameter]
Meaning
!item [~]
~
!item [handle]
Workstation identifier
!item [x]
X-coordinate of pixel
!item [y]
Y-coordinate of pixel
!item [pel]
Pixel value
!item [index]
Color index
!end_xlist

(!B)Note:(!b) The color index is understood as the number that can be
specified for the attribute functions of the (!nolink [VDI]). The pixel
value, on the other hand, represents the actual contents of the screen memory.

In HiColor (15 or 16 bits) (!I)pel(!i) contains the pixel value and
(!I)index(!i) is (usually) -1, as it cannot be allocated beyond doubt. In
TrueColor (!I)pel(!i) contains the low word and (!I)index(!i) the high word
of the pixel value.

!item [(!nolink [Return]) value:]
The function does not return a result.

!item [Availability:]
Supported by all screen drivers.

!item [Group:]
Raster functions

!item [See also:]
(!link [Binding] [Bindings for v_get_pixel]) ~ Raster formats

(!ende_liste)
!end_node



!begin_node Bindings for v_get_pixel
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
void v_get_pixel ( int16_t handle, int16_t x, int16_t y, int16_t *pel, int16_t *index );

!item [Binding:]
!begin_verbatim
void v_get_pixel (int16_t handle, int16_t x, int16_t y,
                  int16_t *pel, int16_t *index)
{
   ptsin[0]  = x;
   ptsin[1]  = y;
   contrl[0] = 105;
   contrl[1] = 1;
   contrl[3] = 0;
   contrl[6] = handle;

   vdi ();

   *pel   = intout[0];
   *index = intout[1];
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! Contents
!hline
contrl    !! contrl[0] !! 105   # Function opcode
contrl+2  !! contrl[1] !! 1     # Entry in ptsin
contrl+4  !! contrl[2] !! 0     # Entry in ptsout
contrl+6  !! contrl[3] !! 0     # Entry in intin
contrl+8  !! contrl[4] !! 2     # Entry in intout
contrl+12 !! contrl[6] !! handle
ptsin     !! ptsin[0]  !! x
ptsin+2   !! ptsin[1]  !! y
intout    !! intout[0] !! pel
intout+2  !! intout[1] !! index
!end_table

(!ende_liste)
!end_node

!else

!begin_node v_get_pixel

(!begin_liste) [Beschreibung]

!item [Name:]
ØGet PixelÆ - liefert den Farbwert eines Pixels.

!item [VDI-Nummer:]
105

!item [Deklaration:]
void v_get_pixel ( int16_t handle, int16_t x, int16_t y, int16_t *pel, int16_t *index );

!item [Beschreibung:]
Die Funktion ermittelt den Pixelwert und den Farbindex eines Pixels bei
Auflîsungen bis zu 256 Farben (8 Planes). Es gilt:

!begin_xlist !compressed [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [x]
x-Koordinate
!item [y]
y-Koordinate des Pixels
!item [pel]
Wert des Pixels
!item [index]
Farbindex des Pixels
!end_xlist

(!B)Hinweis:(!b) Unter dem Farbindex versteht man die Nummer, die man bei
den Attributfunktionen des VDI angeben kann. Der Pixelwert gibt hingegen den
tatsÑchlichen Inhalt des Bildspeichers wieder.

Bei HiColor (15- oder 16-Bit) enthÑlt (!I)pel(!i) den Pixelwert und
(!I)index(!i) ist (meistens) -1, da er nicht einwandfrei zuzuordnen ist. Bei
TrueColor enthÑlt (!I)pel(!i) das Low-Word des Pixelwerts und (!I)index(!i)
das High-Word.

!item [Ergebnis:]
Die Funktion liefert kein Ergebnis.

!item [VerfÅgbar:]
Supported by all screen drivers.

!item [Gruppe:]
Rasterfunktionen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr v_get_pixel]) ~ Rasterformate

(!ende_liste)
!end_node



!begin_node Bindings fÅr v_get_pixel
!ignore_index

(!begin_liste) [Umsetzung]

!item [C:]
void v_get_pixel ( int16_t handle, int16_t x, int16_t y, int16_t *pel, int16_t *index );

!item [Umsetzung:]
!begin_verbatim
void v_get_pixel (int16_t handle, int16_t x, int16_t y,
                  int16_t *pel, int16_t *index)
{
   ptsin[0]  = x;
   ptsin[1]  = y;
   contrl[0] = 105;
   contrl[1] = 1;
   contrl[3] = 0;
   contrl[6] = handle;

   vdi ();

   *pel   = intout[0];
   *index = intout[1];
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0] !! 105   # Opcode der Funktion
contrl+2  !! contrl[1] !! 1     # EintrÑge in ptsin
contrl+4  !! contrl[2] !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3] !! 0     # EintrÑge in intin
contrl+8  !! contrl[4] !! 2     # EintrÑge in intout
contrl+12 !! contrl[6] !! handle
ptsin     !! ptsin[0]  !! x
ptsin+2   !! ptsin[1]  !! y
intout    !! intout[0] !! pel
intout+2  !! intout[1] !! index
!end_table

(!ende_liste)
!end_node

!endif
