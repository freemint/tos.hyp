!iflang [english]

!begin_node vq_ctab

(!begin_liste) [Availability]

!item [Name:]
ØInquire current color tableÆ

!item [Opcode:]
206 (Sub-Opcode 0)

!item [Syntax:]
int16_t vq_ctab( int16_t handle, int32_t ctab_length, COLOR_TAB *ctab );

!item [Description:]
The call vq_ctab copies the current color table, which the (!nolink [VDI])
manages under the passed (!I)handle(!i), into the region to which (!I)ctab(!i)
points. If the color table is longer than (!I)ctab_length(!i), then no value is
returned in (!nolink [intout]), and (!nolink [contrl])[4] is then 0. A color table
can hold a maximum of 256 entries (as the (!nolink [VDI]) supports a maximum of 256
color pens, there cannot be more) and hence this gives the maximum length from the
size of the header plus 256 * sizeof( COLOR_ENTRY ).

!begin_xlist !compressed [ctab_length]
!item [Parameter]
Meaning
!item [~]
~
!item [handle]
Workstation identifier

!item [ctab_length]
Length of memory block to which (!I)ctab(!i) points

!item [ctab]
Memory block to which the color table is copied

!end_xlist


!item [(!nolink [Return]) value:]
The function returns 0 for an error, or 1 for 'All OK'.

!item [Availability:]
As of NVDI 5.00.

!item [Group:]
Color table functions

!item [See also:]
(!link [Binding] [Bindings for vq_ctab])

(!ende_liste)
!end_node



!begin_node Bindings for vq_ctab
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t vq_ctab( int16_t handle, int32_t ctab_length, COLOR_TAB *ctab );

!item [Binding:]
!begin_verbatim
int16_t vq_ctab( int16_t handle, int32_t ctab_length,
                 COLOR_TAB *ctab )
{
   intin[0..1] = ctab_length;

	 intout points to ctab

   contrl[0] = 206;
   contrl[1] = 0;
   contrl[3] = 2;
   contrl[5] = 0;
   contrl[6] = handle;

   vdi ();

   if ( contrl[4] )
     return( 1 );                   /* All OK */
   else
     return( 0 );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! Contents
!hline
contrl    !! contrl[0]    !! 206   # Function opcode
contrl+2  !! contrl[1]    !! 0     # Entry in ptsin
contrl+4  !! contrl[2]    !! 0     # Entry in ptsout
contrl+6  !! contrl[3]    !! 2     # Entry in intin
contrl+8  !! contrl[4]    !! n     # Entry in intout
contrl+10 !! contrl[5]    !! 0     # Sub-opcode
contrl+12 !! contrl[6]    !! handle
intin     !! intin[0..1]     !! ctab_length
intout    !! intout[0..n]    !! ctab
!end_table

(!ende_liste)
!end_node

!else

!begin_node vq_ctab

(!begin_liste) [Beschreibung]

!item [Name:]
ØInquire Current Color TableÆ - Farbtabelle erfragen

!item [VDI-Nummer:]
206 (Unterfunktion 0)

!item [Deklaration:]
int16_t vq_ctab( int16_t handle, int32_t ctab_length, COLOR_TAB *ctab );

!item [Beschreibung:]
Diese Funktion kopiert die aktuelle Farbtabelle, die das VDI unter
dem Åbergebenen (!I)handle(!i) verwaltet, in den Bereich auf den
(!I)ctab(!i) zeigt. Sollte die Farbtabelle lÑnger als
(!I)ctab_length(!i) sein, wird kein Wert in (!nolink [intout])
zurÅckgeliefert, (!nolink [contrl])[4] ist dann 0. Eine Farbtabelle
enthÑlt maximal 256 EintrÑge (da das (!nolink [VDI]) maximal 256
Farbstifte unterstÅtzt kînnen es nicht mehr sein) und daher
ergibt sich die MaximallÑnge aus der Grîûe des Header
plus 256 * sizeof( COLOR_ENTRY ).

!begin_xlist !compressed [ctab_length]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation

!item [ctab_length]
LÑnge des Speicherbereichs, auf den ctab zeigt.

!item [ctab]
Farbtabellen

!end_xlist


!item [Ergebnis:]
Die Funktion liefert 0 oder 1 fÅr Fehler oder alles in Ordnug.

!item [VerfÅgbar:]
ab NVDI 5.00

!item [Gruppe:]
Farbtabellenfunktionen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vq_ctab])

(!ende_liste)
!end_node



!begin_node Bindings fÅr vq_ctab
!ignore_index

(!begin_liste) [Umsetzung]

!item [C:]
int16_t vq_ctab( int16_t handle, int32_t ctab_length, COLOR_TAB *ctab );

!item [Umsetzung:]
!begin_verbatim
int16_t vq_ctab( int16_t handle, int32_t ctab_length,
                 COLOR_TAB *ctab )
{
   intin[0..1] = ctab_length;

	 intout zeigt auf ctab

   contrl[0] = 206;
   contrl[1] = 0;
   contrl[3] = 2;
   contrl[5] = 0;
   contrl[6] = handle;

   vdi ();

   if ( contrl[4] )
     return( 1 );                   /* alles in Ordnung */
   else
     return( 0 );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0]    !! 206   # Opcode der Funktion
contrl+2  !! contrl[1]    !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2]    !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3]    !! 2     # EintrÑge in intin
contrl+8  !! contrl[4]    !! n     # EintrÑge in intout
contrl+10 !! contrl[5]    !! 0     # Sub-Opcode
contrl+12 !! contrl[6]    !! handle
intin     !! intin[0..1]     !! ctab_length
intout    !! intout[0..n]    !! ctab
!end_table

(!ende_liste)
!end_node

!endif
