!iflang [english]

!begin_node v_ctab_idx2vdi

(!begin_liste) [Availability]

!item [Name:]
ØTranslate (!nolink [VDI]) color index to color table indexÆ

!item [Opcode:]
206 (Sub-Opcode 3)

!item [Syntax:]
int16_t v_ctab_idx2vdi( int16_t handle, int16_t index );

!item [Description:]
The call v_ctab_idx2vdi converts the color table index into a
(!link [VDI color index][Pixel value and VDI color index]).

!begin_xlist !compressed [Parameter]
!item [Parameter]
Meaning
!item [~]
~
!item [handle]
Workstation identifier

!item [index]
Index for the color table

!end_xlist

For resolutions up to 256 colors, (!I)index(!i) is the index for the
COLOR_ENTRY in the current color table and simultaneously also the actual
pixel value that is entererd in the bitmap. For graphic formats with more
than 256 colors, (!I)index(!i) continues to denote the entry in the color
table; the pixel value however is output by the (!nolink [VDI]) as a direct
RGB value in the bitmap.

!item [(!nolink [Return]) value:]
The function returns the old (!nolink [VDI]) color index for vsl_color or similar
functions

!item [Availability:]
As of NVDI 5.00.

!item [Group:]
Color table functions

!item [See also:]
(!link [Binding] [Bindings for v_ctab_idx2vdi])

(!ende_liste)
!end_node



!begin_node Bindings for v_ctab_idx2vdi
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t v_ctab_idx2vdi( int16_t handle, int16_t index );

!item [Binding:]
!begin_verbatim
int16_t v_ctab_idx2vdi( int16_t handle, int16_t index )
{
   intin[0] = index; 

   contrl[0] = 206
   contrl[1] = 0;
   contrl[3] = 1;
   contrl[5] = 3;
   contrl[6] = handle;

   vdi ();

   return ( intout[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! Contents
!hline
contrl    !! contrl[0]    !! 206   # Function opcode
contrl+2  !! contrl[1]    !! 0     # Entry in ptsin
contrl+4  !! contrl[2]    !! 0     # Entry in ptsout
contrl+6  !! contrl[3]    !! 1     # Entry in intin
contrl+8  !! contrl[4]    !! 1     # Entry in intout
contrl+10 !! contrl[5]    !! 3     # Sub-opcode
contrl+12 !! contrl[6]    !! handle
intin     !! intin[0]     !! index
intout    !! intout[0]    !! Return value
!end_table

(!ende_liste)
!end_node

!else

!begin_node v_ctab_idx2vdi

(!begin_liste) [Beschreibung]

!item [Name:]
ØTranslate Color Table Index To Vdi Color IndexÆ - Farbtabellenindex in
(!nolink [VDI])-Index wandeln

!item [VDI-Nummer:]
206 (Unterfunktion 3)

!item [Deklaration:]
int16_t v_ctab_idx2vdi( int16_t handle, int16_t index );

!item [Beschreibung:]
Diese Funktion konvertiert den Farbtabellenindex in einen
VDI-Farbindex.

!begin_xlist !compressed [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation

!item [index]
Index fÅr die Farbtabelle

!end_xlist

FÅr Auflîsungen bis zu 256 Farben ist (!I)index(!i) der
Index fÅr den COLOR_ENTRY in der aktuellen Farbtabelle und
gleichzeitig auch der tatsÑchliche Pixelwert, der in der Bitmap
eingetragen wird. Bei Grafikformaten mit mehr als 256 Farben
bezeichnet (!I)index(!i) weiterhin den Eintrag in der Farbtabelle; der
Pixelwert wird aber vom (!nolink [VDI]) als direkter RGB-Wert in der Bitmap
ausgegeben.


!item [Ergebnis:]
Die Funktion liefert alter (!nolink [VDI])-Farbindex fÅr vsl_color oder
Ñhnliche Funktionen

!item [VerfÅgbar:]
ab NVDI 5.00

!item [Gruppe:]
Farbtabellenfunktionen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr v_ctab_idx2vdi])

(!ende_liste)
!end_node



!begin_node Bindings fÅr v_ctab_idx2vdi
!ignore_index

(!begin_liste) [Umsetzung]

!item [C:]
int16_t v_ctab_idx2vdi( int16_t handle, int16_t index );

!item [Umsetzung:]
!begin_verbatim
int16_t v_ctab_idx2vdi( int16_t handle, int16_t index )
{
   intin[0] = index; 

   contrl[0] = 206
   contrl[1] = 0;
   contrl[3] = 1;
   contrl[5] = 3;
   contrl[6] = handle;

   vdi ();

   return ( intout[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0]    !! 206   # Opcode der Funktion
contrl+2  !! contrl[1]    !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2]    !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3]    !! 1     # EintrÑge in intin
contrl+8  !! contrl[4]    !! 1     # EintrÑge in intout
contrl+10 !! contrl[5]    !! 3     # Sub-Opcode
contrl+12 !! contrl[6]    !! handle
intin     !! intin[0]     !! index
intout    !! intout[0]    !! RÅckgabewert
!end_table

(!ende_liste)
!end_node

!endif
