!iflang [english]

!begin_node v_value2color

(!begin_liste) [Availability]

!item [Name:]
ØTranslate pixel value to color entryÆ

!item [Opcode:]
204 (Sub-Opcode 1)

!item [Syntax:]
int32_t v_value2color( int16_t handle, uint32_t value, COLOR_ENTRY *color );

!item [Description:]
The call v_value2color returns the color of a
(!link [pixel value][Pixel value and VDI color index]).

!begin_xlist !compressed [handle]
!item [Parameter]
Meaning
!item [~]
~
!item [handle]
Workstation identifier

!item [value]
Pixel value

!item [color]
COLOR_ENTRY of the color

!end_xlist


!item [(!nolink [Return]) value:]
The function returns the color value and the set color space.

!item [Availability:]
As of NVDI 5.00.

!item [Group:]
Color table functions

!item [See also:]
(!link [Binding] [Bindings for v_value2color])

(!ende_liste)
!end_node



!begin_node Bindings for v_value2color
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int32_t v_value2color( int16_t handle, uint32_t value, COLOR_ENTRY *color );

!item [Binding:]
!begin_verbatim
int32_t v_value2color( int16_t handle, uint32_t value,
                       COLOR_ENTRY *color )
{
   intin[0..1] = value; 

   contrl[0] = 204;
   contrl[1] = 0;
   contrl[3] = 2;
   contrl[5] = 1;
   contrl[6] = handle;

   vdi ();

   color = intout[2..5]; 

   return ( (int32_t) intout[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! Contents
!hline
contrl    !! contrl[0]    !! 204   # Function opcode
contrl+2  !! contrl[1]    !! 0     # Entry in ptsin
contrl+4  !! contrl[2]    !! 0     # Entry in ptsout
contrl+6  !! contrl[3]    !! 2     # Entry in intin
contrl+8  !! contrl[4]    !! 6     # Entry in intout
contrl+10 !! contrl[5]    !! 1     # Sub-opcode
contrl+12 !! contrl[6]    !! handle
intin     !! intin[0..1]  !! value
intout    !! intout[0..1] !! Return value
intout+4  !! intout[2..5] !! color
!end_table

(!ende_liste)
!end_node

!else

!begin_node v_value2color

(!begin_liste) [Beschreibung]

!item [Name:]
ØTranslate Pixel Value To Color EntryÆ 

!item [VDI-Nummer:]
204 (Unterfunktion 1)

!item [Deklaration:]
int32_t v_value2color( int16_t handle, uint32_t value, COLOR_ENTRY *color );

!item [Beschreibung:]
Diese Funktion liefert die Farbe eines Pixelwertes zurÅck.

!begin_xlist !compressed [handle]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation

!item [value]
Pixelwert

!item [color]
COLOR_ENTRY der Farbe

!end_xlist


!item [Ergebnis:]
Die Funktion liefert den Farbwert und den eingestellten Farbraum zurÅck.

!item [VerfÅgbar:]
ab NVDI 5.00

!item [Gruppe:]
Farbtabellenfunktionen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr v_value2color])

(!ende_liste)
!end_node



!begin_node Bindings fÅr v_value2color
!ignore_index

(!begin_liste) [Umsetzung]

!item [C:]
int32_t v_value2color( int16_t handle, uint32_t value, COLOR_ENTRY *color );

!item [Umsetzung:]
!begin_verbatim
int32_t v_value2color( int16_t handle, uint32_t value,
                       COLOR_ENTRY *color )
{
   intin[0..1] = value; 

   contrl[0] = 204;
   contrl[1] = 0;
   contrl[3] = 2;
   contrl[5] = 1;
   contrl[6] = handle;

   vdi ();

   color = intout[2..5]; 

   return ( (int32_t) intout[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0]    !! 204   # Opcode der Funktion
contrl+2  !! contrl[1]    !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2]    !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3]    !! 2     # EintrÑge in intin
contrl+8  !! contrl[4]    !! 6     # EintrÑge in intout
contrl+10 !! contrl[5]    !! 1     # Sub-Opcode
contrl+12 !! contrl[6]    !! handle
intin     !! intin[0..1]  !! value
intout    !! intout[0..1] !! RÅckgabewert
intout+4  !! intout[2..5] !! color
!end_table

(!ende_liste)
!end_node

!endif
