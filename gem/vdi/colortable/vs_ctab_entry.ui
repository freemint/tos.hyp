!iflang [english]

!begin_node vs_ctab_entry

(!begin_liste) [Availability]

!item [Name:]
ØSet colour table entryÆ

!item [Opcode:]
205 (sub-opcode 1)

!item [Syntax:]
int16_t vs_ctab_entry( int16_t handle, int16_t index, int32_t color_space, COLOR_ENTRY *color );

!item [Description:]
The call vs_ctab_entry sets a colour value in the colour table, i.e. for modes
with up to 256 colours a CLUT entry will be changed. If at all possible,
programs should not change the colours of the screen!

!begin_xlist !compressed [color_space]
!item [Parameter]
Meaning
!item [~]
~
!item [handle]
Workstation identifier

!item [index]
Colour table index

!item [color_space]
Colour space (at present only 0 for the colour space set, or CSPACE_RGB)

!item [color]
Colour table index

!end_xlist


!item [(!nolink [Return]) value:]
The function returns the number of entries set.

!item [Availability:]
As of NVDI 5.00.

!item [Group:]
Colour table functions

!item [See also:]
(!link [Binding] [Bindings for vs_ctab_entry])

(!ende_liste)
!end_node



!begin_node Bindings for vs_ctab_entry
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t vs_ctab_entry( int16_t handle, int16_t index, int32_t color_space, COLOR_ENTRY *color );

!item [Binding:]
!begin_verbatim
int16_t vs_ctab_entry( int16_t handle, int16_t index,
                       int32_t color_space,
                       COLOR_ENTRY *color )
{
   intin[0] = index;
   intin[1..2] = color_space;
   intin[3..6] = color;
   

   contrl[0] = 205;
   contrl[1] = 0;
   contrl[3] = 7;
   contrl[5] = 1;
   contrl[6] = handle;

   vdi ();

   return ( intout[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! Contents
!hline
contrl    !! contrl[0]    !! 205   # Function opcode
contrl+2  !! contrl[1]    !! 0     # Entry in ptsin
contrl+4  !! contrl[2]    !! 0     # Entry in ptsout
contrl+6  !! contrl[3]    !! 7     # Entry in intin
contrl+8  !! contrl[4]    !! 1     # Entry in intout
contrl+10 !! contrl[5]    !! 1     # Sub-opcode
contrl+12 !! contrl[6]    !! handle
intin     !! intin[0]     !! index
intin+2   !! intin[1..2]     !! color_space
intin+6   !! intin[3..6]     !! color
intout    !! intout[0]    !! Return value
!end_table

(!ende_liste)
!end_node

!else

!begin_node vs_ctab_entry

(!begin_liste) [Beschreibung]

!item [Name:]
ØSet Color Table EntryÆ 

!item [VDI-Nummer:]
205 (Unterfunktion 1)

!item [Deklaration:]
int16_t vs_ctab_entry( int16_t handle, int16_t index, int32_t color_space, COLOR_ENTRY *color );

!item [Beschreibung:]
Diese Funktion setzt einen Farbwert in der Farbtabelle, d.h. bei
Modi mit bis zu 256 Farben wird ein CLUT-Eintrag verÑndert. Wenn
irgendwie mîglich, sollten Programme die Farben des Bildschirms
nicht verÑndern!

!begin_xlist !compressed [color_space]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation

!item [index]
Farbtabellenindex

!item [color_space]
Farbtabellenindex

!item [color]
Farbtabellenindex

!end_xlist


!item [Ergebnis:]
Die Funktion liefert die Anzahl der gesetzten EintrÑge zurÅck.

!item [VerfÅgbar:]
ab NVDI 5.00

!item [Gruppe:]
Farbtabellenfunktionen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vs_ctab_entry])

(!ende_liste)
!end_node



!begin_node Bindings fÅr vs_ctab_entry
!ignore_index

(!begin_liste) [Umsetzung]

!item [C:]
int16_t vs_ctab_entry( int16_t handle, int16_t index, int32_t color_space, COLOR_ENTRY *color );

!item [Umsetzung:]
!begin_verbatim
int16_t vs_ctab_entry( int16_t handle, int16_t index,
                       int32_t color_space,
                       COLOR_ENTRY *color )
{
   intin[0] = index;
   intin[1..2] = color_space;
   intin[3..6] = color;
   

   contrl[0] = 205;
   contrl[1] = 0;
   contrl[3] = 7;
   contrl[5] = 1;
   contrl[6] = handle;

   vdi ();

   return ( intout[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0]    !! 205   # Opcode der Funktion
contrl+2  !! contrl[1]    !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2]    !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3]    !! 7     # EintrÑge in intin
contrl+8  !! contrl[4]    !! 1     # EintrÑge in intout
contrl+10 !! contrl[5]    !! 1     # Sub-Opcode
contrl+12 !! contrl[6]    !! handle
intin     !! intin[0]     !! index
intin+2   !! intin[1..2]     !! color_space
intin+6   !! intin[3..6]     !! color
intout    !! intout[0]    !! RÅckgabewert
!end_table

(!ende_liste)
!end_node

!endif
