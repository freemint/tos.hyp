!iflang [english]

!begin_node v_color2value

(!begin_liste) [Availability]

!item [Name:]
ØTranslate color entry to pixel valueÆ

!item [Opcode:]
204 (Sub-Opcode 0)

!item [Syntax:]
uint32_t v_color2value( int16_t handle, int32_t color_space, COLOR_ENTRY *color );

!item [Description:]
The call v_color2value returns a
(!link [color value][Pixel value and VDI color index]) for a pixel value.

!begin_xlist !compressed [color_space]
!item [Parameter]
Meaning
!item [~]
~
!item [handle]
Workstation identifier

!item [color_space]
Color space (at present only 0 for the color space set, or CSPACE_RGB)

!item [color]
COLOR_ENTRY of the background color

!end_xlist


!item [(!nolink [Return]) value:]
The pixel value.

!item [Availability:]
As of NVDI 5.00.

!item [Group:]
Color table functions

!item [See also:]
(!link [Binding] [Bindings for v_color2value])

(!ende_liste)
!end_node



!begin_node Bindings for v_color2value
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
uint32_t v_color2value( int16_t handle, int32_t color_space, COLOR_ENTRY *color );

!item [Binding:]
!begin_verbatim
uint32_t v_color2value( int16_t handle, int32_t color_space,
                        COLOR_ENTRY *color )
{
   intin[0..1] = color_space; 
   intin[2..5] = color; 

   contrl[0] = 204;
   contrl[1] = 0;
   contrl[3] = 6;
   contrl[5] = 0;
   contrl[6] = handle;

   vdi ();

   return ( (uint32_t) intout[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! Contents
!hline
contrl    !! contrl[0]    !! 204   # Function opcode
contrl+2  !! contrl[1]    !! 0     # Entry in ptsin
contrl+4  !! contrl[2]    !! 0     # Entry in ptsout
contrl+6  !! contrl[3]    !! 6     # Entry in intin
contrl+8  !! contrl[4]    !! 2     # Entry in intout
contrl+10 !! contrl[5]    !! 0     # Sub-opcode
contrl+12 !! contrl[6]    !! handle
intin     !! intin[0..1]  !! color_space
intin+4   !! intin[2..5]  !! color
intout    !! intout[0..1] !! Return value
!end_table

(!ende_liste)
!end_node

!else

!begin_node v_color2value

(!begin_liste) [Beschreibung]

!item [Name:]
ØTranslate Color Entry To Pixel ValueÆ 

!item [VDI-Nummer:]
204 (Unterfunktion 0)

!item [Deklaration:]
uint32_t v_color2value( int16_t handle, int32_t color_space, COLOR_ENTRY *color );

!item [Beschreibung:]
Diese Funktion liefert fÅr einen Farbwert den Pixelwert
zurÅck.

!begin_xlist !compressed [color_space]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation

!item [color_space]
Farbraum (z.Zt.nur 0 fÅr eingestellten Farbraum oder CSPACE_RGB)

!item [color]
COLOR_ENTRY der Farbe

!end_xlist


!item [Ergebnis:]
Der Pixelwert

!item [VerfÅgbar:]
ab NVDI 5.00

!item [Gruppe:]
Farbtabellenfunktionen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr v_color2value])

(!ende_liste)
!end_node



!begin_node Bindings fÅr v_color2value
!ignore_index

(!begin_liste) [Umsetzung]

!item [C:]
uint32_t v_color2value( int16_t handle, int32_t color_space, COLOR_ENTRY *color );

!item [Umsetzung:]
!begin_verbatim
uint32_t v_color2value( int16_t handle, int32_t color_space,
                        COLOR_ENTRY *color )
{
   intin[0..1] = color_space; 
   intin[2..5] = color; 

   contrl[0] = 204;
   contrl[1] = 0;
   contrl[3] = 6;
   contrl[5] = 0;
   contrl[6] = handle;

   vdi ();

   return ( (uint32_t) intout[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0]    !! 204   # Opcode der Funktion
contrl+2  !! contrl[1]    !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2]    !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3]    !! 6     # EintrÑge in intin
contrl+8  !! contrl[4]    !! 2     # EintrÑge in intout
contrl+10 !! contrl[5]    !! 0     # Sub-Opcode
contrl+12 !! contrl[6]    !! handle
intin     !! intin[0..1]  !! color_space
intin+4   !! intin[2..5]  !! color
intout    !! intout[0..1] !! RÅckgabewert
!end_table

(!ende_liste)
!end_node

!endif
