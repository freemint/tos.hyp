!iflang [english]

!begin_node COLOR_RGB

!begin_verbatim
typedef struct
{
   uint16   reserved;     /* Set to 0 or the index of the entry */
   uint16   red;          /* Red:   0<->65535 */
   uint16   green;        /* Green: 0<->65535 */
   uint16   blue;         /* Blue:  0<->65535 */
} COLOR_RGB;
!end_verbatim
If the color data in a program is present in a sensible format (e.g.
8 bits per channel) already, one can save oneself a transformation
with multiplication and division. The Shift and OR functions of the
processor perform this faster and more elegantly.
eleganter.

(!B)Example:(!b) The color value is described by the byte variables r, g, b.
The correct conversion to the 16-bit format of the COLOR_RGB structure
proceeds as follows:

!begin_verbatim
COLOR_RGB color; 

color.reserved = 0;

color.red = r;
color.red |= (color.red << 8);

color.green = g;
color.green |= (color.green << 8);

color.blue = b;
color.blue |= (color.blue << 8);
!end_verbatim
The structure element (!I)reserved(!i) should be set to 0 or (for building up
a color table) contain the index of the entry. In each case, however,
the upper 8 bits of (!I)reserved(!i) must be set to 0, as they may be used by
the color routines for some flags.

!end_node

!else

!begin_node COLOR_RGB

!begin_verbatim
typedef struct
{
   uint16   reserved;     /* auf 0 oder den Index des Eintrags setzen */
   uint16   red;          /* Rot:  0<->65535 */
   uint16   green;        /* GrÅn: 0<->65535 */
   uint16   blue;         /* Blau: 0<->65535 */
} COLOR_RGB;
!end_verbatim
Falls in einem Programm die Farbdaten bereits in einem
vernÅnftigen Format (z.B. 8 Bit pro Kanal) vorliegen, kann man
sich eine Umwandlung mit Multiplikation und Division ersparen. Die
Shift- und OR-Funktion des Prozessors erledigt das dann schneller und
eleganter.

Beispiel: Der Farbwert sei durch die Byte-Variablen r,
g, b beschrieben. Die korrekte Umsetzung auf das
16-Bit-Format der COLOR_RGB-Struktur erfolgt dann so:

!begin_verbatim
COLOR_RGB color; 

color.reserved = 0;

color.red = r;
color.red |= (color.red << 8);

color.green = g;
color.green |= (color.green << 8);

color.blue = b;
color.blue |= (color.blue << 8);
!end_verbatim
Das Strukturelement (!I)reserved(!i) sollte auf 0 gesetzt werden
oder (beim Aufbau einer Farbtabelle) den Index des Eintrags enthalten.
In jedem Fall mÅssen aber die oberen 8 Bits von (!I)reserved(!i)
auf 0 gesetzt werden, da sie von den Farbroutinen ggf. fÅr Flags
verwendet werden.
!end_node


!endif
