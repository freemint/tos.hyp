!iflang [english]

!begin_node COLOR_TAB

!begin_verbatim
typedef struct                    /* Color table                     */
{
   int32 magic;                   /* 'ctab'                          */
   int32 length;
   int32 format;                  /* Format (0)                      */
   int32 reserved;                /* Reserved, set to 0              */
   int32 map_id;                  /* Color table ID                  */
   int32 color_space;             /* Color space (at present only
                                     CSPACE_RGB)                     */
   int32 flags;                   /* VDI-internal flags, set to 0    */
   int32 no_colors;               /* Number of color entries         */
   int32 reserved1;               /* Reserved, must be 0             */
   int32 reserved2;               /* Reserved, must be 0             */
   int32 reserved3;               /* Reserved, must be 0             */
   int32 reserved4;               /* Reserved, must be 0             */
   COLOR_ENTRY colors[];
} COLOR_TAB;
!end_verbatim

!end_node

!else

!begin_node COLOR_TAB

!begin_verbatim
typedef struct                    /* Farbtabelle                     */
{
   int32 magic;                   /* 'ctab'                          */
   int32 length;
   int32 format;                  /* Format (0)                      */
   int32 reserved;                /* reserviert, auf 0 setzen        */
   int32 map_id;                  /* Kennung der Farbtabelle         */
   int32 color_space;             /* Farbraum (z.Zt. nur CSPACE_RGB) */
   int32 flags;                   /* VDI-interne Flags, auf 0 setzen */
   int32 no_colors;               /* Anzahl der Farbeint„ge          */
   int32 reserved1;               /* reserviert, auf 0 setzen        */
   int32 reserved2;               /* reserviert, auf 0 setzen        */
   int32 reserved3;               /* reserviert, auf 0 setzen        */
   int32 reserved4;               /* reserviert, auf 0 setzen        */
   COLOR_ENTRY colors[];
} COLOR_TAB;
!end_verbatim

!end_node

!endif
