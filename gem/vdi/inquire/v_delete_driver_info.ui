!iflang [english]

!begin_node v_delete_driver_info
#!html_name v_delete_driver_info

(!begin_liste) [Availability]

!item [Name:]
Discard information about a driver.

!item [Opcode:]
181

!item [Syntax:]
int16_t v_delete_driver_info( int16_t handle, DRV_INFO *drv_info );

!item [Description:]
The call v_delete_driver_info discards the information obtained with
v_create_driver_info.

!begin_xlist [drv_info] !compressed
!item [Parameter]
Meaning
!item [~]
~
!item [handle]
Workstation identifier
!item [drv_info]
Pointer to the structure of v_create_driver_info

!end_xlist

!item [(!nolink [Return]) value:]
Unknown.


!item [Availability:]
(!nolink [NVDI 5])

!item [Group:]
Inquire functions

!item [See also:]
(!link [Binding] [Bindings for v_delete_driver_info]) ~ v_create_driver_info

(!ende_liste)
!end_node



!begin_node Bindings for v_delete_driver_info
#!html_name Bindings_for_v_delete_driver_info

!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t v_delete_driver_info( int16_t handle, DRV_INFO *drv_info );

!item [Binding:]
!begin_verbatim
int16_t v_delete_driver_info( int16_t handle, DRV_INFO *drv_info )
{
  *(DRV_INFO **) &intin[0] = drv_info;

  contrl[0] = 181;
  contrl[1] = 0;
  contrl[3] = 2;
  contrl[5] = 0;
  contrl[6] = handle;

  vdi ();

  return( intout[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! Contents
!hline
contrl    !! contrl[0]      !! 181   # Function Opcode
contrl+2  !! contrl[1]      !! 0     # Entry in ptsin
contrl+4  !! contrl[2]      !! 0     # Entry in ptsout
contrl+6  !! contrl[3]      !! 2     # Entry in intin
contrl+8  !! contrl[4]      !! 1     # Entry in intout
contrl+10 !! contrl[5]      !! 0
contrl+12 !! contrl[6]      !! handle
intin     !! intin[0..1]    !! drv_info
!end_table

(!ende_liste)
!end_node

!else

!begin_node v_delete_driver_info
#!html_name v_delete_driver_info

(!begin_liste) [Beschreibung]

!item [Name:]
Informationen Åber einen Treiber verwerfen.

!item [VDI-Nummer:]
181

!item [Deklaration:]
int16_t v_delete_driver_info( int16_t handle, DRV_INFO *drv_info );

!item [Beschreibung:]

!begin_xlist [drv_info] !compressed
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [drv_info]
Zeiger auf die Struktur von v_create_driver_info.

!end_xlist

!item [Ergebnis:]
Unbekannt.

!item [VerfÅgbar:]
(!nolink [NVDI 5])

!item [Gruppe:]
Auskunftsfunktionen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr v_delete_driver_info]) ~ v_create_driver_info

(!ende_liste)
!end_node



!begin_node Bindings fÅr v_delete_driver_info
#!html_name Bindings_for_v_delete_driver_info

!ignore_index

(!begin_liste) [Umsetzung]

!item [C:]
int16_t v_delete_driver_info( int16_t handle, DRV_INFO *drv_info );

!item [Umsetzung:]
!begin_verbatim
int16_t v_delete_driver_info( int16_t handle, DRV_INFO *drv_info )
{
  *(DRV_INFO **) &intin[0] = drv_info;

  contrl[0] = 181;
  contrl[1] = 0;
  contrl[3] = 2;
  contrl[5] = 0;
  contrl[6] = handle;

  vdi ();

  return( intout[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0]      !! 181   Opcode der Funktion
contrl+2  !! contrl[1]      !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2]      !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3]      !! 2     # EintrÑge in intin
contrl+8  !! contrl[4]      !! 1     # EintrÑge in intout
contrl+10 !! contrl[5]      !! 0
contrl+12 !! contrl[6]      !! handle
intin     !! intin[0..1]    !! drv_info
!end_table

(!ende_liste)
!end_node

!endif
