!iflang [english]

!begin_node vq_devinfo
#!html_name vq_devinfo

(!begin_liste) [Availability]

!item [Name:]
ØInquire device status infoÆ - Inquire status of the output device.

!item [Opcode:]
248

!item [Syntax:]
void vq_devinfo ( int16_t handle, int16_t device, int16_t *dev_open, int8_t *file_name,
                  int8_t *device_name );

!item [Description:]
The call vq_devinfo checks whether a driver for a given output device has been
installed. The following apply:

!begin_xlist !compressed [device_name]
!item [Parameter]
Meaning
!item [~]
~
!item [handle]
Workstation identifier
!item [device]
Device ID (0..99)
!item [dev_open]
Driver:
!begin_xlist !compressed
!item [0 =]
is closed
!item [1 =]
is already open
!end_xlist
!item [file_name]
Filename of the driver
!item [device_name]
Readable device name
!end_xlist

(!B)Note:(!b)
If the filename is empty, there is no driver with the given ID (!I)device.(!i)

The function reports both the name of the driver (say "XVGA256.SYS") as well as
the 'readable' name ("VGA 256 colours").

!item [(!nolink [Return]) value:]
The function does not return a result.

!item [Availability:]
As of NVDI 3.00.

!item [Group:]
Inquire functions

!item [See also:]
(!link [Binding] [Bindings for vq_devinfo]) ~ vq_ext_devinfo ~ vqt_devinfo ~ 
(!link [GDOS][About the GDOS]) ~ SpeedoGDOS ~ NVDI

(!ende_liste)
!end_node



!begin_node Bindings for vq_devinfo
#!html_name Bindings_for_vq_devinfo
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
void vq_devinfo ( int16_t handle, int16_t device, int16_t *dev_open, int8_t *file_name,
                  int8_t *device_name );

!item [Binding:]
!begin_verbatim
void vq_devinfo (int16_t handle, int16_t device,
                 int16_t *dev_open, int8_t *file_name,
                 int8_t *device_name)
{
   intin[0] = device;

   contrl[0] = 248;
   contrl[1] = 0;
   contrl[3] = 1;
   contrl[6] = handle;

   vdi ();

   *dev_open = ptsout[0];
   dev_name[0..p]    = ptsout[1..p-1];
   file_name[0..i-1] = intout[0..i-1]
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! Contents
!hline
contrl    !! contrl[0]      !! 248   # Function Opcode
contrl+2  !! contrl[1]      !! 0     # Entry in ptsin
contrl+4  !! contrl[2]      !! p     # Entry in ptsout
contrl+6  !! contrl[3]      !! 1     # Entry in intin
contrl+8  !! contrl[4]      !! i     # Entry in intout
contrl+12 !! contrl[6]      !! handle
intin     !! intin[0]       !! device
intout    !! intout[0..i-1] !! file_name[0..i-1]
ptsout    !! ptsout[0]      !! dev_open
ptsout+2  !! ptsout[1..p-1] !! device_name[0..p-2]
!end_table

(!ende_liste)
!end_node

!else

!begin_node vq_devinfo
#!html_name vq_devinfo

(!begin_liste) [Beschreibung]

!item [Name:]
ØInquire device status infoÆ - Status des AusgabegerÑts erfragen.

!item [VDI-Nummer:]
248

!item [Deklaration:]
void vq_devinfo ( int16_t handle, int16_t device, int16_t *dev_open, int8_t *file_name,
                  int8_t *device_name );

!item [Beschreibung:]
Die Funktion ÅberprÅft, ob ein Treiber fÅr ein bestimmtes AusgabegerÑt
installiert worden ist. Es gilt:

!begin_xlist !compressed [device_name]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [device]
(!nolink [VDI-GerÑtenummer]) (0..99)
!item [dev_open]
Treiber
!begin_xlist !compressed
!item [0 =]
noch nicht geîffnet
!item [1 =]
bereits geîffnet
!end_xlist
!item [file_name]
Dateiname des Treibers
!item [device_name]
Klartextname des Treibers
!end_xlist

(!B)Hinweis:(!b) Wenn der Dateiname leer ist, ist der Treiber nicht
vorhanden.

!item [Ergebnis:]
Die Funktion liefert kein Ergebnis.

!item [VerfÅgbar:]
ab NVDI 3.00

!item [Gruppe:]
Auskunftsfunktionen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vq_devinfo]) ~ vq_ext_devinfo ~ vqt_devinfo ~
(!link [GDOS][Das GDOS]) ~ SpeedoGDOS ~ NVDI

(!ende_liste)
!end_node



!begin_node Bindings fÅr vq_devinfo
#!html_name Bindings_for_vq_devinfo
!ignore_index

(!begin_liste) [Umsetzung]

!item [C:]
void vq_devinfo ( int16_t handle, int16_t device, int16_t *dev_open, int8_t *file_name,
                  int8_t *device_name );

!item [Umsetzung:]
!begin_verbatim
void vq_devinfo (int16_t handle, int16_t device,
                 int16_t *dev_open, int8_t *file_name,
                 int8_t *device_name)
{
   intin[0] = device;

   contrl[0] = 248;
   contrl[1] = 0;
   contrl[3] = 1;
   contrl[6] = handle;

   vdi ();

   *dev_open = ptsout[0];
   dev_name[0..p]    = ptsout[1..p-1];
   file_name[0..i-1] = intout[0..i-1]
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0]      !! 248   # Opcode der Funktion
contrl+2  !! contrl[1]      !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2]      !! p     # EintrÑge in ptsout
contrl+6  !! contrl[3]      !! 1     # EintrÑge in intin
contrl+8  !! contrl[4]      !! i     # EintrÑge in intout
contrl+12 !! contrl[6]      !! handle
intin     !! intin[0]       !! device
intout    !! intout[0..i-1] !! file_name[0..i-1]
ptsout    !! ptsout[0]      !! dev_open
ptsout+2  !! ptsout[1..p-1] !! device_name[0..p-2]
!end_table

(!ende_liste)
!end_node

!endif
