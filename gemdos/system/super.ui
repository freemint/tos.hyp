!iflang [english]


!begin_node Super
#!html_name Super
(!begin_liste) [Availability]
!item [Name:]
ØsupervisorÆ - Switch supervisor-mode.

!item [Opcode:]
32 (0x0020)

!item [Syntax:]
int32_t Super ( void *stack );

!item [Description:]
The (!nolink [GEMDOS]) routine Super switches between user- and
supervisor-mode, or interrogates the current operating 

The address of the supervisor stack may be altered during switching. If one
passes the value 1 for the parameter (!I)stack(!i), then the current mode
will be interrogated. The value 0 switches between user- and
supervisor-mode. All other values will be regarded as the new address for
the supervisor stack. In the supervisor-mode one can access all protected
memory blocks.

(!B)Note:(!b) With regard to future operating system versions, you should
avoid use of the Super function. This function gives rise to major problems
in conjunction with virtual memory and interruptible (and re-entrant)
file-systems in a multitasking system. If neccesary, alter your code so that
you can use the (!nolink [BIOS]) function Supexec.

For MiNT the following applies: (!nl)
If you are in SECURELEVEL > 1, you must have root privileges to get into
supervisor-mode. If you don't have them and call Super, the SIGSYS signal
(12) will be raised.

!item [(!nolink [Return]) value:]
If the state is to be obtained, one gets the value 0 for the user-mode and
-1 for the supervisor-mode. Else the function returns the address of the old
supervisor stack, provided one had switched to the supervisor-mode.

!item [Availability:]
All (!nolink [GEMDOS]) versions.

!item [Group:]
System functions

!item [See also:]
(!link [Binding] [Bindings for Super]) ~ Supexec
(!ende_liste)


!begin_node Bindings for Super
#!html_name Bindings_for_Super
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
int32_t Super ( void *stack );

!item [Assembler:]
!begin_verbatim
pea       stack        ; Offset 2
move.w    #32,-(sp)    ; Offset 0
trap      #1           ; GEMDOS
addq.l    #6,sp        ; Correct stack
!end_verbatim
(!ende_liste)
!end_node


!begin_node Note for the use of the GEMDOS function Super
#!html_name Note_for_the_use_of_the_GEMDOS_function_Super

The function (!nolink [Super]) in switching to the supervisor-mode sets the
(!nolink [Super]) stack pointer to the user-stack of the program. This can
be fatal, as the program can not know how large a super stack block has to
be. Too small a stack can lead to faulty behaviour, crashes or similar. The
super stack no longer lies in a block that is possibly protected by memory
protection mechanisms, so it can be destroyed by the program.

A part of the user stack could have been laid-off by virtual memory
mechanisms. A laid-off super stack as seen from the processor means that the
MC-680x0 processor can no longer save its CPU status to the super stack as
usual for exceptions, and then stop intentionally. No applications
programmer should be so arrogant as to burden the system with any kind of
restriction to the supervisor stack size.

(!B)See also:(!b) GEMDOS ~  Supexec
!end_node
!end_node


!else


!begin_node Super
#!html_name Super
(!begin_liste) [Beschreibung]
!item [Name:]
ØsupervisorÆ - Supervisor-Modus umschalten.

!item [Gemdosnummer:]
32 (0x0020)

!item [Deklaration:]
int32_t Super ( void *stack );

!item [Beschreibung:]
Die GEMDOS-Routine Super schaltet zwischen User- und Supervisor-Modus um
bzw. fragt den aktuellen Betriebsmodus ab.

Die Adresse des Supervisor-Stacks kann beim Umschalten verÑndert werden.
Åbergibt man fÅr den Parameter (!I)stack(!i) den Wert 1, so wird der
aktuelle Betriebsmodus erfragt. Der Wert 0 schaltet zwischen User und
Supervisor-Modus um. Alle anderen Werten werden als neue Adresse fÅr den
Supervisor-Stack betrachtet. Im Supervisor-Modus kann auf alle geschÅtzten
Speicherstellen zugegriffen werden.

(!B)Hinweis:(!b) Im Hinblick auf zukÅnftige Betriebssystemversionen sollten
Sie den Einsatz der Super-Funktion vermeiden. Diese Funktion verursacht im
Zusammenhang mit virtuellem Speicher und unterbrechbaren (und reentranten)
Dateisystemen in einem Multitaskingsystem groûe Probleme. Stellen Sie ggf.
Ihren Code so um, daû Sie die BIOS-Funktion Supexec verwenden kînnen.

FÅr MiNT gilt: (!nl)
If you are in SECURELEVEL > 1, you must have root privileges
to get into supervisor mode. If you don't have them and call Super,
the SIGSYS signal (12) will be raised.

!item [Ergebnis:]
Sollte der Zustand ermittelt werden, erhÑlt man als Resultat 0 fÅr den User-
und -1 fÅr den Supervisor-Modus. Ansonsten liefert die Funktion als Ergebnis
die Adresse des alten Supervisor-Stacks, sofern in den Supervisor-Modus
umgeschaltet wurde.

!item [VerfÅgbar:]
Alle (!nolink [GEMDOS]) Versionen

!item [Gruppe:]
Systemfunktionen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr Super]) ~ Supexec
(!ende_liste)


!begin_node Bindings fÅr Super
#!html_name Bindings_for_Super
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
int32_t Super ( void *stack );

!item [Assembler:]
!begin_verbatim
pea       stack        ; Offset 2
move.w    #32,-(sp)    ; Offset 0
trap      #1           ; GEMDOS aufrufen
addq.l    #6,sp        ; Stack korrigieren
!end_verbatim
(!ende_liste)
!end_node


!begin_node Hinweis zur Verwendung der GEMDOS-Funktion Super
#!html_name Note_for_the_use_of_the_GEMDOS_function_Super

Die Funktion (!nolink [Super]) setzt bei der Umschaltung in den
Supervisor-Modus den (!nolink [Super])-Stackpointer auf den User-Stack des
Programms. Das kann fatal sein, da das Programm nicht wissen kann, wie groû
ein (!nolink [Super])-Stackbereich sein muû. Ein zu kleiner Stack kann zu
Fehlverhalten, AbstÅrzen o.Ñ. fÅhren. Der (!nolink [Super])-Stack liegt
nicht mehr in einem mîglicherweise durch Speicherschutzmechanismen
gesicherten Bereich, kann also durch das Programm zerstîrt werden.

Ein Teil des User-Stacks kînnte durch virtuelle Speichermechanismen
ausgelagert worden sein. Ein ausgelagerter (!nolink [Super])-Stack bedeutet
Prozessorhalt, da der MC-680x0 Prozessor seine bei Exceptions Åbliche
Sicherung des CPU-Status auf den (!nolink [Super])-Stack nicht mehr
durchfÅhren kann und dann absichtlich stehenbleibt. Kein
Anwendungsprogrammierer sollte es sich anmaûen, dem System irgendeine
BeschrÑnkung der Supervisor-Stackgrîûe aufzuerlegen.

Querverweis: GEMDOS ~  Supexec
!end_node
!end_node


!endif
