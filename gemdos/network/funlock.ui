# Source: TOS 91/9, S. 88

!iflang [english]


!begin_node Funlock
#!html_name Funlock

(!begin_liste) [Availability]
!item [Name:]
(!rdouble)Funlock(!ldouble) - Unlock a portion of a file

!item [Opcode:]
101 (0x0065)

!item [Syntax:]
int32_t Funlock ( int16_t handle );

!item [Description:]
The (!nolink [GEMDOS]) routine Funlock serves to unlock the portion of a file
previously locked by (!link [Flock][F_lock]).
The following apply:

!begin_xlist !compressed [Parameter]
!item [Parameter]
Meaning
!item [~]
~
!item [handle]
File ID
!end_xlist

!item [(!nolink [Return]) value:]
Returns E_OK on success, or a negative GEMDOS error code otherwise.

!item [Availability:]
Available when a network driver is (!nolink [installed]).

!item [Group:]
Network functions

!item [See also:]
(!link [Binding] [Bindings for Funlock]) (!link [Flock][F_lock])
(!ende_liste)


!begin_node Bindings for Funlock
#!html_name Bindings_for_Funlock

!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
int32_t Funlock ( int16_t handle );

!item [Assembler:]
!begin_verbatim
move.w    handle,-(sp) ; Offset 2
move.w    #101,-(sp)   ; Offset 0
trap      #1           ; GEMDOS
addq.l    #4,sp        ; correct stack
!end_verbatim
(!ende_liste)
!end_node
!end_node


!else


!begin_node Funlock
#!html_name Funlock

(!begin_liste) [Beschreibung]
!item [Name:]
(!rdouble)Funlock(!ldouble) - entsch(!uumlaut)tzt Teile von Dateien

!item [Gemdosnummer:]
101 (0x0065)

!item [Deklaration:]
int32_t Funlock ( int16_t handle );

!item [Beschreibung:]
Die (!nolink [GEMDOS])-Routine Funlock hebt von (!link [Flock][F_lock])
gesetzte Sperre wieder auf. Es gilt:

!begin_xlist !compressed [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Dateikennung
!end_xlist

!item [Ergebnis:]
Die Funktion liefert bei korrekter Ausf(!uumlaut)hrung eine 0, und eine negative
Zahl, wenn es zu einem Fehler kam.

!item [Verf(!uumlaut)gbar:]
Verf(!uumlaut)gbar, wenn ein Netzwerktreiber installiert ist.

!item [Gruppe:]
Netzwerkfunktionen

!item [Querverweis:]
(!link [Binding] [Bindings f(!uumlaut)r Funlock]) (!link [Flock][F_lock])
(!ende_liste)


!begin_node Bindings f(!uumlaut)r Funlock
#!html_name Bindings_for_Funlock

!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
int32_t Funlock ( int16_t handle );

!item [Assembler:]
!begin_verbatim
move.w    handle,-(sp) ; Offset 2
move.w    #101,-(sp)   ; Offset 0
trap      #1           ; GEMDOS aufrufen
addq.l    #4,sp        ; Stack korrigieren
!end_verbatim
(!ende_liste)
!end_node
!end_node

!endif

