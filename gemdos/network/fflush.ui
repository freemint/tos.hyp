# Source: TOS 91/9, S. 88

!iflang [english]


!begin_node Fflush
#!html_name Fflush

(!begin_liste) [Availability]
!item [Name:]
(!rdouble)Fflush(!ldouble) - Flush the buffer of a file

!item [Opcode:]
102 (0x0066)

!item [Syntax:]
int32_t Fflush ( int16_t handle );

!item [Description:]
The (!nolink [GEMDOS]) routine Fflush writes all modified data of the
specified file (!I)handle(!i) from its buffer to the disk.

!item [(!nolink [Return]) value:]
Returns E_OK on success, or a negative GEMDOS error code otherwise.

!item [Availability:]
Available when a network driver is (!nolink [installed]).

!item [Group:]
Network functions

!item [See also:]
(!link [Binding] [Bindings for Fflush])
(!ende_liste)


!begin_node Bindings for Fflush
#!html_name Bindings_for_Fflush

!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
int32_t Fflush ( int16_t handle );

!item [Assembler:]
!begin_verbatim
move.w    handle,-(sp) ; Offset 2
move.w    #102,-(sp)   ; Offset 0
trap      #1           ; GEMDOS
addq.l    #4,sp        ; correct stack
!end_verbatim
(!ende_liste)
!end_node
!end_node


!else


!begin_node Fflush
#!html_name Fflush

(!begin_liste) [Beschreibung]
!item [Name:]
(!rdouble)Fflush(!ldouble) - Leert den Datenpuffer der Datei

!item [Gemdosnummer:]
102 (0x0066)

!item [Deklaration:]
int32_t Fflush ( int16_t handle );

!item [Beschreibung:]
Die Funktion leert den Datenpuffer der angegebenen Datei und schreibt die
angesammelten Daten in die Datei.

!item [Ergebnis:]
Die Funktion liefert bei korrekter Ausf(!uumlaut)hrung eine 0, und eine negative
Zahl, wenn es zu einem Fehler kam.

!item [Verf(!uumlaut)gbar:]
Verf(!uumlaut)gbar, wenn ein Netzwerktreiber installiert ist.

!item [Gruppe:]
Netzwerkfunktionen

!item [Querverweis:]
(!link [Binding] [Bindings f(!uumlaut)r Fflush])
(!ende_liste)


!begin_node Bindings f(!uumlaut)r Fflush
#!html_name Bindings_for_Fflush

!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
int32_t Fflush ( int16_t handle );

!item [Assembler:]
!begin_verbatim
move.w    handle,-(sp) ; Offset 2
move.w    #102,-(sp)   ; Offset 0
trap      #1           ; GEMDOS aufrufen
addq.l    #4,sp        ; Stack korrigieren
!end_verbatim
(!ende_liste)
!end_node
!end_node

!endif

