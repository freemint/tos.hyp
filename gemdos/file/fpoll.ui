!begin_node Fpoll
(!begin_liste) [Availability]
!item [Name:]
¯Fpoll® - Enquiry of the file status with timeout.

!item [Opcode:]
346

!item [Syntax:]
int32_t Fpoll (POLLFD *fds, uint32_t nfds, uint32_t timeout );

!item [Description:]
Fpoll() performs a similar task to Fselect: it waits for one of a set
of file descriptors to become ready to perform I/O.

The set of file descriptors to be monitored is specified in the fds
argument, which is an array of structures of the following form:

!begin_verbatim
typedef struct pollfd
{
        int32_t  fd;            /* file descriptor */
        uint16_t events;        /* requested events */
        uint16_t revents;       /* returned events */
} POLLFD;
!end_verbatim

The caller should specify the number of items in the fds array in nfds.

The  field  fd contains a file descriptor for an open file.  If this
field is negative, then the corresponding events field is ignored and
the revents field returns zero.  (This provides an easy way
of ignoring a file descriptor for a single poll() call: simply negate the fd field.)

The field events is an input parameter, a bit mask specifying the
events the application is interested in for the file descriptor fd.  If
this field is specified as zero, then all events are ignored for fd and
revents returns zero.

The  field revents is an output parameter, filled by the kernel with
the events that actually occurred.  The bits returned in revents can
include any of those specified in events, or one of the values
POLLERR, POLLHUP, or POLLNVAL.  (These three bits are meaningless in
the events field, and will be set in the revents field whenever the
corresponding condition is true.)

If none of the events requested (and no error) has occurred for any of
the file descriptors, then poll() blocks until one of the events
occurs.

The timeout argument specifies the minimum number of milliseconds that
poll() will block.  (This interval will be rounded up to the system
clock granularity, and kernel scheduling delays  mean  that the
blocking interval may overrun by a small amount.)  Specifying a
negative value in timeout means an infinite timeout.  Specifying a
timeout of zero causes poll() to return immediately, even if no file
descriptors are ready.

The bits that may be set/returned in events and revents are defined in
<poll.h>:


!begin_xlist !compressed [POLLRDNORM]
!item [POLLIN] There is data to read.

!item [POLLPRI] There is urgent data to read (e.g., out-of-band data on
TCP socket; pseudoterminal master in packet mode has seen state change
in slave).

!item [POLLOUT] Writing now will not block.

!item [POLLRDHUP] Stream socket peer closed connection, or shut down
writing half of connection.  The _GNU_SOURCE feature test macro must be
defined (before including  any  header  files)  in  order  to obtain
this definition.

!item [POLLERR] Error condition (output only).

!item [POLLHUP] Hang up (output only).

!item [POLLNVAL] Invalid request: fd not open (output only).
!end_xlist

When compiling with _XOPEN_SOURCE defined, one also has the following,
which convey no further information beyond the bits listed above:

!begin_xlist !compressed [POLLRDNORM]
!item [POLLRDNORM] Equivalent to POLLIN.

!item [POLLRDBAND] Priority band data can be read (generally unused on
MiNT).

!item [POLLWRNORM] Equivalent to POLLOUT.

!item [POLLWRBAND] Priority data may be written.
!end_xlist

MiNT(Lib) also knows about, but does not use POLLMSG.


!item [Return value:]
The function can return the following results:
!begin_xlist !compressed [EINVAL :]
!item [0 :]
The call timed out and no file descriptors were ready.
!item [>0 :]
The number of structures which have nonzero revents fields (in other words, those descriptors with events or errors reported).
!item [EBADF :]
At least one of the handles is not assigned to an open file.
!item [EFAULT :]
The array given as argument was not contained in the calling program's address space.
!item [EINTR :]
A signal occurred before any requested event; see Psignal.
!item [EINVAL :]
The nfds value exceeds the RLIMIT_NOFILE value.
!item [ENOMEM : ]
There was no space to allocate file descriptor tables.
!end_xlist

!item [Availability:]
This function is available as of FreeMiNT 1.15.12.
              
!item [Group:]
File functions

!item [See also:]
(!link [Binding][Bindings for Fpoll]) ~ Fselect ~ Finstat ~ Foutstat
(!ende_liste)


!begin_node Bindings for Fpoll
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
int32_t Fpoll (POLLFD *fds, uint32_t nfds, uint32_t timeout );

!item [Assembler:]
!begin_verbatim
move.l    timeout,-(sp)  ; Offset  10
move.l    nfds,-(sp)     ; Offset  6
pea       fds            ; Offset  2
move.w    #346,-(sp)     ; Offset  0
trap      #1             ; GEMDOS
lea       14(sp),sp      ; Correct stack
!end_verbatim
(!ende_liste)
!end_node
!end_node
