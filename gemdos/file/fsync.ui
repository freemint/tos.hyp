!begin_node Fsync
(!begin_liste) [Availability]
!item [Name:]
¯Fsync® - Cynchronize a file's in-core state with storage device.

!item [Opcode:]
259 (0x0103)

!item [Syntax:]
int16_t Fsync ( int16_t handle );

!item [Description:]

Fsync()  transfers  ("flushes")  all  modified  in-core  data of (i.e.,
modified buffer cache pages for) the file referred to by the file
descriptor fd to the disk device (or other permanent storage device) so
that all changed information can be retrieved even after the system
crashed or was rebooted.  This includes writing through or flushing a
disk cache if present.  The call blocks until the device reports that
the transfer has completed.  It also flushes metadata information
associated with the file (see stat(2)).

Calling  Fsync()  does  not necessarily ensure that the entry in the
directory containing the file has also reached disk.  For that an
explicit Fsync() on a file descriptor for the directory is also needed.

(!B)Warning:(!b) In MiNT this function is currently not implemented and
calls Ssync() instead.

!item [Return value:]
On success, these system call return zero. Otherwise, it returns
one of the following error codes:
!begin_xlist !compressed [Otherwise :]
!item [EBADF :]
Incorrect file handle.
!item [EIO :]
An error occurred during synchronization.
!item [EROFS: ]
!item [EINVAL: ]
"handle" is bound to a special file which does not support synchronization.
!end_xlist

!item [Availability:]
MagiC as of Version 4.01, and under all MiNT versions integrated with
MultiTOS.

!item [Group:]
File functions

!item [See also:]
(!link [Binding] [Bindings for Fsync]) ~ Ssync
(!ende_liste)


!begin_node Bindings for Fsync
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
void Fsync ( void );

!item [Assembler:]
!begin_verbatim
move.w    handle,-(sp)  ; Offset 2
move.w    #259,-(sp)   ; Offset 0
trap      #1           ; GEMDOS
addq.l    #4,sp        ; Correct stack
!end_verbatim
(!ende_liste)
!end_node
!end_node


