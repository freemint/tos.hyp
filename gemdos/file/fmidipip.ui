!iflang [english]


!begin_node Fmidipipe
(!begin_liste) [Availability]
!item [Name:]
ØFmidipipeÆ - Redirect MIDI input/output.

!item [Opcode:]
294

!item [Syntax:]
int32_t Fmidipipe ( int16_t pid, int16_t in, int16_t out );

!item [Description:]
The function Fmidipipe alters the (!nolink [GEMDOS]) handles for MIDI inout
and output for the process with the ID (!I)pid(!i). The parameters
(!I)in(!i) and (!I)out(!i) describe the (!nolink [GEMDOS]) handles that take
on MIDI input and output respectively for the process.

In the case (!I)pid(!i) = 0, the current process will be used. Then The
function call is equivalent to the following two lines:

!begin_verbatim
Fforce (-4, in);
Fforce (-5, out);
!end_verbatim

!item [(!nolink [Return]) value:]
The function can return the following results:

!begin_xlist !compressed [EACCDN :]
!item [E_OK :]
No error has arisen
!item [EFILNF :]
The process (!I)pid(!i) was not found
!item [EACCDN :]
(!I)in(!i)/(!I)out(!i) are not open for reading or writing
!item [EBADF :]
(!I)in(!i)/(!I)out(!i) is not a valid handle
!end_xlist

!item [Availability:]
Available when a 'MiNT' cookie with a version of at least 0.90 exists.
              
!item [Group:]
File functions

!item [See also:]
(!link [Binding] [Bindings for Fmidipipe]) ~ Fdup ~ Fforce ~
(!link [Test for pipes][Pipes, Test for])
(!ende_liste)


!begin_node Bindings for Fmidipipe
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
int32_t Fmidipipe ( int16_t pid, int16_t in, int16_t out );

!item [Assembler:]
!begin_verbatim
move.w    out,-(sp)    ; Offset 6
move.w    in,-(sp)     ; Offset 4
move.w    pid,-(sp)    ; Offset 2
move.w    #294,-(sp)   ; Offset 0
trap      #1           ; GEMDOS
addq.l    #8,sp        ; Correct stack
!end_verbatim
(!ende_liste)
!end_node
!end_node


!else


!begin_node Fmidipipe
(!begin_liste) [Beschreibung]
!item [Name:]
ØFmidipipeÆ - MIDI Ein/Ausgabe umlenken.

!item [Gemdosnummer:]
294

!item [Deklaration:]
int32_t Fmidipipe ( int16_t pid, int16_t in, int16_t out );

!item [Beschreibung:]
Die Funktion verÑndert die GEMDOS-Handles fÅr MIDI Ein- und Ausgabe fÅr den
Prozeû mit der Kennung (!I)pid(!i). Die Parameter (!I)in(!i) bzw.
(!I)out(!i) beschreiben die (!nolink [GEMDOS])-Handles, welche fÅr den angegebenen
Prozeû die MIDI-Eingabe bzw. -ausgabe Åbernehmen.

Im Fall (!I)pid(!i) = 0, wird der aktuelle Prozeû benutzt. Dann ist der
Funktionsaufruf Ñquivalent zu den folgenden beiden Zeilen:

!begin_verbatim
Fforce (-4, in);
Fforce (-5, out);
!end_verbatim

!item [Ergebnis:]
Die Funktion kann folgende RÅckgabewerte liefern:

!begin_xlist !compressed [EACCDN :]
!item [E_OK :]
kein Fehler aufgetreten.
!item [EFILNF :]
der Prozeû (!I)pid(!i) wurde nicht gefunden.
!item [EACCDN :]
(!I)in(!i)/(!I)out(!i) sind nicht zum Lesen bzw. Schreiben geîffnet.
!item [EBADF :]
(!I)in(!i)/(!I)out(!i) ist kein gÅltiges Handle.
!end_xlist

!item [VerfÅgbar:]
VerfÅgbar, wenn ein 'MiNT' Cookie mit einer Versionsnummer von mindestens
0.90 existiert.

!item [Gruppe:]
Dateifunktionen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr Fmidipipe]) ~ Fdup ~ Fforce ~
(!link [Test auf Pipes][Pipes, Test auf])
(!ende_liste)


!begin_node Bindings fÅr Fmidipipe
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
int32_t Fmidipipe ( int16_t pid, int16_t in, int16_t out );

!item [Assembler:]
!begin_verbatim
move.w    out,-(sp)    ; Offset 6
move.w    in,-(sp)     ; Offset 4
move.w    pid,-(sp)    ; Offset 2
move.w    #294,-(sp)   ; Offset 0
trap      #1           ; GEMDOS aufrufen
addq.l    #8,sp        ; Stack korrigieren
!end_verbatim
(!ende_liste)
!end_node
!end_node


!endif
