!iflang [english]

!begin_node Pmsgrcv
(!begin_liste) [Availability]
!item [Name:]
(!rdouble)Receive from message queue(!ldouble) - Read a message from a message queue.

!item [Opcode:]
379

!item [Syntax:]
int32_t Pmsgrcv ( int32_t msqid, void *msgp, int32_t msgsz,
                  int32_t msgtyp, int32_t msgflg );

!item [Description:]
The (!nolink [GEMDOS]) routine Pmsgrcv removes a message from the
message queue identified by (!I)msqid(!i) and stores it into the structure
pointed to by (!I)pmsg(!i). The following apply:
!begin_xlist !compressed [Parameter]
!item [Parameter]
Meaning
!item [~]
~
!item [msqid]
(!nolink [Message]) queue identifier
!item [msgp]
Pointer to a msgbuf structure
!item [msgsz]
(!nolink [Size]) of message data to read
!item [msgtyp]
(!nolink [Message]) type
!item [msgflg]
Flags:
!begin_xlist [IPC_NOWAIT (0x0800)] !compressed
!item [IPC_NOWAIT (0x0800)]
(!nolink [Return]) immediately if there is no message in the message queue
!item [(!nolink [MSG_EXCEPT])]
If (!I)msgtyp(!i) is greater than 0, then read the first message with message
type that differs from (!I)msgtyp(!i)
!item [(!nolink [MSG_NOERROR])]
Truncate the message text if longer than (!I)msgsz(!i) bytes
!end_xlist
!end_xlist

(!B)Note:(!b) The complete documentation about (!nolink [System V IPC]) and POSIX is
available from multiple sources: IEEE, The Open Group, Unix manpages.

!item [(!nolink [Return]) value:]
Number of bytes copied into the (!I)mtext(!i) array if successful or a negative
GEMDOS error code. The function currently returns ENOSYS.

!item [Availability:] This function is currently not implemented.

!item [Group:]
System V IPC

!item [See also:]
(!link [Binding] [Bindings for Pmsgrcv]) ~ Pmsgctl ~ Pmsgget ~ Pmsgsnd
(!ende_liste)


!begin_node Bindings for Pmsgrcv
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
int32_t Pmsgrcv ( int32_t msqid, void *msgp, int32_t msgsz,
                  int32_t msgtyp, int32_t msgflg );

!item [Assembler:]
!begin_verbatim
move.l    msgflg,-(sp) ; Offset 18
move.l    msgtyp,-(sp) ; Offset 14
move.l    msgsz,-(sp)  ; Offset 10
pea       msgp         ; Offset 6
move.l    msqid,-(sp)  ; Offset 2
move.w    #379,-(sp)   ; Offset 0
trap      #1           ; GEMDOS
lea       22(sp),sp    ; Correct stack
!end_verbatim

(!ende_liste)
!end_node
!end_node

!else

!begin_node Pmsgrcv
(!begin_liste) [Beschreibung]
!item [Name:]
(!rdouble)Receive From Message Queue(!ldouble) - Read a message from a message queue.

!item [Gemdosnummer:]
379

!item [Deklaration:]
int32_t Pmsgrcv ( int32_t msqid, void *msgp, int32_t msgsz,
                  int32_t msgtyp, int32_t msgflg );

!item [Beschreibung:]
The (!nolink [GEMDOS]) routine Pmsgrcv removes a message from the
message queue identified by (!I)msqid(!i) and stores it into the structure
pointed to by (!I)pmsg(!i). The following apply:
!begin_xlist !compressed [Parameter]
!item [Parameter]
Meaning
!item [~]
~
!item [msqid]
(!nolink [Message]) queue identifier
!item [msgp]
Pointer to a msgbuf structure
!item [msgsz]
(!nolink [Size]) of message data to read
!item [msgtyp]
(!nolink [Message]) type
!item [msgflg]
Flags:
!begin_xlist [IPC_NOWAIT (0x0800)] !compressed
!item [IPC_NOWAIT (0x0800)]
(!nolink [Return]) immediately if there is no message in the message queue
!item [(!nolink [MSG_EXCEPT])]
If (!I)msgtyp(!i) is greater than 0, then read the first message with message
type that differs from (!I)msgtyp(!i)
!item [(!nolink [MSG_NOERROR])]
Truncate the message text if longer than (!I)msgsz(!i) bytes
!end_xlist
!end_xlist

(!B)Note:(!b) The complete documentation about (!nolink [System V IPC]) and POSIX is
available from multiple sources: IEEE, The Open Group, Unix manpages.

!item [Ergebnis:]
Number of bytes copied into the (!I)mtext(!i) array if successful or a negative
GEMDOS error code. The function currently returns ENOSYS.

!item [Verf(!uumlaut)gbar:]
This function is currently not implemented.

!item [Gruppe:]
System V IPC

!item [Querverweis:]
(!link [Binding] [Bindings f(!uumlaut)r Pmsgrcv]) ~ Pmsgctl ~ Pmsgget ~ Pmsgsnd
(!ende_liste)


!begin_node Bindings f(!uumlaut)r Pmsgrcv
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
int32_t Pmsgrcv ( int32_t msqid, void *msgp, int32_t msgsz,
        int32_t msgtyp, int32_t msgflg );

!item [Assembler:]
!begin_verbatim
move.l    msgflg,-(sp) ; Offset 18
move.l    msgtyp,-(sp) ; Offset 14
move.l    msgsz,-(sp)  ; Offset 10
pea       msgp         ; Offset 6
move.l    msqid,-(sp)  ; Offset 2
move.w    #379,-(sp)   ; Offset 0
trap      #1           ; GEMDOS aufrufen
lea       22(sp),sp    ; Stack korrigieren
!end_verbatim

(!ende_liste)
!end_node
!end_node

!endif
