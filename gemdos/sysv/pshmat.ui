!iflang [english]

!begin_node Pshmat
(!begin_liste) [Availability]
!item [Name:]
(!rdouble)Attach shared memory segment(!ldouble) - (!nolink [Attach]) a shared
memory segment

!item [Opcode:]
370

!item [Syntax:]
int32_t Pshmat ( int32_t shmid, const void *shmaddr, int32_t shmflg );

!item [Description:]
The (!nolink [GEMDOS]) routine Pshmat attaches a shared memory segment to the
address space of the calling process. The following apply:
!begin_xlist !compressed [Parameter]
!item [Parameter]
Meaning
!item [~]
~
!item [shmid]
(!nolink [Shared memory]) segment identifier
!item [shmaddr]
Address at which the attach occurs. If NULL, the system choose a suitable
unused page-aligned address. If (!I)shmaddr(!i) is not NULL and SHM_RND
(0x2000) is specified in (!I)shmflg(!i), the attach occurs at (!I)shmaddr(!i)
rounded down to the nearest multiple of SHMLBA.
!item [msgflg]
SHM_RDONLY (0x1000) attaches the segment for read-only access. By default,
the segment is attached for read-write access
!end_xlist

(!B)Note:(!b) The complete documentation about (!nolink [System V IPC]) and
POSIX is available from multiple sources: IEEE, The Open Group, Unix manpages.

!item [(!nolink [Return]) value:]
Returns the address of the attached shared memory segment, or a negative GEMDOS
error code. The function currently returns ENOSYS.

!item [Availability:] This function is currently not implemented.

!item [Group:]
System V IPC

!item [See also:]
(!link [Binding] [Bindings for Pshmat]) ~ Pshmctl ~ Pshmdt ~ Pshmget
(!ende_liste)


!begin_node Bindings for Pshmat
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
int32_t Pshmat ( int32_t shmid, const void *shmaddr, int32_t shmflg );

!item [Assembler:]
!begin_verbatim
move.l    shmflg,-(sp) ; Offset 10
pea       shmaddr      ; Offset 6
move.l    shmid,-(sp)  ; Offset 2
move.w    #370,-(sp)   ; Offset 0
trap      #1           ; GEMDOS
lea       14(sp),sp    ; Correct stack
!end_verbatim

(!ende_liste)
!end_node
!end_node

!else

!begin_node Pshmat
(!begin_liste) [Beschreibung]
!item [Name:]
(!rdouble)Attach Shared Memory Segment(!ldouble) - (!nolink [Attach]) a shared
memory segment

!item [Gemdosnummer:]
370

!item [Deklaration:]
int32_t Pshmat ( int32_t shmid, const void *shmaddr, int32_t shmflg );

!item [Beschreibung:]
The (!nolink [GEMDOS]) routine Pshmat attaches a shared memory segment to the
address space of the calling process. The following apply:
!begin_xlist !compressed [Parameter]
!item [Parameter]
Meaning
!item [~]
~
!item [shmid]
(!nolink [Shared memory]) segment identifier
!item [shmaddr]
Address at which the attach occurs. If NULL, the system choose a suitable
unused page-aligned address. If (!I)shmaddr(!i) is not NULL and SHM_RND
(0x2000) is specified in (!I)shmflg(!i), the attach occurs at (!I)shmaddr(!i)
rounded down to the nearest multiple of SHMLBA.
!item [msgflg]
SHM_RDONLY (0x1000) attaches the segment for read-only access. By default,
the segment is attached for read-write access
!end_xlist

(!B)Note:(!b) The complete documentation about (!nolink [System V IPC]) and
POSIX is available from multiple sources: IEEE, The Open Group, Unix manpages.

!item [Ergebnis:]
Returns the address of the attached shared memory segment, or a negative GEMDOS
error code. The function currently returns ENOSYS.

!item [Verf(!uumlaut)gbar:]
This function is currently not implemented.

!item [Gruppe:]
System V IPC

!item [Querverweis:]
(!link [Binding] [Bindings f(!uumlaut)r Pshmat]) ~ Pshmctl ~ Pshmdt ~ Pshmget
(!ende_liste)


!begin_node Bindings f(!uumlaut)r Pshmat
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
int32_t Pshmat ( int32_t shmid, const void *shmaddr, int32_t shmflg );

!item [Assembler:]
!begin_verbatim
move.l    shmflg,-(sp) ; Offset 6
pea       shmaddr      ; Offset 2
move.l    shmid,-(sp)  ; Offset 6
move.w    #370,-(sp)   ; Offset 0
trap      #1           ; GEMDOS aufrufen
lea       14(sp),sp    ; Stack korrigieren
!end_verbatim

(!ende_liste)
!end_node
!end_node

!endif
