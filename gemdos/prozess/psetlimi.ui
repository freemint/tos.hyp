!iflang [english]


!begin_node Psetlimit
(!begin_liste) [Availability]
!item [Name:]
ØPsetlimitÆ - Set or obtain allocation limits of the system resources.

!item [Opcode:]
287

!item [Syntax:]
int32_t Psetlimit ( int16_t lim, int32_t value );

!item [Description:]
The function Psetlimit serves for setting or obtaining resource allocation
limits for the current process. The parameter (!I)lim(!i) determines the
desired resource type:

!begin_xlist !compressed [lim]
!item [lim]
Meaning
!item [~]
~
!item [1]
Max. CPU-time for the process (milliseconds)
!item [2]
Max. total memory allowed for process in bytes
!item [3]
Max. allocatable memory for the process (in bytes)
!end_xlist

The difference between 2 and 3 is that the total memory also includes the
TEXT, DATA and BSS segments of the process.

With the help of this function the resource allocation limits are set both
for the current process as well as individually for all child processes
created later. So if a process sets a CPU limit and later creates several
child processes, then this CPU limit applies also for each individual child
process, and not, say, for all child processes together.

The parameter (!I)value(!i) determines the maximum value that a resource is
allowed to take. A value of 0 here means that the resource is unlimited. A
negative value here returns the current value, leaving it unaltered.

(!B)Note:(!b) There are no restrictions on increasing the limits. Each
process may alter any of its limits or even set it to unlimited.

Memory allocation limits do not apply for Pexec. If, say, a process is
limited to 256 kbyte, it can nevertheless use Pexec to launch a
child process that uses more memory. (!B)Warning:(!b) This does (!I)not(!i)
apply in MagiC; here memory limits are inherited at Pexec!

Memory limitations are not valid retrospectively. If, for instance, a
process owns 256 kbyte and then calls Psetlimit to reduce its requirements
to 128 kbyte, then though it will not be terminated, it can not allocate any
memory any more until its size falls under the specified 128 kbyte.

Limitations of the CPU-time on the other hand do act retrospectively. If a
process reduces its CPU-time below the previously valid value, then it will
receive a SIGXCPU signal immediately.

(!B)Warning:(!b) Invalid function numbers and those that are not supported
by MagiC return EINVFN.

(!B)Note about (!nolink [MagiC]):(!b) If a program has been modified with
the utility program LIMITMEM, then this setting takes precedence over the
calling process' memory limit. Psetlimit is supported by the extended
shel_write mode; due to this, memory-limited applications may also be
started in parallel.

!item [(!nolink [Return]) value:]
The function returns the old limit value.

!item [Availability:]
MagiC from Version 4.0 (17.09.1996) onwards and as of the first in MultiTOS
integrated MiNT version 1.04.

!item [Group:]
Process functions

!item [See also:]
(!link [Binding] [Bindings for Psetlimit]) ~ Prusage ~ Signals
(!ende_liste)


!begin_node Bindings for Psetlimit
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
int32_t Psetlimit ( int16_t lim, int32_t value );

!item [Assembler:]
!begin_verbatim
move.l    value,-(sp)  ; Offset 4
move.w    lim,-(sp)    ; Offset 2
move.w    #287,-(sp)   ; Offset 0
trap      #1           ; GEMDOS
addq.l    #8,sp        ; Correct stack
!end_verbatim
(!ende_liste)
!end_node
!end_node


!else


!begin_node Psetlimit
(!begin_liste) [Beschreibung]
!item [Name:]
ØPsetlimitÆ - Limits der Systemresourcen setzen/erfragen.

!item [Gemdosnummer:]
287

!item [Deklaration:]
int32_t Psetlimit ( int16_t lim, int32_t value );

!item [Beschreibung:]
Die Funktion dient dem Setzen/Abfragen einer Resourcenbegrenzung fÅr den
aktuellen Prozess. Der Parameter (!I)lim(!i) bestimmt die gewÅnschte
Resource-Art:

!begin_xlist !compressed [lim]
!item [lim]
Bedeutung
!item [~]
~
!item [1]
max. CPU-Zeit fÅr den Prozess (Millisekunden)
!item [2]
max. Gesamtspeicher des Prozesses in Bytes
!item [3]
max. allozierbarer Speicher fÅr den Prozess (in Bytes).
!end_xlist

Der Unterschied zwischen 2 und 3 besteht darin, daû der Gesamtspeicher auch
die TEXT-, DATA- und BSS-Segmente des Prozesses umfaût.

Mit Hilfe dieser Funktion werden die Resource-Begrenzungen sowohl fÅr den
aktuellen Prozess, als auch fÅr alle spÑter erzeugten Childs einzeln
eingestellt. Wenn ein Prozess also ein CPU-Limit einstellt, und danach
mehrere Child-Prozesse erzeugt, dann gilt dieses CPU-Limit auch fÅr jeden
einzelnen Child, und nicht etwa fÅr alle Childs zusammen.

Der Parameter (!I)value(!i) bestimmt den Wert, den eine Resource annehmen
soll. Ein Wert von 0 bedeutet in diesem Zusammenhang, daû die Resource
unbegrenzt ist. Ein negativer Wert lÑût die Resource unverÑndert.

(!B)Hinweis:(!b) Es gibt keine Restriktionen beim Vergrîûern der
Begrenzungen. Jeder Prozess kann jede seiner Begrenzungen beliebig verÑndern
oder sogar auf unbegrenzt setzen.

Speicherbegrenzungen kommen bei Pexec nicht zur Anwendung. Ist z.B. ein
Prozess auf 256Kbyte begrenzt, kann er dennoch mit Pexec einen
Tochterprozess starten, der mehr Speicher verbraucht. (!B)Achtung:(!b) Dies
gilt (!I)nicht(!i) in MagiC; hier werden Speicherbegrenzungen bei Pexec
vererbt!

Speicherbegrenzungen sind nicht rÅckwirkend gÅltig. Besitzt ein Prozess z.B.
256Kbyte und ruft dann Psetlimit auf, um seinen Bedarf auf 128Kbyte zu
reduzieren, dann wird er zwar nicht beendet, aber er kann keinen Speicher
mehr allozieren, bis seine Grîûe unter die angegebenen 128Kbyte fÑllt.

Begrenzungen der CPU-Zeit wirken hingegen rÅckwirkend. VerkÅrzt ein Prozess
seine CPU-Zeit unter den bisher gÅltigen Wert, dann empfÑngt er sofort ein
SIGXCPU-Signal.

(!B)Achtung:(!b) UngÅltige Funktionsnummern und solche, die von MagiC nicht 
unterstÅtzt werden, liefern EINVFN.

(!B)Hinweis zu (!nolink [MagiC]):(!b) Ist ein Programm mit dem Dienstprogramm LIMITMEM
modifiziert worden, hat diese Einstellung Vorrang vor dem Speicherlimit des
aufrufenden Prozesses. Psetlimit wird vom erweiterten shel_write()-Modus
unterstÅtzt; damit kînnen speicherbeschrÑnkte Applikationen auch parallel
gestartet werden.

!item [Ergebnis:]
Die Funktion liefert den alten Begrenzungswert zurÅck.

!item [VerfÅgbar:]
MagiC ab Version 4.0 (17.09.1996) und ab der ersten in MultiTOS integrierten
MiNT Version 1.04.

!item [Gruppe:]
Prozessfunktionen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr Psetlimit]) ~ Prusage ~ Signale
(!ende_liste)


!begin_node Bindings fÅr Psetlimit
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
int32_t Psetlimit ( int16_t lim, int32_t value );

!item [Assembler:]
!begin_verbatim
move.l    value,-(sp)  ; Offset 4
move.w    lim,-(sp)    ; Offset 2
move.w    #287,-(sp)   ; Offset 0
trap      #1           ; GEMDOS aufrufen
addq.l    #8,sp        ; Stack korrigieren
!end_verbatim
(!ende_liste)
!end_node
!end_node


!endif
