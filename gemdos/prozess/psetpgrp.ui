!iflang [english]


!begin_node Psetpgrp
(!begin_liste) [Availability]
!item [Name:]
(!rdouble)Psetpgrp(!ldouble) - Get/Set process group number of a process.

!item [Opcode:]
270

!item [Syntax:]
int16_t Psetpgrp ( int16_t pid, int16_t newgrp );

!item [Description:]
The function Psetpgrp alters the group number of the process with the ID
(!I)pid(!i) to the value (!I)newgrp(!i), or inquires the group number if
(!I)newgrp(!i) is negative. The process must have the same UID as the current
process, or be the parent of it.

If (!I)pid(!i) = 0, the process group of the current process will be set. If
(!I)newgrp(!i) = 0, the process group will be set to the value of the PID of
the current process.

!item [(!nolink [Return]) value:]
The function can return the following results:
!begin_xlist !compressed [EACCDN:]
!item [>= 0~ :]
No error (new or current process group number)
!item [EFILNF:]
The process (!I)pid(!i) does not exist
!item [EACCDN:]
The process (!I)pid(!i) has a different UID, and is not a child of the
calling process
!end_xlist

!item [Availability:]
As of the first in MultiTOS integrated MiNT version 1.04.

!item [Group:]
Process functions

!item [See also:]
(!link [Binding][Bindings for Psetpgrp]) ~ Pkill ~ Pgetpgrp ~ Pgetpid
(!ende_liste)


!begin_node Bindings for Psetpgrp
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
int16_t Psetpgrp ( int16_t pid, int16_t newgrp );

!item [Assembler:]
!begin_verbatim
move.w    newgrp,-(sp)  ; Offset 4
move.w    pid,-(sp)     ; Offset 2
move.w    #270,-(sp)    ; Offset 0
trap      #1            ; GEMDOS
addq.l    #6,sp         ; Correct stack
!end_verbatim
(!ende_liste)
!end_node
!end_node


!else


!begin_node Psetpgrp
(!begin_liste) [Beschreibung]
!item [Name:]
(!rdouble)Psetpgrp(!ldouble) - Prozess Gruppennummer eines Prozesses setzen/ermitteln.

!item [Gemdosnummer:]
270

!item [Deklaration:]
int16_t Psetpgrp ( int16_t pid, int16_t newgrp );

!item [Beschreibung:]
Die Funktion ver(!aumlaut)ndert die Gruppennummer des Prozesses mit der Kennung
(!I)pid(!i) auf den Wert (!I)newgrp(!i), oder gibt den Gruppennummer zur(!uumlaut)ck,
wenn (!I)newgrp(!i) negativ ist. Der Prozess mu(!sharps) die gleiche UID wie
der aktuelle Prozess besitzen, oder dessen Parent sein.

Falls (!I)pid(!i) = 0 ist, wird die Prozessgruppe des aktuellen Prozesses
gesetzt. Falls (!I)newgrp(!i) = 0 ist, wird die Prozessgruppe auf den Wert
der PID des aktuellen Prozesses gesetzt.

!item [Ergebnis:]
Die Funktion kann folgende R(!uumlaut)ckgabewerte liefern:
!begin_xlist !compressed [EACCDN:]
!item [>= 0~ :]
kein Fehler (neue oder aktuelle Prozessgruppen-Nummer).
!item [EFILNF:]
der Prozess (!I)pid(!i) existiert nicht.
!item [EACCDN:]
der Prozess (!I)pid(!i) besitzt eine andere UID, und ist kein Child des
aufrufenden Prozesses.
!end_xlist

!item [Verf(!uumlaut)gbar:]
Seit der ersten in MultiTOS integrierten MiNT Version 1.04.

!item [Gruppe:]
Prozessfunktionen

!item [Querverweis:]
(!link [Binding][Bindings f(!uumlaut)r Psetpgrp]) ~ Pkill ~ Pgetpgrp ~ Pgetpid
(!ende_liste)


!begin_node Bindings f(!uumlaut)r Psetpgrp
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
int16_t Psetpgrp ( int16_t pid, int16_t newgrp );

!item [Assembler:]
!begin_verbatim
move.w    newgrp,-(sp)  ; Offset 4
move.w    pid,-(sp)     ; Offset 2
move.w    #270,-(sp)    ; Offset 0
trap      #1            ; GEMDOS aufrufen
addq.l    #6,sp         ; Stack korrigieren
!end_verbatim
(!ende_liste)
!end_node
!end_node


!endif
