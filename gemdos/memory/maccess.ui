!begin_node Maccess
(!begin_liste) [Availability]
!item [Name:]
Maccess - verify accessibility of a region of memory
!item [Opcode:]
381 (0x17d)
!item [Syntax:]
int32_t Maccess ( void *start, int32_t size, int16_t mode );

!item [Description:]
Maccess verifies accessibility for the calling process's memory page(s)
containing any part of the address range in the interval [addr, addr+len-1].

!begin_xlist !compressed [Parameter]
!item [Parameter]
Meaning
!item [start]
Start address of the memory block to be verified
list
!item [size]
Length of the memory block
!item [mode]
mode is either 1 to check for read access, or 0 to check for read/write access.
!end_xlist
!item [Return value:]
The function returns the value 0 on success, else a negative error code.

!item [Availability:]
This function is available as of FreeMiNT 1.15.12.

!item [Group:]
Memory management

!item [See also:] (!link [Binding] [Bindings for Maccess]) ~ Mfree  ~ Malloc ~ 
      Mxalloc ~ Mvalidate
(!ende_liste)


!begin_node Bindings for Maccess
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
int32_t Maccess ( void *start, int32_t size, int16_t mode );
!item [Assembler:]
!begin_verbatim
move.w    mode,-(sp)   ; Offset 10
move.l    size,-(sp)   ; Offset 6
pea       start        ; Offset 2
move.w    #381,-(sp)   ; Offset 0
trap      #1           ; GEMDOS
lea       $C(sp),sp    ; Correct stack
!end_verbatim
(!ende_liste)
!end_node
!end_node
