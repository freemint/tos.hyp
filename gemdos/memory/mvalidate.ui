!begin_node Mvalidate
(!begin_liste) [Availability]
!item [Name:]
Mvalidate - verify access to a process memory region
!item [Opcode:]
321 (0x141)
!item [Syntax:]
int32_t Mvalidate ( int16_t pid, void *start, int32_t size, int32_t *flags );

!item [Description:]
Mvalidate verifies accessibility for the specified process's memory page(s)
containing any part of the address range in the interval [addr, addr+len-1].

!begin_xlist !compressed [Parameter]
!item [Parameter]
Meaning
!item [pid]
Process id of the process to check. May be 0 for the current process.
!item [start]
Start address of the memory block to be verified.
!item [size]
Length of the memory block.
!item [flags]
Upon a successfull call, will contain the protection flags of
the specified memory region.
!end_xlist
!item [Return value:]
The function returns the value 0 on success, else a negative error code.

!item [Availability:]
This function is available as of FreeMiNT 1.15.12.

!item [Group:]
Memory management

!item [See also:] (!link [Binding] [Bindings for Mvalidate]) ~ Mfree  ~ Malloc ~ 
      Mxalloc ~ Maccess
(!ende_liste)


!begin_node Bindings for Mvalidate
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
int32_t Mvalidate ( int16_t pid, void *start, int32_t size, int32_t *flags );
!item [Assembler:]
!begin_verbatim
pea       flags        ; Offset 12
move.l    size,-(sp)   ; Offset 8
pea       start        ; Offset 4
move.w    pid,-(sp)    ; Offset 2
move.w    #321,-(sp)   ; Offset 0
trap      #1           ; GEMDOS
lea       $10(sp),sp   ; Correct stack
!end_verbatim
(!ende_liste)
!end_node
!end_node
