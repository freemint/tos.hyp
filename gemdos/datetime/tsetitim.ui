!iflang [english]


!begin_node Tsetitimer
(!begin_liste) [Availability]
!item [Name:]
ØTsetitimerÆ - Control a periodic timer.

!item [Opcode:]
329 (0x0149)

!item [Syntax:]
int32_t Tsetitimer ( int16_t which, int32_t *interval, int32_t *value, int32_t *ointerval, int32_t *ovalue );
  
!item [Description:]
The (!nolink [GEMDOS]) routine Tsetitimer controls one of three possible
periodic timers. The following apply:

!begin_xlist !compressed [ointerval]
!item [Parameter]
Meaning
!item [~]
~
!item [which]
Desired timer
!begin_xlist !compressed [0 =]

!label ITIMER_REAL
!item [0 =]
This timer works in real time, and sends the signal SIGALRM on expiry

!label ITIMER_VIRTUAL
!item [1 =]
This timer works in 'virtual process time' and sends the signal SIGVTALRM
on expiry. The timer in this case runs only when the process that is
controlling the timer currently owns the CPU.

!label ITIMER_PROF
!item [2 =]
This timer works both in 'virtual process time' as well as when the
operating system itself is active. On expiry of the timer the signal
SIGPROF is sent.
!end_xlist

!item [interval]
Address of an int32_t which holds the value to which the timer is to be set
on expiry. A NULL-pointer means that the corresponding old value should not
be changed. If the int32_t holds the value 0, the timer will be deactivated
after its expiry.
!item [value]
Address of an int32_t which holds the initial value of the timer in
milliseconds. A NULL-pointer leaves the current timer unaffected. If the
int32_t holds the value 0, the timer will be deactivated.
!item [ointerval]
Address of an int32_t which holds the current intervall of the timer, or
NULL if this value is of no interest.
!item [ovalue]
Address of an int32_t which holds the current value of the timer, or NULL if
this value is of no interest.
!end_xlist

As all internal calculations are measured in miliseconds, it is not possible
to set a timer to (very large, future) arbitrary values.

!item [(!nolink [Return]) value:]
The function returns 0 when executed correctly, or a a negative value in
case of error.

!item [Availability:]
This function is optional, so a call may be answered with EINVFN. Available
when a 'MiNT' cookie with a version of at least 1.11 exists.

!item [Group:]
Date and Time

!item [See also:]
(!link [Binding][Bindings for Tsetitimer]) ~ Pause ~ Psignal ~ Talarm
(!ende_liste)


!begin_node Bindings for Tsetitimer
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
int32_t Tsetitimer ( int16_t which, int32_t *interval, int32_t *value, int32_t *ointerval, int32_t *ovalue );

!item [Assembler:]
!begin_verbatim
move.l    ovalue,-(sp)    ; Offset 16
move.l    ointerval,-(sp) ; Offset 12
move.l    value,-(sp)     ; Offset  8
move.l    interval,-(sp)  ; Offset  4
move.w    which,-(sp)     ; Offset  2
move.w    #329,-(sp)      ; Offset  0
trap      #1              ; GEMDOS
lea       $12(sp),sp      ; Correct stack
!end_verbatim
(!ende_liste)
!end_node
!end_node


!else


!begin_node Tsetitimer
(!begin_liste) [Beschreibung]
!item [Name:]
ØTsetitimerÆ - steuert einen periodischen Timer.

!item [Gemdosnummer:]
329 (0x0149)

!item [Deklaration:]
int32_t Tsetitimer ( int16_t which, int32_t *interval, int32_t *value, int32_t *ointerval, int32_t *ovalue );
	
!item [Beschreibung:]
Die GEMDOS-Routine Tsetitimer steuert einen von insgesamt drei mîglichen
periodischen Timern. Es gilt:

!begin_xlist !compressed [ointerval]
!item [Parameter]
Bedeutung
!item [~]
~
!item [which]
gewÅnschter Timer
!begin_xlist !compressed [0 =]

!label ITIMER_REAL
!item [0 =]
Dieser Timer arbeitet in Echtzeit, und sendet nach Ablauf das Signal SIGALRM.

!label ITIMER_VIRTUAL
!item [1 =]
Dieser Timer arbeitet in 'virtueller Prozess-Zeit', und sendet nach Ablauf
das Signal SIGVTALRM. Der Timer lÑuft in diesem Fall nur, wenn der Prozess,
welcher den Timer steuert, aktuell die CPU besitzt.

!label ITIMER_PROF
!item [2 =]
Dieser Timer arbeitet sowohl in 'virtueller Prozess-Zeit' als auch dann,
wenn das Betriebssystem selbst aktiv ist. Nach Ablauf des Timers wird das
Signal SIGPROF gesendet.
!end_xlist

!item [interval]
Adresse eines Long-Wertes, welcher den Wert enthÑlt, auf den der Timer nach
Ablauf gesetzt werden soll. Ein NULL-Zeiger bedeutet, daû der entsprechende
alte Wert nicht verÑndert werden soll. Falls der int32_t-Wert den Wert 0
besitzt, wird der Timer nach seinem Ablauf deaktiviert.
!item [value]
Adresse eines Long-Wertes, welcher den Initialwert des Timers in
Millisekunden beschreibt. Ein NULL-Zeiger lÑût den aktuellen Timer
unangetastet. Falls der int32_t-Wert den Wert 0 besitzt, wird der Timer
deaktiviert.
!item [ointerval]
Adresse eines Long-Wertes, welcher das aktuelle Intervall des Timers
aufnimmt, bzw. NULL, wenn dieser Wert nicht von Interesse ist.
!item [ovalue]
Adresse eines Long-Wertes, welcher den aktuellen Wert des Timers aufnimmt
oder NULL, wenn dieser Wert nicht von Interesse ist.
!end_xlist

Da alle internen Berechnungen in Millisekunden gemessen werden, ist es nicht
mîglich einen Timer auf beliebige (sehr groûe, zukÅnftige) Werte zu setzen.

!item [Ergebnis:]
Die Funktion liefert bei korrekter AusfÅhrung 0, und im Fehlerfall einen
negativen Wert zurÅck.

!item [VerfÅgbar:]
Diese Funktion ist optional, daher darf ein Aufruf mit EINVFN beantwortet
werden. Sie ist verfÅgbar, wenn 'MiNT' Cookie mit einer Versionsnummer von
mindestens 1.11 existiert.

!item [Gruppe:]
Datum und Uhrzeit

!item [Querverweis:]
(!link [Binding] [Bindings fÅr Tsetitimer]) ~ Pause ~ Psignal ~ Talarm
(!ende_liste)


!begin_node Bindings fÅr Tsetitimer
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
int32_t Tsetitimer ( int16_t which, int32_t *interval, int32_t *value, int32_t *ointerval, int32_t *ovalue );

!item [Assembler:]
!begin_verbatim
move.l    ovalue,-(sp)    ; Offset 16
move.l    ointerval,-(sp) ; Offset 12
move.l    value,-(sp)     ; Offset  8
move.l    interval,-(sp)  ; Offset  4
move.w    which,-(sp)     ; Offset  2
move.w    #329,-(sp)      ; Offset  0
trap      #1              ; GEMDOS aufrufen
lea       $16(sp),sp      ; Stack korrigieren
!end_verbatim
(!ende_liste)
!end_node
!end_node


!endif
