!iflang [english]


!begin_node Debug
(!begin_liste) [Availability]

!item [Name:]
(!rdouble)Debug output to console(!ldouble) - Dump memory area to Hatari console.

!item [Opcode:]
254 (0x00fe)

!item [Syntax:]
See Bindings for Debug

!item [Description:]
Memory dump.

Hatari can dump the content of a memory area to the console. This is useful for
debugging.

(!I)memptr(!i) and (!I)length(!i) specifiy the start address and length of the
area. Maximum length is 256 bytes.

!item [(!nolink [Return]) value:]
None.

!item [Availability:]
Hatari for Mac OS X with specific patches by DHS.

!item [Group:]
Hatari DHS XBIOS extension

!item [See also:]
(!link [Binding] [Bindings for Debug])

(!ende_liste)

!begin_node Bindings for Debug
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
void xbios ( 254, int32_t memptr, int32_t length );
!item [Assembler:]
!begin_verbatim
move.l    length,-(sp)    ; Offset 6
move.l    memptr,-(sp)    ; Offset 2
move.w    #254,-(sp)      ; Offset 0
trap      #14             ; Call XBIOS
lea       10(sp),sp       ; Correct stack
!end_verbatim
(!ende_liste)
!end_node
!end_node


!else


!begin_node Debug
(!begin_liste) [Beschreibung]

!item [Name:]
(!rdouble)Debug output to console(!ldouble) - Dump memory area to Hatari console.

!item [Xbiosnummer:]
254 (0x00fe)

!item [Deklaration:]
(!link [Bindings f(!uumlaut)r Debug] [Bindings f(!uumlaut)r Debug])

!item [Beschreibung:]
Memory dump.

Hatari can dump the content of a memory area to the console. This is useful for
debugging.

(!I)memptr(!i) and (!I)length(!i) specifiy the start address and length of the
area.

!item [Ergebnis:]
None.

!item [Verf(!uumlaut)gbar:]
Hatari for Mac OS X with specific patches by DHS.

!item [Gruppe:]
Hatari-DHS-XBIOS-Erweiterung

!item [Querverweis:]
(!link [Binding] [Bindings f(!uumlaut)r Debug])

(!ende_liste)

!begin_node Bindings f(!uumlaut)r Debug
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
void xbios ( 254, int32_t memptr, int32_t length );
!item [Assembler:]
!begin_verbatim
move.l    length,-(sp)    ; Offset 6
move.l    memptr,-(sp)    ; Offset 2
move.w    #254,-(sp)      ; Offset 0
trap      #14             ; XBIOS aufrufen
lea       10(sp),sp       ; Stack korrigieren
!end_verbatim
(!ende_liste)
!end_node
!end_node


!endif
