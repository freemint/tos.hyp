!iflang [english]

!begin_node vidix_deinterlace_t
!begin_verbatim
typedef struct vidix_deinterlace_s
{
#define CFG_NON_INTERLACED        0x00000000 /* stream is not interlaced */
#define CFG_INTERLACED            0x00000001 /* stream is interlaced */
#define CFG_EVEN_ODD_INTERLACING  0x00000002 /* first frame contains even fields but second - odd */
#define CFG_ODD_EVEN_INTERLACING  0x00000004 /* first frame contains odd fields but second - even */
#define CFG_UNIQUE_INTERLACING    0x00000008 /* field deinterlace_pattern is valid */
#define CFG_UNKNOWN_INTERLACING   0x0000000f /* unknown deinterlacing - use adaptive if it's possible */
   unsigned    flags;               /* driver -> app */
   unsigned    deinterlace_pattern; /* driver -> app: deinterlace pattern if flag CFG_UNIQUE_INTERLACING is set */
}vidix_deinterlace_t;
!end_verbatim

See also: VIDIX XBIOS extension
!end_node

!else

!begin_node vidix_deinterlace_t
!begin_verbatim
typedef struct vidix_deinterlace_s
{
#define CFG_NON_INTERLACED        0x00000000 /* stream is not interlaced */
#define CFG_INTERLACED            0x00000001 /* stream is interlaced */
#define CFG_EVEN_ODD_INTERLACING  0x00000002 /* first frame contains even fields but second - odd */
#define CFG_ODD_EVEN_INTERLACING  0x00000004 /* first frame contains odd fields but second - even */
#define CFG_UNIQUE_INTERLACING    0x00000008 /* field deinterlace_pattern is valid */
#define CFG_UNKNOWN_INTERLACING   0x0000000f /* unknown deinterlacing - use adaptive if it's possible */
   unsigned    flags;               /* driver -> app */
   unsigned    deinterlace_pattern; /* driver -> app: deinterlace pattern if flag CFG_UNIQUE_INTERLACING is set */
}vidix_deinterlace_t;
!end_verbatim

Querverweis: VIDIX-XBIOS-Erweiterung
!end_node

!endif
