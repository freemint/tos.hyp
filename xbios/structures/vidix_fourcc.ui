!iflang [english]

!begin_node vidix_fourcc_t
!begin_verbatim
typedef struct vidix_fourcc_s
{
   unsigned fourcc; /* input: requested fourcc */
   unsigned srcw;   /* input: hint: width of source */
   unsigned srch;   /* input: hint: height of source */
#define VID_DEPTH_NONE             0x0000
#define VID_DEPTH_1BPP             0x0001
#define VID_DEPTH_2BPP             0x0002
#define VID_DEPTH_4BPP             0x0004
#define VID_DEPTH_8BPP             0x0008
#define VID_DEPTH_12BPP            0x0010
#define VID_DEPTH_15BPP            0x0020
#define VID_DEPTH_16BPP            0x0040
#define VID_DEPTH_24BPP            0x0080
#define VID_DEPTH_32BPP            0x0100
   unsigned depth; /* output: screen depth for given fourcc */
#define VID_CAP_NONE               0x0000
#define VID_CAP_EXPAND             0x0001 /* if overlay can be bigger than source */
#define VID_CAP_SHRINK             0x0002 /* if overlay can be smaller than source */
#define VID_CAP_BLEND              0x0004 /* if overlay can be blended with framebuffer */
#define VID_CAP_COLORKEY           0x0008 /* if overlay can be restricted to a colorkey */
#define VID_CAP_ALPHAKEY           0x0010 /* if overlay can be restricted to an alpha channel */
#define VID_CAP_COLORKEY_ISRANGE   0x0020 /* if the colorkey can be a range */
#define VID_CAP_ALPHAKEY_ISRANGE   0x0040 /* if the alphakey can be a range */
#define VID_CAP_COLORKEY_ISMAIN    0x0080 /* colorkey is checked against framebuffer */
#define VID_CAP_COLORKEY_ISOVERLAY 0x0100 /* colorkey is checked against overlay */
#define VID_CAP_ALPHAKEY_ISMAIN    0x0200 /* alphakey is checked against framebuffer */
#define VID_CAP_ALPHAKEY_ISOVERLAY 0x0400 /* alphakey is checked against overlay */
   unsigned flags; /* output: capability */
}vidix_fourcc_t;
!end_verbatim

See also: VIDIX XBIOS extension
!end_node

!else

!begin_node vidix_fourcc_t
!begin_verbatim
typedef struct vidix_fourcc_s
{
   unsigned fourcc; /* input: requested fourcc */
   unsigned srcw;   /* input: hint: width of source */
   unsigned srch;   /* input: hint: height of source */
#define VID_DEPTH_NONE             0x0000
#define VID_DEPTH_1BPP             0x0001
#define VID_DEPTH_2BPP             0x0002
#define VID_DEPTH_4BPP             0x0004
#define VID_DEPTH_8BPP             0x0008
#define VID_DEPTH_12BPP            0x0010
#define VID_DEPTH_15BPP            0x0020
#define VID_DEPTH_16BPP            0x0040
#define VID_DEPTH_24BPP            0x0080
#define VID_DEPTH_32BPP            0x0100
   unsigned depth; /* output: screen depth for given fourcc */
#define VID_CAP_NONE               0x0000
#define VID_CAP_EXPAND             0x0001 /* if overlay can be bigger than source */
#define VID_CAP_SHRINK             0x0002 /* if overlay can be smaller than source */
#define VID_CAP_BLEND              0x0004 /* if overlay can be blended with framebuffer */
#define VID_CAP_COLORKEY           0x0008 /* if overlay can be restricted to a colorkey */
#define VID_CAP_ALPHAKEY           0x0010 /* if overlay can be restricted to an alpha channel */
#define VID_CAP_COLORKEY_ISRANGE   0x0020 /* if the colorkey can be a range */
#define VID_CAP_ALPHAKEY_ISRANGE   0x0040 /* if the alphakey can be a range */
#define VID_CAP_COLORKEY_ISMAIN    0x0080 /* colorkey is checked against framebuffer */
#define VID_CAP_COLORKEY_ISOVERLAY 0x0100 /* colorkey is checked against overlay */
#define VID_CAP_ALPHAKEY_ISMAIN    0x0200 /* alphakey is checked against framebuffer */
#define VID_CAP_ALPHAKEY_ISOVERLAY 0x0400 /* alphakey is checked against overlay */
   unsigned flags; /* output: capability */
}vidix_fourcc_t;
!end_verbatim

Querverweis: VIDIX-XBIOS-Erweiterung
!end_node

!endif
