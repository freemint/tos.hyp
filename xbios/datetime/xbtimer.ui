!iflang [english]


!begin_node Xbtimer
(!begin_liste) [Availability]

!item [Name:]
Øtimer initÆ - Initialize the timer in the MFP chip.

!item [Opcode:]
31

!item [Syntax:]
void Xbtimer( int16_t timer, int16_t (!nolink [control]), int16_t data, void(*vector)( ) );

!item [Description:]
The (!nolink [XBIOS]) routine Xbtimer initializes one of the four 
timers (A-D) in the 68901 multi-function peripheral 
chip. The following apply:
!begin_table [l|l]
Parameter !! Meaning
!hline
timer !! Number of the timer: 
~     !! 0 = A (usable for own programs)
~     !! 1 = B (Horizontal blank interrupt)
~     !! 2 = C (System timer (200 Hz))
~     !! 3 = D (Generator for the Baud rates)
~ !! ~
(!nolink [control]) !! Value for corresponding timer register
data !! Value for corresponding timer register
vector !! Pointer to interrupt routine
!end_table

!item [(!nolink [Return]) value:]
The function does not return a result.

!item [Availability:]
All (!nolink [TOS]) versions.

!item [Group:]
Date, Time and Timer

!item [See also:]
(!link [Binding] [Bindings for Xbtimer])

(!ende_liste)


!begin_node Bindings for Xbtimer
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
 #include <tos.h>

void Xbtimer( int16_t timer, int16_t (!nolink [control]), int16_t data, void(*vector)( ) );
!item [Assembler:]
!begin_verbatim
pea       vector        ; Offset 8
move.w    data,-(sp)    ; Offset 6
move.w    control,-(sp) ; Offset 4
move.w    timer,-(sp)   ; Offset 2
move.w    #31,-(sp)     ; Offset 0
trap      #14           ; Call XBIOS
lea       $C(sp),sp     ; Correct stack
!end_verbatim
(!ende_liste)
!end_node
!end_node


!else


!begin_node Xbtimer
(!begin_liste) [Beschreibung]

!item [Name:]
Øtimer initÆ - initialisiert die Zeitgeber im MFP-Chip.

!item [Xbiosnummer:]
31

!item [Deklaration:]
void Xbtimer( int16_t timer, int16_t (!nolink [control]), int16_t data, void(*vector)( ) );

!item [Beschreibung:]
Die (!nolink [XBIOS])-Routine Xbtimer initialisiert einen von vier Zeitgebern (A-D) im
Multifunktionsperipheriechip 68901. Es gilt:
!begin_table [l|l]
Parameter !! Bedeutung
!hline
timer !! Nummer des Timers:
~     !! 0 = A (fÅr eigene Programme nutzbar)
~     !! 1 = B (Horizontal Blank Interrupt)
~     !! 2 = C (Systemtimer (200 Hz))
~     !! 3 = D (Generator fÅr die Baudraten)
~ !! ~
(!nolink [control]) !! Wert fÅr entsprechende Timer-Register
data !! Wert fÅr entsprechende Timer-Register
vector !! Zeiger auf Interrupt-Routine
!end_table

!item [Ergebnis:]
Die Funktion liefert kein Ergebnis.

!item [VerfÅgbar:]
Alle (!nolink [TOS]) Versionen.

!item [Gruppe:]
Datum, Uhrzeit und Zeitgeber

!item [Querverweis:]
(!link [Binding] [Bindings fÅr Xbtimer])

(!ende_liste)


!begin_node Bindings fÅr Xbtimer
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
 #include <tos.h>

void Xbtimer( int16_t timer, int16_t (!nolink [control]), int16_t data, void(*vector)( ) );
!item [Assembler:]
!begin_verbatim
pea       vector        ; Offset 8
move.w    data,-(sp)    ; Offset 6
move.w    control,-(sp) ; Offset 4
move.w    timer,-(sp)   ; Offset 2
move.w    #31,-(sp)     ; Offset 0
trap      #14           ; XBIOS aufrufen
lea       $C(sp),sp     ; Stack korrigieren
!end_verbatim
(!ende_liste)
!end_node
!end_node


!endif
