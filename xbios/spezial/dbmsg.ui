!iflang [english]


!begin_node Dbmsg
(!begin_liste) [Availability]

!item [Name:]
ØDbmsgÆ - Output debug message

!item [Opcode:]
11

!item [Syntax:]
void Dbmsg( int16_t rsrvd, int16_t msg_num, int32_t msg_arg )

!item [Description:]
Dbmsg allows special debugging messages to be sent to a resident debugger
application.

(!I)srsrvd(!i) is currently reserved and should always be 5.

(!I)msg_num(!i) is the message number which you want to send to the
debugging host. Values of 0x0000 to 0xEFFF are reserved for applications to
define. Values of 0xF000 to 0xFFFF are reserved for special debugging
messages. If (!I)msg_num(!i) is in the application defined range, it and the
int32_t contained in (!I)msg_arg(!i) will be displayed by the debugger and
the application will be halted. If (!I)msg_num(!i) is between 0xF001 and
0xF0FF inclusive then (!I)msg_arg(!i) is interpreted as a character pointer
pointing to a string to be output by the debugger and debugging to halt. The
string length is determined by the low byte of (!I)msg_num(!i).

If (!I)msg_num(!i) is DB_NULLSTRING (0xF000), the string will be output
until a NULL is reached.

If (!I)msg_num(!i) is DB_COMMAND (0xF100), (!I)msg_arg(!i) is interpreted as
a character pointer to a string containing a debugger command. The command
format is specific to the debugger which you are running. A useful example
of this format when running under the Atari debugger allows a string to be
output to the debugger without terminating debugging as shown in the
following example:

Dbmsg( 5, DB_COMMAND, "echo 'Debugging Message';g" );

The Atari Debugger only understands the value DB_COMMAND (0xF100) for
(!I)msg_num(!i) as of version 3. Though it is normally harmless to run an
application with embedded debugging messages when no debugger is present in
the system, distribution versions of applications should have these
instructions removed.

!item [(!nolink [Return]) value:]

!item [Availability:]
Only if a resident debugger was loaded, which supports this call. The only
debugger that currently supports this call is the Atari debugger.

!item [Group:]
Special commands

!item [See Also:]
(!link [Binding] [Bindings for Dbmsg])

(!ende_liste)


!begin_node Bindings for Dbmsg
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
 #include <tos.h>

void Dbmsg( int16_t rsrvd, int16_t msg_num, int32_t msg_arg )
!item [Assembler:]
!begin_verbatim
move.l    msg_arg,-(sp)  ; Offset 6
move.w    msg_num,-(sp)  ; Offset 4
move.w    srsrvd,-(sp)   ; Offset 2
move.w    #11,-(sp)      ; Offset 0
trap      #14            ; Call XBIOS
addq.l    #10,sp         ; Correct stack
!end_verbatim
(!ende_liste)
!end_node
!end_node


!else


!begin_node Dbmsg
(!begin_liste) [Beschreibung]

!item [Name:]
ØDbmsgÆ -

!item [Xbiosnummer:]
11

!item [Deklaration:]
void Dbmsg( int16_t rsrvd, int16_t msg_num, int32_t msg_arg )

!item [Beschreibung:]
Dbmsg() erlaubt es, spezielle Debuggingkommandos an einen residenten
Debugger zu schicken.

(!I)srsrvd(!i) ist zur Zeit reserviert und sollte immer den Wert 5 haben.

(!I)msg_num(!i) ist die Nachrichtennummer, die an den Debugginghost
geschickt wird. Werte von 0x0000 bis 0xEFFF werden fÅr
applikationsspezifische Nachrichten benutzt. Werte von 0xF000 bis 0xFFFF
werden fÅr spezielle Debuggingnachrichten benutzt. Wenn (!I)msg_num(!i) im
Bereich der fÅr die Applikation reservierten Werte liegt, werden der Wert
und der int32_t aus (!I)msg_arg(!i) angezeigt und die Applikation wird
angehalten. Wenn (!I)msg_num(!i) zwischen 0xF001 und 0xF0FF inklusive liegt,
wird (!I)msg_arg(!i) als ein Zeiger auf einen String, der vom Debugger
ausgegeben werden soll, interpretiert und das Debuggen untrerbrochen. Die
LÑnge des Strings wird im unteren Byte von (!I)msg_num(!i) angegeben.

Wenn (!I)msg_num(!i) den Wert DB_NULLSTRING (0xF000) hat, wird der String
bis zur abschlieûenden 0 ausgegeben.

Wenn (!I)msg_num(!i) den Wert DB_COMMAND (0xF100) hat, wird (!I)msg_arg(!i)
als ein Zeiger auf eine Zeichenkette mit einem Debugger Kommando
interpretiert. Das Format des Kommandos hÑngt von dem bneutzten Debugger
ab. Eine Anwendung bei Verwendung des Atari Debuggers ist die Ausgabe eines
Strings, ohne das Debuggen zu beenden:

Dbmsg( 5, DB_COMMAND, "echo 'Debugging Message';g" );

Der Atari Debugger bis zur Version 3 kennt nur den Wert DB_COMMAND (0xF100)
fÅr (!I)msg_num(!i). Normalerweise ist es kein Problem, ein Programm mit
Debugging Messages ohne Debugger laufen zu lassen, aus der endgÅltigen
Version sollten diese Anweisungen allerdings entfernt werden.

!item [Ergebnis:]

!item [VerfÅgbar:]
Wenn ein Debugger geladen ist, der diese Funktion unterstÅtzt. Der einzige
Debugger, der zur Zeit diese Funktion unterstÅtzt, ist der Atari Debugger.

!item [Gruppe:]
Spezialbefehle

!item [Querverweis:]
(!link [Binding] [Bindings fÅr Dbmsg])

(!ende_liste)


!begin_node Bindings fÅr Dbmsg
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
 #include <tos.h>

void Dbmsg( int16_t rsrvd, int16_t msg_num, int32_t msg_arg )
!item [Assembler:]
!begin_verbatim
move.l    msg_arg,-(sp)  ; Offset 6
move.w    msg_num,-(sp)  ; Offset 4
move.w    srsrvd,-(sp)   ; Offset 2
move.w    #11,-(sp)      ; Offset 0
trap      #14            ; XBIOS aufrufen
addq.l    #10,sp         ; Stack korrigieren
!end_verbatim
(!ende_liste)
!end_node
!end_node


!endif
