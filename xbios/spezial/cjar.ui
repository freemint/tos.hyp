!iflang [english]


!begin_node CJar
(!begin_liste) [Availability]

!item [Name:]
ØCJarÆ - Creation, interrogation and removal of cookies

!item [Opcode:]
17226 (0x434A)

!item [Syntax:]
int32_t CJar( int16_t mode, int32_t cookie, int32_t *value );

!item [Description:]
The (!nolink [XBIOS]) routine CJar offers a simple way of creating,
interrogating and removing cookies.

!begin_xlist !compressed [parameter]
!item [Parameter]
Meaning
!item [~]
~
!item [mode]
Mode 0: (!nl)
Obtains the value of a cookie and stores it at the specified address. If one
passed a NULL-pointer for (!I)value(!i), then only the existence of the cookie
will be checked. If presence of the cookie is established, the call returns
0x6172 (="CJar_OK"), or a different value otherwise.

Mode 1: (!nl)
Creates a new cookie. In this case, (!I)value(!i) points to a longword whose
contents are copied into the cookie jar. If (!I)value(!i) is NULL (zero), then
a value of zero is entered into the cookie jar. If the cookie already exists,
the old value is overwritten. (!nl)
This mode returns $6172 (="CJar_OK") if the addition was successful or -1 if the
addition failed due to lack of room in the cookie jar.

Mode 2: (!nl)
Removes the cookie (!I)cookie(!i) from the jar. The value of (!I)value(!i) is
immaterial. If the removal was successful the return will be "CJar_OK", or
another value otherwise.

Is only available if the system extension Liberty (cookie 'Lity') is installed.


!item [cookie]
Cookie identifier
!item [value]
Address of the buffer in which the data is to be stored.
!end_xlist

!item [(!nolink [Return]) value:]
If successful the function returns the value CJar_OK (0x6172).

!item [Availability:]
The function is available when the cookie 'CJar' ($434A6172) is present. This
is created by JARxxx (Cookie Jar Manager) or by Liberty.

!item [Group:]
Special commands

!item [See Also:]
(!link [Binding] [Bindings for CJar]) ~ (!link [Cookie function] [S_GETCOOKIE])

(!ende_liste)


!begin_node Bindings for CJar
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
int32_t CJar( int16_t mode, int32_t cookie, int32_t *value );
!item [Assembler:]
!begin_verbatim
pea       value          ; Offset 8
move.l    cookie,-(sp)   ; Offset 4
move.w    mode,-(sp)     ; Offset 2
move.w    #17226,-(sp)   ; Offset 0
trap      #14            ; Call XBIOS
lea       12(sp),sp      ; Correct stack
!end_verbatim
(!ende_liste)
!end_node
!end_node


!else


!begin_node CJar
(!begin_liste) [Beschreibung]

!item [Name:]
ØCJarÆ - Erzeugen, Abfragen und Lîschen von Cookies

!item [Xbiosnummer:]
17226 (0x434A)

!item [Deklaration:]
int32_t CJar( int16_t mode, int32_t cookie, int32_t *value );

!item [Beschreibung:]
Die XBIOS-Routine CJar dient auf komfortable Weise zum Erzeugen, Abfragen
und Lîschen von Cookies.

!begin_xlist !compressed [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [mode]
Modus 0: (!nl)
     Ermittelt  den  Wert  des  Kekses  und legt in an der angegebenen
     Adresse ab. öbergibt man fÅr (!I)value(!i) einen Nullzeiger, so wird
     lediglich die Existenz des Kekses ÅberprÅft. (!nl)
     Bei  erfolgreicher Ermittlung des Kekses, liefert der Aufruf
     0x6172 (="CJar_OK") zurÅck, sonst einen anderen Wert.

    Modus 1: (!nl)
     Erzeugt einen neuen Keks (cookie). (!I)Value(!i) (!B)zeigt(!b) auf
     einen Wert, der in den Jar eingetragen wird. WICHTIG! Es wird
     nicht (!I)value(!i) eingetragen, sondern  der  Wert  auf  den  'value'
     weist!  Bei öbergabe eines NULL-Pointers wird 0 als Kekswert
     eingetragen. Existiert der Keks bereits, so wird sein alter Inhalt
     Åberschrieben! (!nl)
     Die Funktion liefert "CJar_OK" bei erfolgreicher  Eintragung.  -1
     wird fÅr den Fall geliefert, daû der Cookie-Jar voll ist.

Modus 2: (!nl)
     Entfernt  den Keks (!I)cookie(!i) aus dem Jar. Der Wert von (!I)value(!i) ist
     egal. Liefert bei erfolgreicher Entfernung "CJar_OK", sonst einen
     anderen Wert.

     Ist nur VerfÅgbar, wenn die System!-erweiterung Liberty (Cookie 'Lity')
     installiert ist.

!item [cookie]
Cookiebezeichnung
!item [value]
Adresse des Puffers, in dem die Daten abgelegt werden sollen.
!end_xlist

!item [Ergebnis:]
Im Erfolgsfall liefert die Funktion den Wert CJar_OK (0x6172) zurÅck.

!item [VerfÅgbar]
Die Funktion ist verfÅgbar, wenn der Cookie 'CJar' ($434A6172) vorhanden
ist. Dieser wird von JARxxx (Cookie Jar Manager) oder Liberty erzeugt.

!item [Gruppe:]
Spezialbefehle

!item [Querverweis:]
(!link [Binding] [Bindings fÅr CJar]) ~ (!link [Cookie Funktionen] [S_GETCOOKIE])

(!ende_liste)


!begin_node Bindings fÅr CJar
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
int32_t CJar( int16_t mode, int32_t cookie, int32_t *value );
!item [Assembler:]
!begin_verbatim
pea       value          ; Offset 8
move.l    cookie,-(sp)   ; Offset 4
move.w    mode,-(sp)     ; Offset 2
move.w    #17226,-(sp)   ; Offset 0
trap      #14            ; XBIOS aufrufen
lea       12(sp),sp      ; Stack korrigieren
!end_verbatim
(!ende_liste)
!end_node
!end_node


!endif
