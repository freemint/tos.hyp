!iflang [english]


!begin_node Dsp_LodToBinary
(!begin_liste) [Availability]

!item [Name:]
ØDsp_LodToBinaryÆ - Conversion of a file from the LOD
to the binary format

!item [Opcode:]
111

!item [Syntax:]
int32_t Dsp_LodToBinary( int8_t *file, int8_t *codeptr );

!item [Description:]
The function Dsp_LodToBinary converts the ((!nolink [ASCII]))
contents of the .LOD file with the name (!I)file(!i) to a
binary format. The DSP program created in this way is
stored at the address (!I)codeptr.(!i) This block of memory
must be dimensioned large enough to take it. After
this the program can be executed with Dsp_ExecProg or
Dsp_ExecBoot.

!item [(!nolink [Return]) value:]
The function returns the size of the resulting
program in DSP-words if successful, or a negative
value in case of error.

!item [Availability:]
The function is available only on computers with the
DSP-56001 signal processor.

!item [Group:]
DSP programming

!item [See also:]
(!link [Binding] [Bindings for Dsp_LodToBinary]) ~ Dsp_Lock ~ Dsp_Unlock ~
Dsp_Available ~ Dsp_Reserve ~ Dsp_LoadProg ~ Dsp_ExecBoot ~ Dsp_ExecProg

(!ende_liste)


!begin_node Bindings for Dsp_LodToBinary
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
 #include <tos.h>

int32_t Dsp_LodToBinary( int8_t *file, int8_t *codeptr );
!item [Assembler:]
!begin_verbatim
pea       codeptr      ; Offset 6
pea       file         ; Offset 2
move.w    #111,-(sp)   ; Offset 0
trap      #14          ; Call XBIOS
lea       $A(sp),sp    ; Correct stack
!end_verbatim
(!ende_liste)
!end_node
!end_node


!else


!begin_node Dsp_LodToBinary
(!begin_liste) [Beschreibung]

!item [Name:]
ØDsp_LodToBinaryÆ - Konvertierung einer Datei vom LOD in das BinÑrformat

!item [Xbiosnummer:]
111

!item [Deklaration:]
int32_t Dsp_LodToBinary( int8_t *file, int8_t *codeptr );

!item [Beschreibung:]
Die Funktion Dsp_LodToBinary konvertiert den Inhalt der .LOD-Datei mit dem
Namen (!I)file(!i) ins BinÑrformat. Das so erzeugte DSP-Programm wird
an der Adresse codeptr abgelegt. Dieser Speicherbereich muû ausreichend
groû dimensioniert sein. Danach kann das Programm mit (!nolink [Dsp_ExecProg]) oder
Dsp_ExecBoot ausgefÅhrt werden.

!item [Ergebnis:]
Die Funktion liefert im positiven Fall die LÑnge des Programms in
DSP-Worten, oder im Fehlerfall einen negativen Wert zurÅck.

!item [VerfÅgbar:]
Die Funktion ist nur auf Computern mit dem Signalprozessor DSP56001
verfÅgbar.

!item [Gruppe:]
DSP-Programmierung

!item [Querverweis:]
(!link [Binding] [Bindings fÅr Dsp_LodToBinary]) ~ Dsp_Lock ~ Dsp_Unlock ~
Dsp_Available ~ Dsp_Reserve ~ Dsp_LoadProg ~ Dsp_ExecBoot ~ Dsp_ExecProg

(!ende_liste)


!begin_node Bindings fÅr Dsp_LodToBinary
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
 #include <tos.h>

int32_t Dsp_LodToBinary( int8_t *file, int8_t *codeptr );
!item [Assembler:]
!begin_verbatim
pea       codeptr      ; Offset 6
pea       file         ; Offset 2
move.w    #111,-(sp)   ; Offset 0
trap      #14          ; XBIOS aufrufen
lea       $A(sp),sp    ; Stack korrigieren
!end_verbatim
(!ende_liste)
!end_node
!end_node


!endif
