!iflang [english]


!begin_node Dsp_Reserve
(!begin_liste) [Availability]

!item [Name:]
ØDsp_ReserveÆ - Reserve DSP memory for use by a program

!item [Opcode:]
107

!item [Syntax:]
int16_t Dsp_Reserve( int32_t xreserve, int32_t yreserve );

!item [Description:]
The function Dsp_Reserve reserves (!I)xreserve(!i) words of
X-memory and (!I)yreserve(!i) words of Y-memory space. The
memory request must include all program and data space,
and may not exceed the amount of available memory. This
function is necessary to prevent DSP processes being
overwritten by DSP subroutines. The reservation remains
active up to the next call of Dsp_Reserve.

!item [(!nolink [Return]) value:]
The function returns the value 0 if memory reservation
was successful, or -1 if not enough DSP memory was
available (or some other error).

!item [Availability:]
The function is available only on computers with the
DSP-56001 signal processor.

!item [Group:]
DSP programming

!item [See also:]
(!link [Binding] [Bindings for Dsp_Reserve]) ~ Dsp_Lock ~ Dsp_Unlock ~
Dsp_Available ~ Dsp_LoadProg ~ Dsp_ExecProg ~ Dsp_ExecBoot

(!ende_liste)


!begin_node Bindings for Dsp_Reserve
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
 #include <tos.h>

int16_t Dsp_Reserve( int32_t xreserve, int32_t yreserve );
!item [Assembler:]
!begin_verbatim
move.l    yreserve,-(sp)  ; Offset 6
move.l    xreserve,-(sp)  ; Offset 2
move.w    #107,-(sp)      ; Offset 0
trap      #14             ; Call XBIOS
lea       $A(sp),sp       ; Correct stack
!end_verbatim
(!ende_liste)
!end_node
!end_node


!else


!begin_node Dsp_Reserve
(!begin_liste) [Beschreibung]

!item [Name:]
ØDsp_ReserveÆ - Speicher reservieren

!item [Xbiosnummer:]
107

!item [Deklaration:]
int16_t Dsp_Reserve( int32_t xreserve, int32_t yreserve );

!item [Beschreibung:]
Die Funktion Dsp_Reserve reserviert (!I)xreserve(!i) Worte X-Speicher und
(!I)yreserve(!i) Worte Y-Speicher. Die Speicheranforderung darf den
verfÅgbaren Speicher auf keinen Fall Åbertreffen. Diese Funktion ist
notwendig, damit DSP-Prozesse nicht durch DSP-Unterprogramme Åberschrieben
werden. Die Reservierung bleibt bis zum nÑchsten Aufruf von Dsp_Reserve
bestehen.

!item [Ergebnis:]
Die Funktion liefert im positiven Fall den Wert 0, und im Fehlerfall den
Wert -1 zurÅck.

!item [VerfÅgbar:]
Die Funktion ist nur auf Computern mit dem Signalprozessor DSP56001
verfÅgbar.

!item [Gruppe:]
DSP-Programmierung

!item [Querverweis:]
(!link [Binding] [Bindings fÅr Dsp_Reserve]) ~ Dsp_Lock ~ Dsp_Unlock ~
Dsp_Available ~ Dsp_LoadProg ~ Dsp_ExecProg ~ Dsp_ExecBoot

(!ende_liste)


!begin_node Bindings fÅr Dsp_Reserve
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
 #include <tos.h>

int16_t Dsp_Reserve( int32_t xreserve, int32_t yreserve );
!item [Assembler:]
!begin_verbatim
move.l    yreserve,-(sp)  ; Offset 6
move.l    xreserve,-(sp)  ; Offset 2
move.w    #107,-(sp)      ; Offset 0
trap      #14             ; XBIOS aufrufen
lea       $A(sp),sp       ; Stack korrigieren
!end_verbatim
(!ende_liste)
!end_node
!end_node


!endif
