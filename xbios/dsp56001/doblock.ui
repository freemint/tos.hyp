!iflang [english]


!begin_node Dsp_DoBlock
(!begin_liste) [Availability]

!item [Name:]
ØDsp_DoBlockÆ - Data transfer to the DSP

!item [Opcode:]
96

!item [Syntax:]
void Dsp_DoBlock( int8_t *data_in, int32_t size_in, int8_t *data_out,
                  int32_t size_out );

!item [Description:]
The function copies (!I)size_in(!i) DSP-words from the buffer 
(!I)data_in(!i) to the DSP. After all data has been 
transferred, the procedure waits until the data has 
been processed. Then (!I)size_out(!i) DSP-words are copied 
back into the buffer (!I)data_out(!i), irrespective of how 
much data is actually present. If no data is to be 
sent, one has to set (!I)size_in(!i) to zero. The same 
applies for the receipt; in that case (!I)size_out(!i) is 
assigned zero. (!I)size_in(!i) and (!I)size_out(!i) are limited 
to 64 kbyte.

!item [(!nolink [Return]) value:]
The function does not return a result.

!item [Availability:]
The function is available only on computers with the 
DSP-56001 signal processor.

!item [Group:]
DSP programming

!item [See also:]
(!link [Binding] [Bindings for Dsp_DoBlock]) ~ Dsp_BlkHandShake ~
Dsp_BlkUnpacked ~ Dsp_BlkWords ~ Dsp_BlkBytes ~ Dsp_InStream ~
Dsp_OutStream ~ Dsp_IOStream ~ Dsp_GetWordSize ~ Dsp_MultBlocks

(!ende_liste)


!begin_node Bindings for Dsp_DoBlock
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
 #include <tos.h>

void Dsp_DoBlock( int8_t *data_in, int32_t size_in, int8_t *data_out,
                  int32_t size_out );
!item [Assembler:]
!begin_verbatim
move.l    size_out,-(sp)  ; Offset 14
pea       data_out        ; Offset 10
move.l    size_in,-(sp)   ; Offset  6
pea       data_in         ; Offset  2
move.w    #96,-(sp)       ; Offset  0
trap      #14             ; Call XBIOS
lea       $12(sp),sp      ; Correct stack
!end_verbatim
(!ende_liste)
!end_node
!end_node


!else


!begin_node Dsp_DoBlock
(!begin_liste) [Beschreibung]

!item [Name:]
ØDsp_DoBlockÆ - Datentransfer zum DSP

!item [Xbiosnummer:]
96

!item [Deklaration:]
void Dsp_DoBlock( int8_t *data_in, int32_t size_in, int8_t *data_out,
                  int32_t size_out );

!item [Beschreibung:]
Die Funktion kopiert (!I)size_in(!i) DSP-Worte aus dem Puffer
(!I)data_in(!i) zum DSP. Nachdem alle Daten Åbertragen wurden, wartet die
Funktion bis die Daten verarbeitet wurden. Dann werden (!I)size_out(!i)
DSP-Worte in den Puffer (!I)data_out(!i) zurÅckkopiert, unabhÑngig davon,
wieviel Daten wirklich vorliegen. Sollen keine Daten gesendet werden, muû
man (!I)size_in(!i) auf Null setzen. Gleiches gilt fÅr das Empfangen, in
diesem Fall wird (!I)size_out(!i) Null zugewiesen. (!I)size_in(!i) und
(!I)size_out(!i) sind auf 64 KByte begrenzt.

!item [Ergebnis:]
Die Funktion liefert kein Ergebnis zurÅck.

!item [VerfÅgbar:]
Die Funktion ist nur auf Computern mit dem Signalprozessor DSP56001
verfÅgbar.

!item [Gruppe:]
DSP-Programmierung

!item [Querverweis:]
(!link [Binding] [Bindings fÅr Dsp_DoBlock]) ~ Dsp_BlkHandShake ~
Dsp_BlkUnpacked ~ Dsp_BlkWords ~ Dsp_BlkBytes ~ Dsp_InStream ~
Dsp_OutStream ~ Dsp_IOStream ~ Dsp_GetWordSize ~ Dsp_MultBlocks

(!ende_liste)


!begin_node Bindings fÅr Dsp_DoBlock
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
 #include <tos.h>

void Dsp_DoBlock( int8_t *data_in, int32_t size_in, int8_t *data_out,
                  int32_t size_out );
!item [Assembler:]
!begin_verbatim
move.l    size_out,-(sp)  ; Offset 14
pea       data_out        ; Offset 10
move.l    size_in,-(sp)   ; Offset  6
pea       data_in         ; Offset  2
move.w    #96,-(sp)       ; Offset  0
trap      #14             ; XBIOS aufrufen
lea       $12(sp),sp      ; Stack korrigieren
!end_verbatim
(!ende_liste)
!end_node
!end_node


!endif
