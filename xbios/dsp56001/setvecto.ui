!iflang [english]


!begin_node Dsp_SetVectors
(!begin_liste) [Availability]

!item [Name:]
ØDsp_SetVectorsÆ - Installation of a custom transfer routine

!item [Opcode:]
126

!item [Syntax:]
void Dsp_SetVectors( void (*receiver)(), int32_t (*transmitter)() );

!item [Description:]
The function Dsp_SetVectors installs routines that
are called when the DSP wants to transfer data via
interrupt handlers. (!I)receiver(!i) is a pointer to a routine
that is called after the DSP has sent data, and
(!I)transmitter(!i) a pointer to a routine that is called
before the DSP receives data. The reception routine
(!I)receiver(!i) is passed a LONG that was sent by the DSP
as a parameter on the stack. The sender routine
(!I)transmitter(!i) passes a LONG to the DSP in register D0.
This must be non-zero so that it (or rather the
lowest three bytes) are transferred to the DSP. Both
routines are terminated by the assembler command RTS.

If a 0 is passed for (!I)receiver(!i) or (!I)transmitter(!i), then
the corresponding interrupt will be blocked. To remove
a routine, one has to call Dsp_RemoveInterrupts.

!item [(!nolink [Return]) value:]
The function does not return a result.

!item [Availability:]
The function is available only on computers with the
DSP-56001 signal processor.

!item [Group:]
DSP programming

!item [See also:]
(!link [Binding] [Bindings for Dsp_SetVectors]) ~ Dsp_InStream ~
Dsp_OutStream ~ Dsp_IOStream ~ Dsp_RemoveInterrupts

(!ende_liste)


!begin_node Bindings for Dsp_SetVectors
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
 #include <tos.h>

void Dsp_SetVectors( void (*receiver)(), int32_t (*transmitter)() );
!item [Assembler:]
!begin_verbatim
pea       transmitter  ; Offset 6
pea       receiver     ; Offset 2
move.w    #126,-(sp)   ; Offset 0
trap      #14          ; Call XBIOS
lea       $A(sp),sp    ; Correct stack
!end_verbatim
(!ende_liste)
!end_node
!end_node


!else


!begin_node Dsp_SetVectors
(!begin_liste) [Beschreibung]

!item [Name:]
ØDsp_SetVectorsÆ - Installation einer eigenen öbertragungsroutine

!item [Xbiosnummer:]
126

!item [Deklaration:]
void Dsp_SetVectors( void (*receiver)(), int32_t (*transmitter)() );

!item [Beschreibung:]
Die Funktion Dsp_SetVectors installiert Routinen, die aufgerufen werden,
wenn der DSP Åber einen Interrupt Daten Åbertragen will. (!I)receiver(!i)
ist ein Zeiger auf eine Routine, die aufgerufen wird, nachdem der DSP Daten
verschickt hat, und (!I)transmitter(!i) ein Zeiger auf eine Routine, die
aufgerufen wird, bevor der DSP Daten empfÑngt. Die Empfangsroutine
(!I)receiver(!i) erhÑlt als Parameter auf dem Stack einen LONG, der vom DSP
gesendet wurde. Die Senderoutine (!I)transmitter(!i) Åbergibt einen LONG an
den DSP in Register D0. Dieser muû ungleich Null sein, damit er, d.h.
dessen niederwertigen drei Bytes an den DSP Åbertragen wird. Beide Routinen
werden mit dem Assemblerbefehl RTS abgeschlossen.

Wird fÅr (!I)receiver(!i) oder transmitter 0 Åbergeben, so wird der
entsprechende Interrupt gesperrt. Um eine Routine wieder zu entfernen, muû
man (!nolink [Dsp_RemoveInterrupts]) aufrufen.

!item [Ergebnis:]
Die Funktion liefert kein Ergebnis zurÅck.

!item [VerfÅgbar:]
Die Funktion ist nur auf Computern mit dem Signalprozessor DSP56001
verfÅgbar.

!item [Gruppe:]
DSP-Programmierung

!item [Querverweis:]
(!link [Binding] [Bindings fÅr Dsp_SetVectors]) ~ Dsp_InStream ~
Dsp_OutStream ~ Dsp_IOStream ~ Dsp_RemoveInterrupts

(!ende_liste)


!begin_node Bindings fÅr Dsp_SetVectors
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
 #include <tos.h>

void Dsp_SetVectors( void (*receiver)(), int32_t (*transmitter)() );
!item [Assembler:]
!begin_verbatim
pea       transmitter  ; Offset 6
pea       receiver     ; Offset 2
move.w    #126,-(sp)   ; Offset 0
trap      #14          ; XBIOS aufrufen
lea       $A(sp),sp    ; Stack korrigieren
!end_verbatim
(!ende_liste)
!end_node
!end_node


!endif
