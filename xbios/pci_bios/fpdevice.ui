!iflang [english]


!begin_node find_pci_device
(!begin_liste) [Availability]

!item [Name:]
Øfind_pci_deviceÆ - 
Returns a device handle for a device that matches the given device and
vendor ID.

!item [Opcode:]
300

!item [Syntax:]
int32_t find_pci_device( int32_t id, int16_t index);

!item [Description:]
This functions returns a device handle for a device that matches the given
device and vendor ID. A driver can query multiple devices with the same
device and vendor ID by starting with index = 0,1,2,... and calling this
function until PCI_DEVICE_NOT_FOUND is returned.

As a special case, Vendor ID $FFFF can be used to query all cards found in
the system, the specified Device ID is ignored in that case.

!begin_xlist [Parameters]
!item [~] ~
!item [id] Device ID in bits 31..16 (0 - $FFFF) (!nl)
Vendor ID in bits 15..0 (0 - $FFFE)
!item [index] Index of card (0 - number of cards with these IDs)
!end_xlist

!item [(!nolink [Return]) value:]
Device handle for a device or PCI_DEVICE_NOT_FOUND.

!item [Availability:]
PCI-(!nolink [BIOS]) V2.00

!item [Group:]
PCI-BIOS

!item [See also:]
(!link [Binding] [Bindings for find_pci_device]) ~ find_pci_classcode

(!ende_liste)


!begin_node Bindings for find_pci_device
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
 #include <tos.h>

int32_t find_pci_device( int32_t id, int16_t index);
!item [Assembler:]
!begin_verbatim
move.w    index,-(sp)  ; Offset 6
move.l    id,-(sp)     ; Offset 2
move.w    #300,-(sp)   ; Offset 0
trap      #14          ; Call XBIOS
addq.l    #8,sp        ; Correct stack
!end_verbatim
(!ende_liste)
!end_node
!end_node


!else


!begin_node find_pci_device
(!begin_liste) [Beschreibung]

!item [Name:]
Øfind_pci_deviceÆ - 
Liefert ein Devicehandle fÅr ein GerÑt, das dem angegebenen GerÑt und der
Hersteller ID entspricht.

!item [Xbiosnummer:]
300

!item [Deklaration:]
int32_t find_pci_device( int32_t id, int16_t index);

!item [Beschreibung:]
Die Funktion liefert ein Devicehandle fÅr ein GerÑt, das dem angegebenen
GerÑt und der Hersteller ID entspricht. Der Treiber kann diese Funktion
mehrmals fÅr eine GerÑte und Hersteller ID aufrufen und den
index = 0,1,2,... fÅr jeden Aufruf hochzÑhlen, bis die Funktion
PCI_DEVICE_NOT_FOUND liefert.

Als Spezialfall kann die Hersteller ID $FFFF benutzt weren, um alle GerÑte
abzufragen. Die GerÑte ID wird in diesem Fall ignoriert.

!begin_xlist [Parameters]
!item [~] ~
!item [id] GerÑte ID in Bits 31..16 (0 - $FFFF) (!nl)
Hersteller ID in Bits 15..0 (0 - $FFFE)
!item [index] Kartenindex (0 - Anzahl Karten mit diesen IDs)
!end_xlist

!item [Ergebnis:]
Devicehandle fÅr das GerÑt oder PCI_DEVICE_NOT_FOUND.

!item [VerfÅgbar:]
PCI-(!nolink [BIOS]) V2.00

!item [Gruppe:]
PCI-BIOS

!item [Querverweis:]
(!link [Binding] [Bindings fÅr find_pci_device]) ~ find_pci_classcode

(!ende_liste)


!begin_node Bindings fÅr find_pci_device
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
 #include <tos.h>

int32_t find_pci_device( int32_t id, int16_t index);
!item [Assembler:]
!begin_verbatim
move.w    index,-(sp)  ; Offset 6
move.l    id,-(sp)     ; Offset 2
move.w    #300,-(sp)   ; Offset 0
trap      #14          ; XBIOS aufrufen
addq.l    #8,sp        ; Stack korrigieren
!end_verbatim
(!ende_liste)
!end_node
!end_node


!endif
