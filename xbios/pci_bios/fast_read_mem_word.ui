!iflang [english]

!begin_node fast_read_mem_word
#!html_name fast_read_mem_word

(!begin_liste) [Availability]

!item [Name:]
(!rdouble)Read memory word fast(!ldouble)

!item [Opcode:]
323

!item [Syntax:]
uint16_t fast_read_mem_word (int32_t handle, uint32_t offset);

!item [Description:]
This function is alternative for the normal memory read function. It returns
the read value in D0 and returns no error code, which makes it easier to use
in C.

!begin_ilist [address]
!item [handle]
Device handle

!item [offset]
Address to access (in PCI memory address space)

!end_ilist

!item [(!nolink [Return]) value:]
Read data.

!item [Availability:]
PCI-(!nolink [BIOS])

!item [Group:]
PCI-BIOS

!item [See also:]
(!link [Binding] [Bindings for fast_read_mem_word]) ~
read_mem_byte ~ fast_read_mem_byte ~
read_mem_word ~ read_mem_longword ~
fast_read_mem_longword

(!ende_liste)


!begin_node Bindings for fast_read_mem_word
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
 #include <tos.h>

uint16_t fast_read_mem_word (int32_t handle, uint32_t offset);
!item [Assembler:]
!begin_verbatim
move.l    offset,-(sp)  ; Offset 6
move.l    handle,-(sp)  ; Offset 2
move.w    #323,-(sp)    ; Offset 0
trap      #14           ; Call XBIOS
lea       10(sp),sp     ; Correct stack
!end_verbatim
(!ende_liste)
!end_node
!end_node


!else


!begin_node fast_read_mem_word
#!html_name fast_read_mem_word

(!begin_liste) [Beschreibung]

!item [Name:]
(!rdouble)Read memory word fast(!ldouble)

!item [Xbiosnummer:]
323

!item [Deklaration:]
uint16_t read_mem_word (int32_t handle, uint32_t offset);

!item [Beschreibung:]
This function is alternative for the normal memory read function. It returns
the read value in D0 and returns no error code, which makes it easier to use
in C.

!begin_ilist [address]
!item [handle]
Device handle

!item [offset]
Address to access (in PCI memory address space)

!end_ilist

!item [Ergebnis:]
Read value.

!item [Verf(!uumlaut)gbar:]
PCI-(!nolink [BIOS])

!item [Gruppe:]
PCI-BIOS

!item [Querverweis:]
(!link [Binding] [Bindings f(!uumlaut)r fast_read_mem_word]) ~
read_mem_byte ~ fast_read_mem_byte ~
read_mem_word ~ read_mem_longword ~
fast_read_mem_longword

(!ende_liste)


!begin_node Bindings f(!uumlaut)r fast_read_mem_word
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
 #include <tos.h>

uint16_t fast_read_mem_word (int32_t handle, uint32_t offset);
!item [Assembler:]
!begin_verbatim
move.l    offset,-(sp)  ; Offset 6
move.l    handle,-(sp)  ; Offset 2
move.w    #323,-(sp)    ; Offset 0
trap      #14           ; XBIOS aufrufen
lea       10(sp),sp     ; Stack korrigieren
!end_verbatim
(!ende_liste)
!end_node
!end_node

!endif
