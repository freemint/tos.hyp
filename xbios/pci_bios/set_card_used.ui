!iflang [english]

!begin_node set_card_used
#!html_name set_card_used

(!begin_liste) [Availability]

!item [Name:]
(!rdouble)Set card used flag(!ldouble)

!item [Opcode:]
318

!item [Syntax:]
int32_t set_card_used (int32_t handle, uint32_t *callback);

!item [Description:]
This function is used to manage which card is in use by which driver. A driver
can provide a means by which a call-back function can be called from another
driver to deactivate this driver. This is necessary for the first driver to
unhook from interrupt chains etc., before the new driver can take over.

If the call-back entry is 0L, 1L or 3L, the card status is set to that value.
Only a driver which 'owns' the card may use this. If any other value is passed,
it is assumed to be a pointer to the drivers call back entry point, and the
card status is set to 2 (in use, can be uninstalled).

!begin_xlist [callback]
!item [handle]
Device handle

!item [callback]
Address of call-back entry (not pointer to address!) or 0L, 1L or 3L

!end_xlist

(!B)Call-back handlers:(!b) Call-back functions are invoked by calling the
call-back entry point, they return with RTS. Call-back functions may only
modify those registers which are used to pass arguments or results.
Call-back functions must be called in supervisor mode with at least 1024
bytes stack available. The call-back function number is passed in D0.L. If the
driver supports call-back functions, the following functions are mandatory:
!begin_xlist !compressed [Try to remove driver (1)]
!item [Call-back]
Description
!item [Get Driver ID (0)]
call_back0: (!nl)
Input: D0.L = call-back function number, ie. 0 (!nl)
Output: D0.L = driver ID (same as the driver's XBRA ID)
!item [Try to remove driver (1)]
call_back1: (!nl)
Input: D0.L = call-back function number, ie. 1 (!nl)
Output: D0.L = result code: 0=success (card is free), 1=can't uninstall
!end_xlist

!item [(!nolink [Return]) value:]
(!link [PCI-BIOS Error codes][PCI-BIOS Error codes])

!item [Availability:]
PCI-(!nolink [BIOS])

!item [Group:]
PCI-BIOS

!item [See also:]
(!link [Binding] [Bindings for set_card_used]) ~
get_card_used

(!ende_liste)


!begin_node Bindings for set_card_used
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
 #include <tos.h>

int32_t set_card_used (int32_t handle, uint32_t *callback);
!item [Assembler:]
!begin_verbatim
pea       callback      ; Offset 6
move.l    handle,-(sp)  ; Offset 2
move.w    #318,-(sp)    ; Offset 0
trap      #14           ; Call XBIOS
lea       10(sp),sp     ; Correct stack
!end_verbatim
(!ende_liste)
!end_node
!end_node


!else


!begin_node set_card_used
#!html_name set_card_used

(!begin_liste) [Beschreibung]

!item [Name:]
(!rdouble)Set card used flag(!ldouble)

!item [Xbiosnummer:]
318

!item [Deklaration:]
int32_t set_card_used (int32_t handle, uint32_t *callback);

!item [Beschreibung:]
This function is used to manage which card is in use by which driver. A driver
can provide a means by which a call-back function can be called from another
driver to deactivate this driver. This is necessary for the first driver to
unhook from interrupt chains etc., before the new driver can take over.

If the call-back entry is 0L, 1L or 3L, the card status is set to that value.
Only a driver which 'owns' the card may use this. If any other value is passed,
it is assumed to be a pointer to the drivers call back entry point, and the
card status is set to 2 (in use, can be uninstalled).

!begin_xlist [callback]
!item [handle]
Device handle

!item [callback]
Address of call-back entry (not pointer to address!) or 0L, 1L or 3L

!end_xlist

(!B)Call-back handlers:(!b) Call-back functions are invoked by calling the
call-back entry point, they return with RTS. Call-back functions may only
modify those registers which are used to pass arguments or results.
Call-back functions must be called in supervisor mode with at least 1024
bytes stack available. The call-back function number is passed in D0.L. If the
driver supports call-back functions, the following functions are mandatory:
!begin_xlist !compressed [Try to remove driver (1)]
!item [Call-back]
Description
!item [Get Driver ID (0)]
call_back0: (!nl)
Input: D0.L = call-back function number, ie. 0 (!nl)
Output: D0.L = driver ID (same as the driver's XBRA ID)
!item [Try to remove driver (1)]
call_back1: (!nl)
Input: D0.L = call-back function number, ie. 1 (!nl)
Output: D0.L = result code: 0=success (card is free), 1=can't uninstall
!end_xlist

!item [Ergebnis:]
PCI-BIOS Fehlercodes

!item [Verf(!uumlaut)gbar:]
PCI-(!nolink [BIOS])

!item [Gruppe:]
PCI-BIOS

!item [Querverweis:]
(!link [Binding] [Bindings f(!uumlaut)r set_card_used]) ~ 
get_card_used

(!ende_liste)


!begin_node Bindings f(!uumlaut)r set_card_used
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
 #include <tos.h>

int32_t set_card_used (int32_t handle, uint32_t *callback);
!item [Assembler:]
!begin_verbatim
pea       callback      ; Offset 6
move.l    handle,-(sp)  ; Offset 2
move.w    #318,-(sp)    ; Offset 0
trap      #14           ; XBIOS aufrufen
lea       10(sp),sp     ; Stack korrigieren
!end_verbatim
(!ende_liste)
!end_node
!end_node

!endif
