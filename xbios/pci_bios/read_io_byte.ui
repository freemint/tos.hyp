!iflang [english]

!begin_node read_io_byte
#!html_name read_io_byte

(!begin_liste) [Availability]

!item [Name:]
(!rdouble)Read IO byte(!ldouble)

!item [Opcode:]
328

!item [Syntax:]
int32_t read_io_byte (int32_t handle, uint32_t offset, uint8_t *address);

!item [Description:]
This function reads 8-bit values from a IO region.

!begin_ilist [address]
!item [handle]
Device handle

!item [offset]
Address to access (in PCI IO address space)

!item [address]
Pointer to data in memory

!end_ilist

!item [(!nolink [Return]) value:]
(!link [PCI-BIOS Error codes][PCI-BIOS Error codes])

!item [Availability:]
PCI-(!nolink [BIOS])

!item [Group:]
PCI-BIOS

!item [See also:]
(!link [Binding] [Bindings for read_io_byte]) ~
fast_read_io_byte ~ read_io_word ~
fast_read_io_word ~ read_io_longword ~
fast_read_io_longword

(!ende_liste)


!begin_node Bindings for read_io_byte
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
 #include <tos.h>

int32_t read_io_byte (int32_t handle, uint32_t offset, uint8_t *address);
!item [Assembler:]
!begin_verbatim
pea       address       ; Offset 10
move.l    offset,-(sp)  ; Offset 6
move.l    handle,-(sp)  ; Offset 2
move.w    #328,-(sp)    ; Offset 0
trap      #14           ; Call XBIOS
lea       14(sp),sp     ; Correct stack
!end_verbatim
(!ende_liste)
!end_node
!end_node


!else


!begin_node read_io_byte
#!html_name read_io_byte

(!begin_liste) [Beschreibung]

!item [Name:]
(!rdouble)Read IO Byte(!ldouble)

!item [Xbiosnummer:]
328

!item [Deklaration:]
int32_t read_io_byte (int32_t handle, uint32_t offset, uint8_t *address);

!item [Beschreibung:]
This function reads 8-bit values from a IO region.

!begin_ilist [address]
!item [handle]
Device handle

!item [offset]
Address to access (in PCI IO address space)

!item [address]
Pointer to data in memory

!end_ilist

!item [Ergebnis:]
PCI-BIOS Fehlercodes

!item [Verf(!uumlaut)gbar:]
PCI-(!nolink [BIOS])

!item [Gruppe:]
PCI-BIOS

!item [Querverweis:]
(!link [Binding] [Bindings f(!uumlaut)r read_io_byte]) ~
fast_read_io_byte ~ read_io_word ~
fast_read_io_word ~ read_io_longword ~
fast_read_io_longword

(!ende_liste)


!begin_node Bindings f(!uumlaut)r read_io_byte
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
 #include <tos.h>

int32_t read_io_byte (int32_t handle, uint32_t offset, uint8_t *address);
!item [Assembler:]
!begin_verbatim
pea       address       ; Offset 10
move.l    offset,-(sp)  ; Offset 6
move.l    handle,-(sp)  ; Offset 2
move.w    #328,-(sp)    ; Offset 0
trap      #14           ; XBIOS aufrufen
lea       14(sp),sp     ; Stack korrigieren
!end_verbatim
(!ende_liste)
!end_node
!end_node

!endif
