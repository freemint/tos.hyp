!iflang [english]

!begin_node write_io_byte
#!html_name write_io_byte

(!begin_liste) [Availability]

!item [Name:]
(!rdouble)Write IO byte(!ldouble)

!item [Opcode:]
334

!item [Syntax:]
int32_t write_io_byte (int32_t handle, uint32_t offset, uint8_t val);

!item [Description:]
This function writes 8-bit values to a IO region.


!begin_ilist [handle]
!item [handle]
Device handle

!item [offset]
Address to access (in PCI IO address space)

!item [val]
Data to write (8 bits)

!end_ilist

!item [(!nolink [Return]) value:]
PCI-BIOS Error codes

!item [Availability:]
PCI-(!nolink [BIOS])

!item [Group:]
PCI-BIOS

!item [See also:]
(!link [Binding] [Bindings for write_io_byte]) ~
write_io_word ~ write_io_longword ~
read_io_byte ~ read_io_word ~ read_io_longword

(!ende_liste)


!begin_node Bindings for write_io_byte
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
 #include <tos.h>

int32_t write_io_byte (int32_t handle, uint32_t offset, uint8_t val);
!item [Assembler:]
!begin_verbatim
move.w    val,-(sp)     ; Offset 10
move.l    offset,-(sp)  ; Offset 6
move.l    handle,-(sp)  ; Offset 2
move.w    #334,-(sp)    ; Offset 0
trap      #14           ; Call XBIOS
lea       12(sp),sp     ; Correct stack
!end_verbatim
(!ende_liste)
!end_node
!end_node


!else


!begin_node write_io_byte
#!html_name write_io_byte

(!begin_liste) [Beschreibung]

!item [Name:]
(!rdouble)Write IO Byte(!ldouble)

!item [Xbiosnummer:]
334

!item [Deklaration:]
int32_t write_io_byte (int32_t handle, uint32_t offset, uint8_t val);

!item [Beschreibung:]
This function writes 8-bit values to a IO region.

!begin_ilist [handle]
!item [handle]
Device handle

!item [offset]
Address to access (in PCI IO address space)

!item [val]
Data to write (8 bits)

!end_ilist

!item [Ergebnis:]
PCI-BIOS Fehlercodes

!item [Verf(!uumlaut)gbar:]
PCI-(!nolink [BIOS])

!item [Gruppe:]
PCI-BIOS

!item [Querverweis:]
(!link [Binding] [Bindings f(!uumlaut)r write_io_byte]) ~
write_io_word ~ write_io_longword ~
read_io_byte ~ read_io_word ~ read_io_longword

(!ende_liste)


!begin_node Bindings f(!uumlaut)r write_io_byte
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
 #include <tos.h>

int32_t write_io_byte (int32_t handle, uint32_t offset, uint8_t val);
!item [Assembler:]
!begin_verbatim
move.w    val,-(sp)     ; Offset 10
move.l    offset,-(sp)  ; Offset 6
move.l    handle,-(sp)  ; Offset 2
move.w    #334,-(sp)    ; Offset 0
trap      #14           ; XBIOS aufrufen
lea       12(sp),sp     ; Stack korrigieren
!end_verbatim
(!ende_liste)
!end_node
!end_node

!endif
