!iflang [english]


!begin_node Vwrite
(!begin_liste) [Availability]

!item [Name:]
ØVwriteÆ - Change the screen resolution.

!item [Opcode:]
66

!item [Syntax:]
int16_t Vwrite( int16_t InitVDI, VDO_PARAM *InParam, VDO_PARAM *OutParam );

!item [Description:]
It is possible to use the VDI in order to use the graph functions immediately.
It allows to reallocate the needed screen for the chosen video mode.

With (!I)InParam(!i), you can send the new desired resolution:

!begin_itemize
!item handle <>-1:
This is the handle of a known video mode (for instance when
restoring the initial screen).
It is possible to give the virtual screen size by setting a value different
than -1, otherwise it will use the setting of the default video mode.

!item handle = -1: you MUST specify the resolution and you MAY specify the
virtual screen size.
The function looks for a video mode able to accept the requested resolution
and, if needed, add an over-width (virtual screen).
!end_itemize

Once the resolution is passed in argument to the function, the output array
contains the mode actually passed
(useful to validate the mode).

In case of failure (not enough memory for the VDI screen, invalid handle, or
requested resolution too small),
the current mode is returned for information in the output array, in
addition an error message is provided.

!item [(!nolink [Return]) value:]
After the call, (!I)OutParam(!i) contains the real resolution made.

If an error occurs, the actual resolution is returned with -1.

!item [Availability:]
CENTScreen

!item [Group:]
CENTScreen XBIOS extension

!item [See Also:]
(!link [Binding] [Bindings for Vwrite])

(!ende_liste)


!begin_node Bindings for Vwrite
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
#include <tos.h>

int16_t Vwrite( int16_t InitVDI, VDO_PARAM *InParam, VDO_PARAM *OutParam );
!item [Assembler:]
!begin_verbatim
move.l   #OutParam,-(sp) ; Offset 6
move.l   #InParam,-(sp)  ; Offset 2
move.w   #66,-(sp)       ; Offset 0
trap     #14             ; Call XBIOS
lea      10(sp),sp       ; Correct stack
!end_verbatim
(!ende_liste)
!end_node
!end_node


!else


!begin_node Vwrite
(!begin_liste) [Beschreibung]

!item [Name:]
ØVwriteÆ - Auflîsung wechseln

!item [Xbiosnummer:]
66

!item [Deklaration:]
int16_t Vwrite( int16_t InitVDI, VDO_PARAM *In, VDO_PARAM *Out );

!item [Beschreibung:]
Es ist mîglich, das VDI durch einen Aufruf dieser Funktion zu initialsieren.
Es wird gleichzeitig Speicher neu angefordert.

Im in-array kann die geewÅnschte neue Auflîsung Åbergeben werden:

!begin_itemize
!item handle <>-1: das Handle gehîrt zu einem bekannten Videomode (wie z.B.
      die Auflîsung beim Systemstart). Die neue virtuelle Auflîsung kann mit
      einem Wert ungleich -1 angegeben werden, andernfalls wird die aktuelle
      virtuelle Auflîsung benutzt.
!item handle = -1: die Auflîsung muû angegeben werden. Es wird Modus
      benutzt, der eine Auflîsung kleiner oder gleich der gewÅnschten bietet
      und gegebenenfalls wird ein virtueller Bildschirm benutzt.
!end_itemize


!item [Ergebnis:]
Nach dem Funktionsaufruf enthÑlt das out-array die tatsÑchliche Auflîsung.

Im Fehlerfall wird als aktuelle Auflîsung -1 geliefert.

!item [VerfÅgbar:]
CENTScreen

!item [Gruppe:]
CENTScreen-XBIOS-Erweiterung

!item [Querverweis:]
(!link [Binding] [Bindings fÅr Vwrite])

(!ende_liste)


!begin_node Bindings fÅr Vwrite
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
#include <tos.h>

int16_t Vwrite( int16_t InitVDI, VDO_PARAM *In, VDO_PARAM *Out );
!item [Assembler:]
!begin_verbatim
move.l   #OutParam,-(sp) ; Offset 6
move.l   #InParam,-(sp)  ; Offset 2
move.w   #66,-(sp)       ; Offset 0
trap     #14             ; XBIOS aufrufen
lea      10(sp),sp       ; Stack korrigieren
!end_verbatim
(!ende_liste)
!end_node
!end_node


!endif
