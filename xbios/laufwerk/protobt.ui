!iflang [english]


!begin_node Protobt
(!begin_liste) [Availability]

!item [Name:]
Øprototype boot sectorÆ -  Generate a standard boot-sector for a floppy disk.

!item [Opcode:]
18

!item [Syntax:]
void Protobt( void *buf, int32_t serialno, int16_t disktype, int16_t execflag );

!item [Description:]
The (!nolink [XBIOS]) routine Protobt creates a boot-sector for
a floppy disk. The argument (!I)buf(!i) points to a 512 byte
sized buffer holding the contents of the boot-sector.
The parameter (!I)serialno(!i) serves to store a serial number
in the boot-sector; if the variable (!I)serialno(!i) is
greater than 0x01000000, then a random number will be
stored instead. With (!I)disktype(!i) one of the following
floppy disk types will be selected:

!begin_xlist !compressed [disktype]
!item [disktype]
Meaning
!item [~]
~
!item [~~-1]
Don't change disk type
!item [~~~0]
40 tracks, single-sided (180 kbyte)
!item [~~~1]
40 tracks, double-sided (360 kbyte)
!item [~~~2]
80 tracks, single-sided (360 kbyte)
!item [~~~3]
80 tracks, double-sided (720 kbyte)
!item [~~~4]
(!B)High Density(!b) (1,44 Mbyte)
(!nl)
is only supported if the cookie (!link [_FDC][Cookie, _FDC]) holds
the value for HD support.
!item [~~~5]
(!B)Extra High Density(!b) (2,88 Mbyte)
(!nl)
is only supported if the cookie (!nolink [_FDC]) holds
the value for (!nolink [ED]) support.
!end_xlist

Finally, the parameter (!I)execflag(!i) determines whether
the information in the boot-sector can be executed as
a program. The following apply:
!begin_xlist !compressed [execflag]
!item [execflag]
Meaning
!item [~]
~
!item [-1]
Do not alter boot-sector
!item [~0]
Boot-sector is not executable
!item [~1]
Boot-sector is executable
!end_xlist
(!B)Note:(!b) So that floppy disks may be read on MS-DOS
systems as well, the first 3 bytes of the boot-sector
have to have the values 0xE9, 0x00 and 0x4E or 0xEB,
0x34 and 0x90 entered; however, floppy disks of this
kind are then (!I)no longer bootable(!i) under (!nolink [TOS]).

!item [(!nolink [Return]) value:]
The function does not return a result.

!item [Availability:]
All (!nolink [TOS]) versions.

!item [Group:]
Drive functions

!item [See also:]
(!link [Binding] [Bindings for Protobt]) ~ Flopfmt

(!ende_liste)


!begin_node Bindings for Protobt
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
 #include <tos.h>

void Protobt( void *buf, int32_t serialno, int16_t disktype, int16_t execflag );
!item [Assembler:]
!begin_verbatim
move.w    execflag,-(sp)  ; Offset 12
move.w    disktype,-(sp)  ; Offset 10
move.l    serialno,-(sp)  ; Offset  6
pea       buf             ; Offset  2
move.w    #18,-(sp)       ; Offset  0
trap      #14             ; Call XBIOS
lea       $E(sp),sp       ; Correct stack
!end_verbatim

!item [GFA-Basic]
Fehler%=Xbios(18,L:buf%,L:serialno%,W:disktype%,W:execflag%)

(!ende_liste)
!end_node
!end_node


!else


!begin_node Protobt
(!begin_liste) [Beschreibung]

!item [Name:]
Øprototype boot sectorÆ - Standard-Boot-Sektor.

!item [Xbiosnummer:]
18

!item [Deklaration:]
void Protobt( void *buf, int32_t serialno, int16_t disktype, int16_t execflag );

!item [Beschreibung:]
Die XBIOS-Routine Protobt legt einen Boot-Sektor auf einer Diskette an. Das
Argument (!I)buf(!i) verweist auf einen 512 Byte groûen Puffer mit dem
Inhalt des Boot-Sektors. Der Parameter (!I)serialno(!i) dient dazu, eine
Seriennummer im Bootsektor abzuspeichern. Wenn die Variable (!I)serialno(!i)
grîûer als 0x01000000 ist, dann wird eine Zufallszahl abgelegt. Mit
(!I)disktype(!i) wird eine der folgenden Diskettenarten ausgewÑhlt:
!begin_xlist !compressed [disktype]
!item [disktype]
Bedeutung
!item [~]
~
!item [~~-1]
nicht verÑndern
!item [~~~0]
40 Spuren, einseitig~~~ (180 Kbyte)
!item [~~~1]
40 Spuren, doppelseitig (360 Kbyte)
!item [~~~2]
80 Spuren, einseitig~~~ (360 Kbyte)
!item [~~~3]
80 Spuren, doppelseitig (720 Kbyte)
!item [~~~4]
(!B)High-Density(!b) (1,44 Mbyte)
(!nl)
Wird nur unterstÅtzt, wenn im Cookie (!link [_FDC][Cookie, _FDC]) der Wert fÅr HD-UnterstÅtzung
eingetragen ist.
!item [~~~5]
(!B)Extra-High-Density(!b) (2,88 Mbyte)
(!nl)
Wird nur unterstÅtzt, wenn im Cookie (!nolink [_FDC]) der Wert fÅr ED-UnterstÅtzung
eingetragen ist.
!end_xlist
Der Parameter (!I)execflag(!i) legt schlieûlich fest, ob die Informationen
im Boot-Sektor als Programm ausgefÅhrt werden kînnen. Es gilt:
!begin_xlist !compressed [execflag]
!item [execflag]
Bedeutung
!item [~]
~
!item [-1]
Bootsektor nicht verÑndern
!item [~0]
Bootsektor nicht ausfÅhren
!item [~1]
Bootsektor ausfÅhrbar
!end_xlist
(!B)Hinweis:(!b) Damit Disketten auch auf MSDOS-Systemen gelesen werden
kînnen, mÅssen in die ersten 3 Bytes des Bootsektors die Werte 0xE9, 0x00
und 0x4E oder 0xEB, 0x34 und 0x90 eingetragen werden; auf diese Art und
Weise behandelte Disketten sind unter TOS dann allerdings (!I)nicht(!i)
mehr bootbar.

!item [Ergebnis:]
Die Funktion liefert kein Ergebnis.

!item [VerfÅgbar:]
Alle (!nolink [TOS]) Versionen.

!item [Gruppe:]
Laufwerksfunktionen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr Protobt]) ~ Flopfmt

(!ende_liste)


!begin_node Bindings fÅr Protobt
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
 #include <tos.h>

void Protobt( void *buf, int32_t serialno, int16_t disktype, int16_t execflag );
!item [Assembler:]
!begin_verbatim
move.w    execflag,-(sp)  ; Offset 12
move.w    disktype,-(sp)  ; Offset 10
move.l    serialno,-(sp)  ; Offset  6
pea       buf             ; Offset  2
move.w    #18,-(sp)       ; Offset  0
trap      #14             ; XBIOS aufrufen
lea       $E(sp),sp       ; Stack korrigieren
!end_verbatim

!item [GFA-Basic]
Fehler%=Xbios(18,L:buf%,L:serialno%,W:disktype%,W:execflag%)

(!ende_liste)
!end_node
!end_node


!endif
