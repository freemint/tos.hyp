!iflang [english]


!begin_node Flopver
(!begin_liste) [Availability]

!item [Name:]
ØFloppy verifyÆ - Verify sectors of a floppy disk.

!item [Opcode:]
19

!item [Syntax:]
int16_t Flopver( void *buf, int32_t filler, int16_t devno, int16_ sectno,
                 int16_t trackno, int16_t sideno, int16_t count );

!item [Description:]
The (!nolink [XBIOS]) routine Flopver verifies that a series of
sectors can be read without error from a floppy disk
drive. The following apply:
!begin_xlist !compressed [Parameter]
!item [Parameter]
Meaning
!item [~]
~
!item [buf]
Pointer to a 1024 byte block of memory
into which the sectors to be verified can be read
!item [filler]
Unused (should be set to 0)
!item [devno]
Drive:
!begin_table [l l l]
0 !! = !! Drive A:
1 !! = !! Drive B:
!end_table
!item [sectno]
Start sector (normally between 1 and 9)
!item [trackno]
Track nummer (normally between 0 and 79)
!item [sideno]
Side of the floppy disk (0 or 1)
!item [count]
Number of sectors to be verified
!end_xlist
(!B)Note:(!b) After the call one finds in the parameter (!I)buf(!i)
a NULL-terminated list of 16-bit words containing the
numbers of the defective sectors. So the function
does (!I)not(!i) compare sectors with a block of
memory; instead it always reads the sectors into
the same buffer. This only verifies that the sectors
can be read correctly, or if read errors occur during reading.

!item [(!nolink [Return]) value:]
The function returns the value 0 if the list stored
in the parameter (!I)buf(!i) is valid, or a non-zero value otherwise.

!item [Availability:]
All (!nolink [TOS]) versions.

!item [Group:]
Drive functions

!item [See also:]
(!link [Binding] [Bindings for Flopver])

(!ende_liste)


!begin_node Bindings for Flopver
!ignore_index
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
 #include <tos.h>

int16_t Flopver( void *buf, int32_t filler, int16_t devno, int16_ sectno,
                 int16_t trackno, int16_t sideno, int16_t count );
!item [Assembler:]
!begin_verbatim
move.w    count,-(sp)    ; Offset 18
move.w    sideno,-(sp)   ; Offset 16
move.w    trackno,-(sp)  ; Offset 14
move.w    sectno,-(sp)   ; Offset 12
move.w    devno,-(sp)    ; Offset 10
move.l    filler,-(sp)   ; Offset  6
pea       buf            ; Offset  2
move.w    #19,-(sp)      ; Offset  0
trap      #14            ; Call XBIOS
lea       $14(sp),sp     ; Correct stack
!end_verbatim

!item [GFA-Basic]
Fehler%=Xbios(19,L:buf%,L:filler%,W:devno%,W:sectno,W:trackno%,W:sideno%,W:count%)

(!ende_liste)
!end_node
!end_node


!else


!begin_node Flopver
(!begin_liste) [Beschreibung]

!item [Name:]
ØFloppy verifyÆ - ÅberprÅft Disketten.

!item [Xbiosnummer:]
19

!item [Deklaration:]
int16_t Flopver( void *buf, int32_t filler, int16_t devno, int16_ sectno,
                 int16_t trackno, int16_t sideno, int16_t count );

!item [Beschreibung:]
Die XBIOS-Routine Flopver ÅberprÅft, ob eine Reihe von Sektoren fehlerfrei
von einem Disketten-Laufwerk gelesen werden kann. Es gilt:
!begin_xlist !compressed [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [buf]
Zeiger auf einen 1024 Byte groûen Speicherbereich, in den die zu
verifizierenden Sektoren eingelesen werden kînnen.
!item [filler]
unbenutzt (sollte auf 0 gesetzt werden)
!item [devno]
Laufwerk
!begin_table [l l l]
0 !! = !! Laufwerk-A
1 !! = !! Laufwerk-B
!end_table
!item [sectno]
Startsektor (normal zwischen 1 und 9)
!item [trackno]
Tracknummer (normal zwischen 0 und 79)
!item [sideno]
Seite der Diskette (0 oder 1)
!item [count]
Anzahl der zu ÅberprÅfenden Sektoren
!end_xlist
(!B)Hinweis:(!b) Nach dem Aufruf findet man im Parameter (!I)buf(!i) eine
durch Null abgeschlossene Liste von 16-Bit Worten mit den Nummern der
defekten Sektoren. Die Funktion vergleicht also (!I)keine(!i) Sektoren mit
einem Speicherbereich; stattdessen liest sie die Sektoren in den immer
selben Puffer ein. Dabei wird nur ÅberprÅft, ob die Sektoren korrekt
gelesen werden kînnen, oder ob beim Lesen Lesefehler auftreten.

!item [Ergebnis:]
Die Funktion liefert als Ergebnis den Wert 0, wenn die im Parameter
(!I)buf(!i) abgelegte Liste gÅltig ist und anderenfalls einen Wert
ungleich Null.

!item [VerfÅgbar:]
Alle (!nolink [TOS]) Versionen.

!item [Gruppe:]
Laufwerksfunktionen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr Flopver])

(!ende_liste)


!begin_node Bindings fÅr Flopver
!ignore_index
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
 #include <tos.h>

int16_t Flopver( void *buf, int32_t filler, int16_t devno, int16_ sectno,
                 int16_t trackno, int16_t sideno, int16_t count );
!item [Assembler:]
!begin_verbatim
move.w    count,-(sp)    ; Offset 18
move.w    sideno,-(sp)   ; Offset 16
move.w    trackno,-(sp)  ; Offset 14
move.w    sectno,-(sp)   ; Offset 12
move.w    devno,-(sp)    ; Offset 10
move.l    filler,-(sp)   ; Offset  6
pea       buf            ; Offset  2
move.w    #19,-(sp)      ; Offset  0
trap      #14            ; XBIOS aufrufen
lea       $14(sp),sp     ; Stack korrigieren
!end_verbatim

!item [GFA-Basic]
Fehler%=Xbios(19,L:buf%,L:filler%,W:devno%,W:sectno,W:trackno%,W:sideno%,W:count%)

(!ende_liste)
!end_node
!end_node


!endif
