!iflang [english]


!begin_node DMAread
(!begin_liste) [Availability]

!item [Name:]
ØDMA readÆ - Read individual sectors from a DMA device.

!item [Opcode:]
42

!item [Syntax:]
int16_t DMAread( int32_t sector, int16_t count, void *buffer, int16_t devno );

!item [Description:]
The (!nolink [XBIOS]) routine DMAread reads single or multiple
sectors from an ACSI or SCSI device. The following apply:
!begin_xlist !compressed [Parameter]
!item [Parameter]
Meaning
!item [~]
~
!item [sector]
First sector number to read
!item [count]
Number of sectors to read
!item [buffer]
Start address in memory where data stored
!item [devno]
Device number. This can be:
!begin_table [l l]
0..7: !! ACSI device
8..15: !! SCSI device
!end_table
All other values are reserved for future extensions.
!end_xlist
(!B)Note:(!b) In many cases it is more sensible to use
Rwabs in place of this function. The specified memory
block must be capable of being written to for the
hardware used (catchword: Fast-RAM buffer). On the
TT030, SCSI devices are handled by this function not
via DMA but via handshaking to transfer individual
bytes, so alternative RAM may be used. But the Falcon
uses DMA for SCSI transfers, so cannot use alternative
RAM for this.

!item [(!nolink [Return]) value:]
The function returns 0 if the operation was successful
and no error occurred, else a negative error-code.

!item [Availability:]
This function is only available from (!nolink [TOS]) 3.* (Atari TT030). 
onwards.

!item [Group:]
Drive functions

!item [See also:]
(!link [Binding] [Bindings for DMAread]) ~ DMAwrite ~ Floprd ~ Flopwr ~
Rwabs

(!ende_liste)


!begin_node Bindings for DMAread
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
 #include <tos.h>

int16_t DMAread( int32_t sector, int16_t count, void *buffer, int16_t devno );
!item [Assembler:]
!begin_verbatim
move.w    devno,-(sp)  ; Offset 12
pea       buffer       ; Offset  8
move.w    count,-(sp)  ; Offset  6
move.l    sector,-(sp) ; Offset  2
move.w    #42,-(sp)    ; Offset  0
trap      #14          ; Call XBIOS
lea       $E(sp),sp    ; Correct stack
!end_verbatim
(!ende_liste)
!end_node
!end_node


!else


!begin_node DMAread
(!begin_liste) [Beschreibung]

!item [Name:]
ØDMA readÆ - liest einzelne Sektoren von einer DMA-Einheit.

!item [Xbiosnummer:]
42

!item [Deklaration:]
int16_t DMAread( int32_t sector, int16_t count, void *buffer, int16_t devno );

!item [Beschreibung:]
Die XBIOS-Routine DMAread liest einzelne oder mehrere Sektoren von einem
ACSI- oder SCSI GerÑt. Es gilt:
!begin_xlist !compressed [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [sector]
erste Sektornummer
!item [count]
Anzahl der Sektoren
!item [buffer]
Anfangsadresse im Speicher
!item [devno]
GerÑtenummer. Es gilt:
!begin_table [l l]
0..7: !! ACSI-GerÑte
8..15: !! SCSI-GerÑte
!end_table
Alle anderen Werte sind fÅr zukÅnftige Erweiterungen reserviert.
!end_xlist
(!B)Hinweis:(!b) In vielen FÑllen ist es sinnvoller, statt dieser Funktion
Rwabs zu verwenden. Der angegebene Speicherbereich muû fÅr die jeweilige
Hardware beschreibbar sein (Stichwort: Fast-RAM-Buffer). SCSI-GerÑte werden
von dieser Funktion nicht per DMA, sondern per Handshake betrieben.

!item [Ergebnis:]
Die Funktion liefert als Ergebnis eine 0, wenn kein Fehler passiert ist,
ansonsten einen Fehlercode.

!item [VerfÅgbar:]
Diese Funktion steht erst ab TOS 3.* (Atari TT) zur VerfÅgung.

!item [Gruppe:]
Laufwerksfunktionen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr DMAread]) ~ DMAwrite ~ Floprd ~ Flopwr ~
Rwabs

(!ende_liste)


!begin_node Bindings fÅr DMAread
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
 #include <tos.h>

int16_t DMAread( int32_t sector, int16_t count, void *buffer, int16_t devno );
!item [Assembler:]
!begin_verbatim
move.w    devno,-(sp)  ; Offset 12
pea       buffer       ; Offset  8
move.w    count,-(sp)  ; Offset  6
move.l    sector,-(sp) ; Offset  2
move.w    #42,-(sp)    ; Offset  0
trap      #14          ; XBIOS aufrufen
lea       $E(sp),sp    ; Stack korrigieren
!end_verbatim
(!ende_liste)
!end_node
!end_node


!endif
