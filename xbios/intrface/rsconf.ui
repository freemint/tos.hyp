!iflang [english]


!begin_node Rsconf
(!begin_liste) [Availability]

!item [Name:]
ØRS-232 configurationÆ - Configure the RS-232 port.

!item [Opcode:]
15

!item [Syntax:]
int32_t Rsconf( int16_t baud, int16_t ctr, int16_t ucr, int16_t rsr, int16_t tsr, int16_t scr );

!item [Description:]
The (!nolink [XBIOS]) routine Rsconf configures the serial port. Since different
hardware components may be in use with  various computers, the function has to
be used with care, i.e.:
!begin_itemize !compressed
!item Current settings should be established with
      Rsconf (-1,-1,-1,-1,-1,-1)
!item Only manipulate the necessary bits
!item Then set the new values.
!end_itemize
Due to the possibility that various components may be in use, the usable values
have been restricted in the following way:
!begin_table [l|l]
Parameter !! Restriction
!hline
ucr !! Bit 1: (!B)Type of parity(!b)
~   !! ~~~~~~~0 = Odd
~   !! ~~~~~~~1 = Even
~   !!        ~
~   !! ~~~~2: (!B)Parity(!b)
~   !! ~~~~~~~0 = No
~   !! ~~~~~~~1 = Yes
~   !!        ~
~   !! ~~3+4: (!B)Number of stop bits(!b)
~   !! ~~~~~~~0 = Invalid
~   !! ~~~~~~~1 = 1 stop bit
~   !! ~~~~~~~2 = 1.5 stop bits
~   !! ~~~~~~~3 = 2 stop bits
~   !!        ~
~   !! ~~5+6: (!B)Word length(!b)
~   !! ~~~~~~~0 = 8 bits
~   !! ~~~~~~~1 = 7 bits
~   !! ~~~~~~~2 = 6 bits
~   !! ~~~~~~~3 = 5 bits
~   !!        ~
rsr !! Not usable
tsr !! Bit 3: (1 = Break)
scr !!Not usable
!end_table
Technically impossible values must therefore be ignored. Otherwise the
following assignments apply:
!begin_table [l|l]
Parameter !! Meaning
!hline
baud !! (!B)Baud rate(!b)
~    !! -1: Don't change
~    !! ~0: 19200 Baud
~    !! ~1:  9600 Baud
~    !! ~2:  4800 Baud
~    !! ~3:  3600 Baud
~    !! ~4:  2400 Baud
~    !! ~5:  2000 Baud
~    !! ~6:  1800 Baud
~    !! ~7:  1200 Baud
~    !! ~8:   600 Baud
~    !! ~9:   300 Baud
~    !! 10:   200 Baud
~    !! 11:   150 Baud
~    !! 12:   134 Baud
~    !! 13:   110 Baud
~    !! 14:    75 Baud
~    !! 15:    50 Baud
~    !! ~
ctr  !! (!B)Type of flow (!nolink [control])(!b)
~    !! -1: Don't change
~    !! ~0: No flow (!nolink [control]) [powerup default]
~    !! ~1: XON/XOFF (Control-S, Control-Q)
~    !! ~2: RTS/CTS
~    !! ~3: RTS/CTS and XON/XOFF
~    !! ~
ucr  !! New value for register, or -1
tsr  !! New value for register, or -1
rsr  !! New value for register, or -1
scr  !! New value for register, or -1
!end_table
(!B)Note:(!b) As of (!nolink [TOS]) 1.04 the last Baud rate set can be
established with Rsconf (-2,-1,-1,-1,-1). One should never rely on the
fact that all the settings could actually be made as desired, and hence
pay close attention to the return value of the function.

!item [(!nolink [Return]) value:]
The function returns in packed form the values of the
registers (!I)ucr,(!i) (!I)rsr,(!i) (!I)scr(!i) and (!I)tsr(!i)  as follows:
!begin_table [l r l]
Bits !! 0..7: !! scr register
Bits !! 8..15: !! tsr register
Bits !! 16..23: !! rsr register
Bits !! 24..31: !! ucr register
!end_table

!item [Availability:]
All (!nolink [TOS]) versions.

!item [Group:]
Interface programming

!item [See also:]
(!link [Binding] [Bindings for Rsconf]) ~ Bconmap

(!ende_liste)


!begin_node Bindings for Rsconf
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
 #include <tos.h>

int32_t Rsconf( int16_t baud, int16_t ctr, int16_t ucr, int16_t rsr, int16_t tsr, int16_t scr );
!item [Assembler:]
!begin_verbatim
move.w    scr,-(sp)    ; Offset 12
move.w    tsr,-(sp)    ; Offset 10
move.w    rsr,-(sp)    ; Offset  8
move.w    ucr,-(sp)    ; Offset  6
move.w    ctr,-(sp)    ; Offset  4
move.w    baud,-(sp)   ; Offset  2
move.w    #15,-(sp)    ; Offset  0
trap      #14          ; Call XBIOS
lea       $E(sp),sp    ; Correct stack
!end_verbatim
(!ende_liste)
!end_node
!end_node


!else


!begin_node Rsconf
(!begin_liste) [Beschreibung]

!item [Name:]
ØRS-232 configurationÆ - konfiguriert die RS-232-Schnittstelle.

!item [Xbiosnummer:]
15

!item [Deklaration:]
int32_t Rsconf( int16_t baud, int16_t ctr, int16_t ucr, int16_t rsr, int16_t tsr, int16_t scr );

!item [Beschreibung:]
Die XBIOS-Routine Rsconf konfiguriert die serielle Schnittstelle. Da auf
unterschiedlichen Rechnern unterschiedliche Hardwarebausteine zum Einsatz
kommen kînnen, muû die Funktion vorsichtig eingesetzt werden, d.h:
!begin_itemize !compressed
!item aktuelle Einstellungen sollten mit Hilfe von
      Rsconf (-1,-1,-1,-1,-1,-1) abgefragt werden
!item nur die notwendigen Bits manipulieren
!item anschlieûend die neuen Werte setzen
!end_itemize
Aufgrund der Mîglichkeit unterschiedliche Bausteine zum Einsatz kommen zu
lassen, wurden die benutzbaren Werte folgendermaûen eingeschrÑnkt:
!begin_table [l|l]
Parameter !! EinschrÑnkung
!hline
ucr !! Bit 1: (!B)Art der ParitÑt(!b)
~   !! ~~~~~~~0 = ungerade
~   !! ~~~~~~~1 = gerade
~   !!        ~
~   !! ~~~~2: (!B)ParitÑt(!b)
~   !! ~~~~~~~0 = nein
~   !! ~~~~~~~1 = ja
~   !!        ~
~   !! ~~3+4: (!B)Anzahl der Stopbits(!b)
~   !! ~~~~~~~0 = ungÅltig
~   !! ~~~~~~~1 = 1 Stopbit
~   !! ~~~~~~~2 = 1,5 Stopbits
~   !! ~~~~~~~3 = 2 Stopbits
~   !!        ~
~   !! ~~5+6: (!B)WortlÑnge(!b)
~   !! ~~~~~~~0 = 8 Bits
~   !! ~~~~~~~1 = 7 Bits
~   !! ~~~~~~~2 = 6 Bits
~   !! ~~~~~~~3 = 5 Bits
~   !!        ~
rsr !! nicht anwendbar
tsr !! Bit-3: (1 = Break)
scr !! nicht anwendbar
!end_table
Technisch nicht mîglich Werte mÅssen daher ignoriert werden. Ansonsten gilt
folgende Belegung:
!begin_table [l|l]
Parameter !! Bedeutung
!hline
baud !! (!B)Baudrate(!b)
~    !! -1: nicht verÑndern
~    !! ~0: 19200 Baud
~    !! ~1:  9600 Baud
~    !! ~2:  4800 Baud
~    !! ~3:  3600 Baud
~    !! ~4:  2400 Baud
~    !! ~5:  2000 Baud
~    !! ~6:  1800 Baud
~    !! ~7:  1200 Baud
~    !! ~8:   600 Baud
~    !! ~9:   300 Baud
~    !! 10:   200 Baud
~    !! 11:   150 Baud
~    !! 12:   134 Baud
~    !! 13:   110 Baud
~    !! 14:    75 Baud
~    !! 15:    50 Baud
~    !! ~
ctr  !! (!B)Art der Fluûkontrolle(!b)
~    !! -1: nicht verÑndern
~    !! ~0: keine Fluûkontrolle
~    !! ~1: XON/XOFF (Control-S, Control-Q)
~    !! ~2: RTS/CTS
~    !! ~3: RTS/CTS und XON/XOFF
~    !! ~
ucr  !! neuer Wert fÅr Register, oder -1
tsr  !! neuer Wert fÅr Register, oder -1
rsr  !! neuer Wert fÅr Register, oder -1
scr  !! neuer Wert fÅr Register, oder -1
!end_table
(!B)Hinweis:(!b) Ab TOS 1.04 kann die zuletzt eingestellte Baudrate per
Rsconf (-2,-1,-1,-1,-1) abgefragt werden. Man sollte sich niemals darauf
verlassen, daû alle Einstellungen tatsÑchlich wie gewÅnscht vorgenommen
werden konnten, und deshalb den RÅckgabewert der Funktion beachten.

!item [Ergebnis:]
Die Funktion liefert in gepackter Form die Werte der Register (!I)ucr,(!i)
(!I)rsr,(!i) (!I)scr,(!i) (!I)tsr(!i) und zwar wie folgt:
!begin_table [l r l]
Bits !! 0..7: !! scr-Register
Bits !! 8..15: !! tsr-Register
Bits !! 16..23: !! rsr-Register
Bits !! 24..31: !! ucr-Register
!end_table

!item [VerfÅgbar:]
Alle (!nolink [TOS]) Versionen.

!item [Gruppe:]
Schnittstellenprogrammierung

!item [Querverweis:]
(!link [Binding] [Bindings fÅr Rsconf]) ~ Bconmap

(!ende_liste)


!begin_node Bindings fÅr Rsconf
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
 #include <tos.h>

int32_t Rsconf( int16_t baud, int16_t ctr, int16_t ucr, int16_t rsr, int16_t tsr, int16_t scr );
!item [Assembler:]
!begin_verbatim
move.w    scr,-(sp)    ; Offset 12
move.w    tsr,-(sp)    ; Offset 10
move.w    rsr,-(sp)    ; Offset  8
move.w    ucr,-(sp)    ; Offset  6
move.w    ctr,-(sp)    ; Offset  4
move.w    baud,-(sp)   ; Offset  2
move.w    #15,-(sp)    ; Offset  0
trap      #14          ; XBIOS aufrufen
lea       $E(sp),sp    ; Stack korrigieren
!end_verbatim
(!ende_liste)
!end_node
!end_node


!endif
