!iflang [english]


!begin_node Iorec
(!begin_liste) [Availability]

!item [Name:]
Øinput output recordÆ - Obtain address of the input/
output buffer of a serial device.

!item [Opcode:]
14

!item [Syntax:]
IOREC *Iorec( int16_t dev );

!item [Description:]
The (!nolink [XBIOS]) routine Iorec returns the address of the
input/output buffer of a serial device (RS-232,
keyboard chip or MIDI port). The parameter (!I)dev(!i) can
take the following values:
!begin_table [c|l]
dev !! Meaning
!hline
0 !! RS-232
1 !! Keyboard
2 !! MIDI
!end_table

!item [(!nolink [Return]) value:]
The function returns a pointer to the IOREC array.

!item [Availability:]
All (!nolink [TOS]) versions.

!item [Group:]
Interface programming

!item [See also:]
(!link [Binding] [Bindings for Iorec]) ~ Bconmap

(!ende_liste)


!begin_node Bindings for Iorec
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
 #include <tos.h>

IOREC *Iorec( int16_t dev );
!item [Assembler:]
!begin_verbatim
move.w    dev,-(sp)    ; Offset 2
move.w    #14,-(sp)    ; Offset 0
trap      #14          ; Call XBIOS
addq.l    #4,sp        ; Correct stack
!end_verbatim
(!ende_liste)
!end_node
!end_node


!else


!begin_node Iorec
(!begin_liste) [Beschreibung]

!item [Name:]
Øinput output recordÆ - Adresse des Ein-/Ausgabepuffers ermitteln.

!item [Xbiosnummer:]
14

!item [Deklaration:]
IOREC *Iorec( int16_t dev );

!item [Beschreibung:]
Die XBIOS-Routine Iorec liefert die Adresse des Ein-/Ausgabe-Puffers eines
seriellen GerÑtes. Der Parameter (!I)dev(!i) kann folgende Werte annehmen:
!begin_table [c|l]
dev !! Bedeutung
!hline
0 !! RS-232
1 !! Tastatur
2 !! MIDI-Port
!end_table

!item [Ergebnis:]
Die Funktion liefert als Ergebnis einen Zeiger auf die Struktur IOREC.

!item [VerfÅgbar:]
Alle (!nolink [TOS]) Versionen.

!item [Gruppe:]
Schnittstellenprogrammierung

!item [Querverweis:]
(!link [Binding] [Bindings fÅr Iorec]) ~ Bconmap

(!ende_liste)


!begin_node Bindings fÅr Iorec
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
 #include <tos.h>

IOREC *Iorec( int16_t dev );
!item [Assembler:]
!begin_verbatim
move.w    dev,-(sp)    ; Offset 2
move.w    #14,-(sp)    ; Offset 0
trap      #14          ; XBIOS aufrufen
addq.l    #4,sp        ; Stack korrigieren
!end_verbatim
(!ende_liste)
!end_node
!end_node


!endif
