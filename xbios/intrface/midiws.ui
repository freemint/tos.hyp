!iflang [english]


!begin_node Midiws
(!begin_liste) [Availability]

!item [Name:]
ØMidi write stringÆ - Write string of characters to the MIDI port.

!item [Opcode:]
12

!item [Syntax:]
void Midiws( int16_t cnt, void *ptr );

!item [Description:]
The (!nolink [XBIOS]) routine Midiws outputs a string from a
data buffer via the MIDI port. The following apply:
!begin_xlist !compressed [Parameter]
!item [Parameter]
Meaning
!item [~]
~
!item [cnt]
Number of bytes to be output - 1
!item [ptr]
Pointer to byte string
!end_xlist

!item [(!nolink [Return]) value:]
The function does not return a result.

!item [Availability:]
All (!nolink [TOS]) versions.

!item [Group:]
Interface programming

!item [See also:]
(!link [Binding] [Bindings for Midiws])

(!ende_liste)


!begin_node Bindings for Midiws
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
 #include <tos.h>

void Midiws( int16_t cnt, void *ptr );
!item [Assembler:]
!begin_verbatim
pea       ptr          ; Offset 4
move.w    cnt,-(sp)    ; Offset 2
move.w    #12,-(sp)    ; Offset 0
trap      #14          ; XBIOS aufrufen
addq.l    #8,sp        ; Stack korrigieren
!end_verbatim
(!ende_liste)
!end_node
!end_node


!else


!begin_node Midiws
(!begin_liste) [Beschreibung]

!item [Name:]
ØMidi write stringÆ - gibt eine Zeichenfolge Åber die Midi-Schnittstelle
aus.

!item [Xbiosnummer:]
12

!item [Deklaration:]
void Midiws( int16_t cnt, void *ptr );

!item [Beschreibung:]
Die XBIOS-Routine Midiws gibt einen String Åber die Midi-Schnittstelle aus.
Es gilt:
!begin_xlist !compressed [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [cnt]
Anzahl der auszugebenden Bytes - 1
!item [ptr]
Zeiger auf Bytefolge
!end_xlist

!item [Ergebnis:]
Die Funktion liefert kein Ergebnis.

!item [VerfÅgbar:]
Alle (!nolink [TOS]) Versionen.

!item [Gruppe:]
Schnittstellenprogrammierung

!item [Querverweis:]
(!link [Binding] [Bindings fÅr Midiws])

(!ende_liste)


!begin_node Bindings fÅr Midiws
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
 #include <tos.h>

void Midiws( int16_t cnt, void *ptr );
!item [Assembler:]
!begin_verbatim
pea       ptr          ; Offset 4
move.w    cnt,-(sp)    ; Offset 2
move.w    #12,-(sp)    ; Offset 0
trap      #14          ; XBIOS aufrufen
addq.l    #8,sp        ; Stack korrigieren
!end_verbatim
(!ende_liste)
!end_node
!end_node


!endif
