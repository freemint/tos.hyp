!iflang [english]


!begin_node EsetPalette
(!begin_liste) [Availability]

!item [Name:]
ØSet palette registersÆ - Sets several entries in the 
color table from the specified buffer.

!item [Opcode:]
84

!item [Syntax:]
void EsetPalette( int16_t colorNum, int16_t count, int16_t *palettePtr );

!item [Description:]
The (!nolink [XBIOS]) routine EsetPalette sets (!I)count(!i) color 
entries from (!I)colorNum(!i) on in the color table to the 
values in array (!I)palettePtr(!i).
               
!item [(!nolink [Return]) value:]
The function has no return.

!item [Availability:]
The function is available only in the (!nolink [TOS]) of the 
Atari TT.

!item [Group:]
Screen functions

!item [See also:]
(!link [Binding] [Bindings for EsetPalette]) ~ EgetPalette

(!ende_liste)

!begin_node Bindings for EsetPalette
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
 #include <tos.h>

void EsetPalette( int16_t colorNum, int16_t count, int16_t *palettePtr );
!item [Assembler:]
!begin_verbatim
pea       palettePtr      ; Offset 6
move.w    count,-(sp)     ; Offset 4
move.w    colorNum,-(sp)  ; Offset 2
move.w    #84,-(sp)       ; Offset 0
trap      #14             ; Call XBIOS
lea       $A(sp),sp       ; Correct stack
!end_verbatim
(!ende_liste)
!end_node
!end_node


!else


!begin_node EsetPalette
(!begin_liste) [Beschreibung]

!item [Name:]
ØSet palette registersÆ - Setzt mehrere EintrÑge in der Farbtabelle.

!item [Xbiosnummer:]
84

!item [Deklaration:]
void EsetPalette( int16_t colorNum, int16_t count, int16_t *palettePtr );

!item [Beschreibung:]
Die XBIOS-Routine EsetPalette setzt (!I)count(!i) FarbeintrÑge ab
(!I)colorNum(!i) in der Farbtabelle auf die Werte im Array
(!I)palettePtr(!i).

!item [Ergebnis:]
Die Funktion hat kein Ergebnis.

!item [VerfÅgbar:]
Die Funktion steht nur im TOS des Atari-TT zur VerfÅgung.

!item [Gruppe:]
Bildschirmfunktionen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr EsetPalette]) ~ EgetPalette

(!ende_liste)

!begin_node Bindings fÅr EsetPalette
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
 #include <tos.h>

void EsetPalette( int16_t colorNum, int16_t count, int16_t *palettePtr );
!item [Assembler:]
!begin_verbatim
pea       palettePtr      ; Offset 6
move.w    count,-(sp)     ; Offset 4
move.w    colorNum,-(sp)  ; Offset 2
move.w    #84,-(sp)       ; Offset 0
trap      #14             ; XBIOS aufrufen
lea       $A(sp),sp       ; Stack korrigieren
!end_verbatim
(!ende_liste)
!end_node
!end_node


!endif
