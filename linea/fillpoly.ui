!iflang [english]


!begin_node Filled polygon
!html_name linea_fillpoly
(!begin_liste) [Availability]

!item [Name:]
ØFilled polygonÆ

!item [Line-A number:]
$A006

!item [Syntax:]
(!link [See 'Bindings for filled_polygon'] [Bindings for filled_polygon])

!item [Description:]
This (!nolink [Line-A]) function draws one line of a filled polygon through
calls of the (!link [horizontal line][Horizontal line]) function. For
drawing the whole polygon this function must be called for any possible
Y-coordinate. In addition, as for (!link [filled rectangle][Filled rectangle]),
there is the option to permit drawing of the polygon only within a passed
(!link [clipping][Clipping]) rectangle.

All vertices of the polygon are passed in the field ptsin, the number of
vertices is contained in the second element of the contrl field. In C this
means that contrl[1] will hold the number of vertices, ptsin[0] the
X-coordinate of the first vertex, ptsin[1] the Y-coordinate of the first
vertex, ptsin[2] the X-coordinate of the second vertex, ... The last vertex 
in ptsin must be the first one again, so that the polygon is closed! The
Y-coordinate of the line to be drawn is passed in the (!nolink [Line-A])
parameter block in y1.

The following (!nolink [Line-A]) variables are used:
 
!begin_xlist !compressed [xmn_clip]
!item [Variable]
Meaning
!item [~]
~
!item [y1]
Y-coordinate of the line to be drawn
!item [fg_bp_1]
Bit value of the first plane for the colour to be used for the fill
!item [fg_bp_2]
Bit value of the second plane (only low or medium resolution)
!item [fg_bp_3]
Bit value of the third plane (only low resolution)
!item [fg_bp_4]
Bit value of the fourth plane (only low resolution)
!item [patptr]
Pointer to a field with 16-bit line patterns
!item [patmsk]
Number of line patterns - 1. Depending on the Y-coordinate one pattern will
be selec!-ted now from the field of line patterns. The index of the line
pattern used can be calculated with (y mod (patmsk + 1)). By specifying
several line patterns and using multiple calls of this function for 
consecutive lines, it is easy to draw complex patterns as well.

!item [wrt_mode]
Writing mode; the following modes are possible:

!begin_xlist [REPLACE 0] !compressed
!item [REPLACE 0]
Replace
!item [TRANS   1]
Transparent (OR)
!item [XOR     2]
Inverse (XOR)
!item [INVERS  3]
Inverse Transparent (XOR with not(LN_MASK))
!end_xlist

!item [clip]
1 if (!link [clipping][Clipping]) is desired, else 0
!item [xmn_clip]
X-coordinate of the top left corner of the clipping region, if clipping is
switched on
!item [ymn_clip]
y-coordinate of the top left corner of the clipping region, if clipping is
switched on
!item [xmx_clip]
X-coordinate of the bottom right corner of the clipping region, if clipping
is switched on
!item [ymx_clip]
Y-coordinate of the bottom right corner of the clipping region, if clipping
is switched on
!end_xlist

The binding from TC passes the line pattern, the
(!link [writing mode][Write mode]) and colour not to the filled_polygon 
function, but uses separate functions set_fg_bp, set_wrt_mode, set_pattern and
set_clipping for setting the parameters in the (!nolink [Line-A]) parameter
block.

!item [(!nolink [Return]) value:]
The function does not return a result.

!item [Availability:]
All (!nolink [TOS]) versions.

!item [See also:]
(!link [Binding] [Bindings for filled_polygon]) ~
(!link [Horizontal line][Horizontal line]) ~
(!link [Filled rectangle][Filled rectangle])

(!ende_liste)


!begin_node Bindings for filled_polygon
!ignore_index
(!begin_liste) [Assembler]
!item [Pure-C:]
void filled_polygon( int16_t *xy, int16_t count );
!item [Assembler:]
It is assumed that the contrl field has already been 
entered in the (!nolink [Line-A]) parameter block.

!begin_verbatim
; Save registers
movem.l   D0-D2/A0-A2,-(A7)
; Pointer parameter block LINEA
move.l    pParamblk,A0
; contrl to a1
move.w    (4,A0),A1
; No. or vertexes to contrl[1]
move.w    count,(2,A1)
; Save old value of the ptsin field
move.l    (12,A0),-(A7)
; Field with coordinates of vertexes in LINEA.ptsin
move.l    xy,(12,A0)
; Line to be drawn, Y-coordinate in LINEA.y1
move.w    y1,(40,A0)
; Bit for first plane in LINEA.fg_bp_1
move.w    colbit0,(24,A0)
; Bit for first plane in LINEA.fg_bp_2
move.w    colbit1,(26,A0)
; Bit for first plane in LINEA.fg_bp_3
move.w    colbit2,(28,A0)
; Bit for first plane in LINEA.fg_bp_4
move.w    colbit3,(30,A0)
; Writing mode in LINEA.wrt_mode
move.w    wmode,(36,A0)
; Line pattern in LINEA.patptr
move.w    patptr,(46,A0)
; No. of patterns in LINEA.patmsk
move.w    patmsk,(50,A0)
; Clipmode in LINEA.clip
move.w    mode,(54,A0)
; Top left clip corner, X-coordinate in LINEA.xmn_clip
move.w    cx1,(56,A0)
; Top left clip corner, Y-coordinate in LINEA.ymn_clip
move.w    cy1,(58,A0)
; Bottom right clip corner, X-coordinate in LINEA.xmx_clip
move.w    cx2,(60,A0)
; Bottom right clip corner, Y-coordinate in LINEA.ymx_clip
move.w    cy2,(62,A0)
; Line-A opcode
dc.w      $A006
; Pointer parameter block LINEA
move.l    pParamblk,A0
; Restore old value of the ptsin field
move.l    (A7)+,(12,A0)
; Restore registers
movem.l   (A7)+,D0-D2/A0-A2
!end_verbatim
(!ende_liste)
!end_node
!end_node


!else


!begin_node Filled polygon
!html_name linea_fillpoly
(!begin_liste) [Beschreibung:]

!item [Name:]
ØFilled polygonÆ

!item [(!nolink [Line-A]) Nummer:]
$A006
!item [Binding:]
(!link [Bindings fÅr filled_polygon] [Bindings fÅr filled_polygon])

!item [Beschreibung:]
Diese Line-A Funktion zeichnet eine Zeile eine ausgefÅllten Polygons durch
Aufrufe der Horizontal line Funktion. Zum Zeichnen des gesamten Polygons
muû diese Funktion fÅr jede mîgliche Y-Koordinate aufgerufen werden.
ZusÑtzlich besteht wie bei Filled rectangle die Mîglichkeit, das Zeichnen
des Rechtecks nur in einem zusÑtzlich Åbergebenen Clip-Bereich zuzulassen.

SÑmtliche Punkte des Polygons werden in dem Feld ptsin Åbergeben, die Anzahl
der Punkte steht im zweiten Element des contrl Feldes. In C steht damit in
contrl[1] die Anzahl Punkte, ptsin[0] die X-Koordinate des ersten Punkts,
ptsin[1] die Y-Koordinate des ersten Punkts, ptsin[2] die X-Koordinate des
zweiten Punkts, ... Der letzte Punkt in ptsin muû wieder der erste Punkt
sein, damit das Polygon geschlossen ist! Die Y-Koordinate der zu zeichnenden
Zeile wird in dem Line-A Parameterblock in y1 Åbergeben.

Die folgenden Line-A Variablen werden benutzt:

!begin_xlist !compressed [xmn_clip]
!item [Variable]
Bedeutung
!item [~]
~
!item [y1]
Y-Koordinate der zu zeichnenden Zeile.
!item [fg_bp_1]
Bitwert der ersten Plane fÅr die Farbe, mit der gefÅllt werden soll.
!item [fg_bp_2]
Bitwert der zweiten Plane (nur niedrige oder mittlere Auflîsung).
!item [fg_bp_3]
Bitwert der dritten Plane (nur niedrige Auflîsung).
!item [fg_bp_4]
Bitwert der vierten Plane (nur niedrige Auflîsung).
!item [patptr]
Zeiger auf ein Feld mit 16 Bit Linienmustern.
!item [patmsk]
Anzahl Linienmuster - 1. In AbhÑngigkeit von der y-Koordinate wird nun aus
dem Feld mit den Linienmustern eines ausgewÑhlt. Der Index des verwendeten
Linienmusters lÑût sich durch (y mod (patmsk + 1)) berechnen. Durch die
Angabe mehrerer Linienmuster und mehrmaliges Aufrufen dieser Funktion fÅr
aufeinanderfolgende Zeilen lassen sich leicht auch komplexe Muster zeichnen.
!item [wrt_mode]
Schreibmodes, es sind die folgenden Modie mîglich:

!begin_xlist [REPLACE 0] !compressed
!item [REPLACE 0]
Replace
!item [TRANS   1]
Transparent (OR)
!item [XOR     2]
Inverse (XOR)
!item [INVERS  3]
Inverse Transparent (XOR mit not(LN_MASK))
!end_xlist

!item [clip]
1 wenn Clipping gewÅnscht wird, 0 sonst.
!item [xmn_clip]
X-Koordinate der linken oberen Ecke des Clipping Bereichs, wenn Clipping
eingeschaltet ist.
!item [ymn_clip]
Y-Koordinate der linken oberen Ecke des Clipping Bereichs, wenn Clipping
eingeschaltet ist.
!item [xmx_clip]
X-Koordinate der rechten unteren Ecke des Clipping Bereichs, wenn Clipping
eingeschaltet ist.
!item [ymx_clip]
Y-Koordinate der rechten unteren Ecke des Clipping Bereichs, wenn Clipping
eingeschaltet ist.
!end_xlist

Das Binding von TC Åbergibt Linienmuster, Schreibmodus und Farbe nicht an
die filled_polygon() Funktion, sondern benutzt separate Funktionen
set_fg_bp(), set_wrt_mode(), set_pattern() und set_clipping() zum Setzen der
Parameter in dem Line-A Parameterblock.

!item [Ergebnis:]
Die Funktion liefert keinen Returnwert.

!item [VerfÅgbar:]
Alle TOS-Versionen.

!item [Querverweis:]
(!link [Binding] [Bindings fÅr filled_polygon]) ~
(!link [Horizontal line][Horizontal line]) ~
(!link [Filled rectangle][Filled rectangle])

(!ende_liste)


!begin_node Bindings fÅr filled_polygon
!ignore_index
(!begin_liste) [Assembler]
!item [Pure-C:]
void filled_polygon( int16_t *xy, int16_t count );
!item [Assembler:]
Es wird angenommen, daû das contrl Feld schon in den Line-A Parameterblock
eingetragen wurde.

!begin_verbatim
; Register retten
movem.l   D0-D2/A0-A2,-(A7)
; Zeiger Parameterblock LINEA
move.l    pParamblk,A0
; contrl nach A1
move.w    (4,A0),A1
; Anzahl Punkte nach contrl[1]
move.w    count,(2,A1)
; alten Wert des ptsin Feldes retten
move.l    (12,A0),-(A7)
; Feld mit Koordinaten der Ecken in LINEA.ptsin
move.l    xy,(12,A0)
; zu zeichnende Zeile, Y-Koordinate in LINEA.y1
move.w    y1,(40,A0)
; Bit fÅr erste Plane in LINEA.fg_bp_1
move.w    colbit0,(24,A0)
; Bit fÅr erste Plane in LINEA.fg_bp_2
move.w    colbit1,(26,A0)
; Bit fÅr erste Plane in LINEA.fg_bp_3
move.w    colbit2,(28,A0)
; Bit fÅr erste Plane in LINEA.fg_bp_4
move.w    colbit3,(30,A0)
; Writemode in LINEA.wrt_mode
move.w    wmode,(36,A0)
; Linienmuster in LINEA.patptr
move.w    patptr,(46,A0)
; Anzahl Muster in LINEA.patmsk
move.w    patmsk,(50,A0)
; Clipmode in LINEA.clip
move.w    mode,(54,A0)
; linke obere Clip-Ecke, X-Koordinate in LINEA.xmn_clip
move.w    cx1,(56,A0)
; linke obere Clip-Ecke, Y-Koordinate in LINEA.ymn_clip
move.w    cy1,(58,A0)
; rechte untere Clip-Ecke, X-Koordinate in LINEA.xmx_clip
move.w    cx2,(60,A0)
; rechte untere Clip-Ecke, Y-Koordinate in LINEA.ymx_clip
move.w    cy2,(62,A0)
; Line-A Opcode
dc.w      $A006
; Zeiger Parameterblock LINEA
move.l    pParamblk,A0
; alten Wert des ptsin Feldes restaurieren
move.l    (A7)+,(12,A0)
; Register restaurieren
movem.l   (A7)+,D0-D2/A0-A2
!end_verbatim
(!ende_liste)
!end_node
!end_node


!endif
