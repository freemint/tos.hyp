!iflang [english]


!begin_node Filled rectangle
!html_name linea_fillrect
(!begin_liste) [Availability]

!item [Name:]
ØFilled rectangleÆ

!item [(!nolink [Line-A]) number:]
$A005

!item [Syntax:]
(!link [See 'Bindings for filled_rect'] [Bindings for filled_rect])

!item [Description:]
This (!nolink [Line-A]) function draws a filled rectangle  through calls
of the (!link [horizontal line][Horizontal line]) function. In addition
there is the option to permit drawing of the rectangle only within a passed
(!link [clipping][Clipping]) region. The following (!nolink [Line-A]) variables
are used:

!begin_xlist !compressed [xmn_clip]
!item [Variable]
Meaning
!item [~]
~
!item [x1]
X-coordinate of the top left corner of the rectangle
!item [y1]
Y-coordinate of the top left corner of the rectangle
!item [x2]
X-coordinate of the bottom right corner of the rectangle
!item [y2]
Y-coordinate of the bottom right corner of the rectangle
!item [fg_bp_1]
Bit value of the first plane for the colour that should be used for filling
!item [fg_bp_2]
Bit value of the second plane (only low or medium resolution)
!item [fg_bp_3]
Bit value of the third plane (only low resolution)
!item [fg_bp_4]
Bit value of the fourth plane (only low resolution)
!item [patptr]
Pointer to a field with 16-bit line patterns
!item [patmsk]
Number of line patterns - 1. Depending on the Y-coordinate, one pattern will
now be chosen from the field of line patterns. The index of the line pattern
used may be calculated with (y mod (patmsk + 1)). By specifying several line
patterns and using multiple calls of this function for consecutive lines, it
is easy to draw complex patterns as well.
!item [wrt_mode]
Writing mode; the following modes are possible:
!begin_xlist [REPLACE 0] !compressed
!item [REPLACE 0]
Replace
!item [TRANS   1]
Transparent (OR)
!item [XOR     2]
Inverse (XOR)
!item [INVERS  3]
Inverse Transparent (XOR with not(LN_MASK))
!end_xlist

!item [clip]
1 if (!link [clipping][Clipping]) is desired, else 0
!item [xmn_clip]
X-coordinate of the top left corner of the (!link [clipping][Clipping]) region,
if clipping is switched on
!item [ymn_clip]
Y-coordinate of the top left corner of the (!link [clipping][Clipping]) region,
if clipping is switched on
!item [xmx_clip]
X-coordinate of the bottom right corner of the (!link [clipping][Clipping])
region, if clipping is switched on
!item [ymx_clip]
Y-coordinate of the bottom right corner of the (!link [clipping][Clipping])
region, if clipping is switched on
!end_xlist

The binding from TC passes the line pattern, (!link [writing mode][Write mode])
and colour not to the filled_rect function, but uses separate functions
set_fg_bp, set_wrt_mode and set_pattern for setting the parameters in
the (!nolink [Line-A]) parameter block.

!item [(!nolink [Return]) value:]
The function does not return a result.

!item [Availability:]
All (!nolink [TOS]) versions.

!item [See also:]
(!link [Binding] [Bindings for filled_rect]) ~
(!link [Horizontal line][Horizontal line])

(!ende_liste)


!begin_node Bindings for filled_rect
!ignore_index
(!begin_liste) [Assembler]
!item [Pure-C:]
void filled_rect( int16_t x1, int16_t y1, int16_t x2, int16_t y2 );
!item [Assembler:]
!begin_verbatim
movem.l   D0-D2/A0-A2,-(A7)  ; Save registers
move.l    pParamblk,A0       ; Pointer parameter block LINEA
move.w    x1,(38,A0)         ; Top left corner, X-coordinate in LINEA.x1
move.w    y1,(40,A0)         ; Top left corner, Y-coordinate in LINEA.y1
move.w    x2,(42,A0)         ; Bottom right corner, X-coordinate in LINEA.x2
move.w    y2,(44,A0)         ; Bottom right corner, Y-coordinate in LINEA.x2
move.w    colbit0,(24,A0)    ; Bit for first plane in LINEA.fg_bp_1
move.w    colbit1,(26,A0)    ; Bit for first plane in LINEA.fg_bp_2
move.w    colbit2,(28,A0)    ; Bit for first plane in LINEA.fg_bp_3
move.w    colbit3,(30,A0)    ; Bit for first plane in LINEA.fg_bp_4
move.w    wmode,(36,A0)      ; Writing mode in LINEA.wrt_mode
move.w    patptr,(46,A0)     ; Line pattern in LINEA.patptr
move.w    patmsk,(50,A0)     ; Number of patterns in LINEA.patmsk
move.w    mode,(54,A0)       ; Clip mode in LINEA.clip
move.w    cx1,(56,A0)        ; Top left clip corner, X-coordinate in LINEA.xmn_clip
move.w    cy1,(58,A0)        ; Top left clip corner, Y-coordinate in LINEA.ymn_clip
move.w    cx2,(60,A0)        ; Bottom right clip corner, X-coordinate in LINEA.xmx_clip
move.w    cy2,(62,A0)        ; Bottom right clip corner, Y-coordinate in LINEA.ymx_clip
dc.w      $A005              ; Line-A opcode
movem.l   (A7)+,D0-D2/A0-A2  ; Restore registers
!end_verbatim
(!ende_liste)
!end_node
!end_node


!else


!begin_node Filled rectangle
!html_name linea_fillrect
(!begin_liste) [Beschreibung:]

!item [Name:]
ØFilled rectangleÆ

!item [(!nolink [Line-A]) Nummer:]
$A005

!item [Binding:]
(!link [Bindings fÅr filled_rect] [Bindings fÅr filled_rect])

!item [Beschreibung:]
Diese Line-A Funktion zeichnet ein ausgefÅlltes Rechteck durch Aufrufe
der Horizontal line Funktion. ZusÑtzlich besteht die Mîglichkeit, das
Zeichnen des Rechtecks nur in einem zusÑtzlich Åbergebenen Clip-Bereich
zuzulassen. Die folgenden Line-A Variablen werden benutzt:

!begin_xlist !compressed [xmn_clip]
!item [Variable]
Bedeutung
!item [~]
~
!item [x1]
X-Koordinate der linken oberen Ecke des Rechtecks.
!item [y1]
Y-Koordinate der linken oberen Ecke des Rechtecks.
!item [x2]
X-Koordinate der rechten unteren Ecke des Rechtecks.
!item [y2]
Y-Koordinate der rechten unteren Ecke des Rechtecks.
!item [fg_bp_1]
Bitwert der ersten Plane fÅr die Farbe, mit der gefÅllt werden soll.
!item [fg_bp_2]
Bitwert der zweiten Plane (nur niedrige oder mittlere Auflîsung).
!item [fg_bp_3]
Bitwert der dritten Plane (nur niedrige Auflîsung).
!item [fg_bp_4]
Bitwert der vierten Plane (nur niedrige Auflîsung).
!item [patptr]
Zeiger auf ein Feld mit 16 Bit Linienmustern.
!item [patmsk]
Anzahl Linienmuster - 1. In AbhÑngigkeit von der y-Koordinate wird nun aus
dem Feld mit den Linienmustern eines ausgewÑhlt. Der Index des verwendeten
Linienmusters lÑût sich durch (y mod (patmsk + 1)) berechnen. Durch die
Angabe mehrerer Linienmuster und mehrmaliges Aufrufen dieser Funktion fÅr
aufeinanderfolgende Zeilen lassen sich leicht auch komplexe Muster zeichnen.
!item [wrt_mode]
Schreibmodes, es sind die folgenden Modie mîglich:

!begin_xlist [REPLACE 0] !compressed
!item [REPLACE 0]
Replace
!item [TRANS   1]
Transparent (OR)
!item [XOR     2]
Inverse (XOR)
!item [INVERS  3]
Inverse Transparent (XOR mit not(LN_MASK))
!end_xlist

!item [clip]
1 wenn Clipping gewÅnscht wird, 0 sonst.
!item [xmn_clip]
X-Koordinate der linken oberen Ecke des Clipping Bereichs, wenn Clipping
eingeschaltet ist.
!item [ymn_clip]
Y-Koordinate der linken oberen Ecke des Clipping Bereichs, wenn Clipping
eingeschaltet ist.
!item [xmx_clip]
X-Koordinate der rechten unteren Ecke des Clipping Bereichs, wenn Clipping
eingeschaltet ist.
!item [ymx_clip]
Y-Koordinate der rechten unteren Ecke des Clipping Bereichs, wenn Clipping
eingeschaltet ist.
!end_xlist

Das Binding von TC Åbergibt Linienmuster, Schreibmodus und Farbe nicht an
die filled_rect() Funktion, sondern benutzt separate Funktionen set_fg_bp(),
set_wrt_mode(), set_pattern() und set_clipping() zum Setzen der Parameter
in dem Line-A Parameterblock.

!item [Ergebnis:]
Die Funktion liefert kein Ergebnis

!item [VerfÅgbar:]
Alle TOS-Versionen.

!item [Querverweis:]
(!link [Binding] [Bindings fÅr filled_rect]) ~
(!link [Horizontal line][Horizontal line])

(!ende_liste)


!begin_node Bindings fÅr filled_rect
!ignore_index
(!begin_liste) [Assembler]
!item [Pure-C:]
void filled_rect( int16_t x1, int16_t y1, int16_t x2, int16_t y2 );
!item [Assembler:]
!begin_verbatim
movem.l   D0-D2/A0-A2,-(A7)  ; Register retten
move.l    pParamblk,A0       ; Zeiger Parameterblock LINEA
move.w    x1,(38,A0)         ; linke obere Ecke, X-Koordinate in LINEA.x1
move.w    y1,(40,A0)         ; linke obere Ecke, Y-Koordinate in LINEA.y1
move.w    x2,(42,A0)         ; rechte untere Ecke, X-Koordinate in LINEA.x2
move.w    y2,(44,A0)         ; rechte untere Ecke, Y-Koordinate in LINEA.x2
move.w    colbit0,(24,A0)    ; Bit fÅr erste Plane in LINEA.fg_bp_1
move.w    colbit1,(26,A0)    ; Bit fÅr erste Plane in LINEA.fg_bp_2
move.w    colbit2,(28,A0)    ; Bit fÅr erste Plane in LINEA.fg_bp_3
move.w    colbit3,(30,A0)    ; Bit fÅr erste Plane in LINEA.fg_bp_4
move.w    wmode,(36,A0)      ; Writemode in LINEA.wrt_mode
move.w    patptr,(46,A0)     ; Linienmuster in LINEA.patptr
move.w    patmsk,(50,A0)     ; Anzahl Muster in LINEA.patmsk
move.w    mode,(54,A0)       ; Clipmode in LINEA.clip
move.w    cx1,(56,A0)        ; linke obere Clip-Ecke, X-Koordinate in LINEA.xmn_clip
move.w    cy1,(58,A0)        ; linke obere Clip-Ecke, Y-Koordinate in LINEA.ymn_clip
move.w    cx2,(60,A0)        ; rechte untere Clip-Ecke, X-Koordinate in LINEA.xmx_clip
move.w    cy2,(62,A0)        ; rechte untere Clip-Ecke, Y-Koordinate in LINEA.ymx_clip
dc.w      $A005              ; Line-A Opcode
movem.l   (A7)+,D0-D2/A0-A2  ; Register restaurieren
!end_verbatim
(!ende_liste)
!end_node
!end_node


!endif
