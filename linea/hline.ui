!iflang [english]


!begin_node Horizontal line
!html_name linea_hline
(!begin_liste) [Availability]

!item [Name:]
ØHorizontal lineÆ

!item [(!nolink [Line-A]) number:]
$A004

!item [Syntax:]
(!link [See 'Bindings for horizontal_line'] [Bindings for horizontal_line])

!item [Description:]
This (!nolink [Line-A]) function draws a horizontal line. The following
(!nolink [Line-A]) variables are used:

!begin_xlist !compressed [multifill]
!item [Variable]
Meaning
!item [~]
~
!item [x1]
X-coordinate of the first end-point
!item [y1]
Y-coordinate of the line
!item [x2]
X-coordinate of the second end-point
!item [fg_bp_1]
Bit value of the first plane for the colour that should be used for filling
!item [fg_bp_2]
Bit value of the second plane (only low or medium resolution)
!item [fg_bp_3]
Bit value of the third plane (only low resolution)
!item [fg_bp_4]
Bit value of the fourth plane (only low resolution)
!item [patptr]
Pointer to a field with 16-bit line patterns
!item [patmsk]
Number of line patterns - 1. Depending on the Y-coordinate, one pattern will
now be chosen from the field of line patterns. The index of the line pattern
used may be calculated with (y mod (patmsk + 1)). By specifying several line
patterns and using multiple calls of this function for consecutive lines, it
is easy to draw complex patterns as well.
!item [wrt_mode]
Writing mode; the following modes are possible:
!begin_xlist [REPLACE 0] !compressed
!item [REPLACE 0]
Replace
!item [TRANS   1]
Transparent (OR)
!item [XOR     2]
Inverse (XOR)
!item [INVERS  3]
Inverse Transparent (XOR with not(LN_MASK))
!end_xlist

!item [multifill]
0 specifies that only the first colour plane is to be drawn, a value >0 that
all colour planes are to be drawn
!end_xlist

(!B)Note:(!b) This function is used internally for the area fill routines.

The binding from TC passes the line pattern, (!link [writing mode][Write mode])
and colour not to the horizontal_line function, but uses separate functions
set_fg_bp, set_wrt_mode and set_pattern for setting the parameters in
the (!nolink [Line-A]) parameter block.

!item [(!nolink [Return]) value:]
The function does not return a result.

!item [Availability:]
All (!nolink [TOS]) versions.

!item [See also:]
(!link [Binding] [Bindings for horizontal_line]) ~
(!link [LINEA][LINEA]) ~ (!link [Filled rectangle][Filled rectangle])

(!ende_liste)


!begin_node Bindings for horizontal_line
!ignore_index
(!begin_liste) [Assembler]
!item [Pure-C:]
void horizontal_line( int16_t x1, int16_t y1, int16_t x2 );
!item [Assembler:]
!begin_verbatim
movem.l   D0-D2/A0-A2,-(A7)  ; Save registers
move.l    pParamblk,A0       ; Pointer parameter block LINEA
move.w    x1,(38,A0)         ; First X-coordinate in LINEA.x1
move.w    y1,(40,A0)         ; First Y-coordinate in LINEA.y1
move.w    x2,(42,A0)         ; Second X-coordinate in LINEA.x2
move.w    colbit0,(24,A0)    ; Bit for first plane in LINEA.fg_bp_1
move.w    colbit1,(26,A0)    ; Bit for first plane in LINEA.fg_bp_2
move.w    colbit2,(28,A0)    ; Bit for first plane in LINEA.fg_bp_3
move.w    colbit3,(30,A0)    ; Bit for first plane in LINEA.fg_bp_4
move.w    wmode,(36,A0)      ; Writing mode in LINEA.wrt_mode
move.w    patptr,(46,A0)     ; Line pattern in LINEA.patptr
move.w    patmsk,(50,A0)     ; Number patterns in LINEA.patmsk
move.w    mfill,(52,A0)      ; Writing mode in LINEA.multifill
dc.w      $A004              ; Line-A opcode
movem.l   (A7)+,D0-D2/A0-A2  ; Restore registers
!end_verbatim
(!ende_liste)
!end_node
!end_node


!else


!begin_node Horizontal line
!html_name linea_hline
(!begin_liste) [Beschreibung:]

!item [Name:]
ØHorizontal lineÆ

!item [(!nolink [Line-A]) Nummer:]
$A004

!item [Binding:]
(!link [Bindings fÅr horizontal_line] [Bindings fÅr horizontal_line])

!item [Beschreibung:]
Diese Line-A Funktion zeichnet eine horizontale Line. Die folgenden Line-A
Variablen werden benutzt:

!begin_xlist !compressed [multifill]
!item [Variable]
Bedeutung
!item [~]
~
!item [x1]
X-Koordinate des ersten Endpunkts.
!item [y1]
Y-Koordinate der Linie.
!item [x2]
X-Koordinate des zweiten Endpunkts.
!item [fg_bp_1]
Bitwert der ersten Plane fÅr die Farbe, mit der gefÅllt werden soll.
!item [fg_bp_2]
Bitwert der zweiten Plane (nur niedrige oder mittlere Auflîsung).
!item [fg_bp_3]
Bitwert der dritten Plane (nur niedrige Auflîsung).
!item [fg_bp_4]
Bitwert der vierten Plane (nur niedrige Auflîsung).
!item [patptr]
Zeiger auf ein Feld mit 16 Bit Linienmustern.
!item [patmsk]
Anzahl Linienmuster - 1. In AbhÑngigkeit von der y-Koordinate wird nun aus
dem Feld mit den Linienmustern eines ausgewÑhlt. Der Index des verwendeten
Linienmusters lÑût sich durch (y mod (patmsk + 1)) berechnen. Durch die
Angabe mehrerer Linienmuster und mehrmaliges Aufrufen dieser Funktion fÅr
aufeinanderfolgende Zeilen lassen sich leicht auch komplexe Muster zeichnen.
!item [wrt_mode]
Schreibmodes, es sind die folgenden Modie mîglich:

!begin_xlist [REPLACE 0] !compressed
!item [REPLACE 0]
Replace
!item [TRANS   1]
Transparent (OR)
!item [XOR     2]
Inverse (XOR)
!item [INVERS  3]
Inverse Transparent (XOR mit not(LN_MASK))
!end_xlist

!item [multifill]
0 gibt an, das nur die erste Farbebene gezeichnet werden soll, ein Wert
>0 daû alle Farbebenen gezeichnet werden sollen.
!end_xlist

(!B)Hinweis:(!b) Diese Funktion wird intern fÅr die FlÑchenfÅllroutinen
benutzt.

Das Binding von TC Åbergibt Linienmuster, Schreibmodus und Farbe nicht an
die horizontal_line Funktion, sondern benutzt separate Funktionen
set_fg_bp(), set_wrt_mode() und set_pattern() zum Setzen der Parameter in
dem Line-A Parameterblock.

!item [Ergebnis:]
Die Funktion liefert kein Ergebnis.

!item [VerfÅgbar:]
Alle TOS-Versionen.

!item [Querverweis:]
(!link [Binding] [Bindings fÅr horizontal_line]) ~
(!link [LINEA][LINEA]) ~ (!link [Filled rectangle][Filled rectangle])

(!ende_liste)


!begin_node Bindings fÅr horizontal_line
!ignore_index
(!begin_liste) [Assembler]
!item [Pure-C:]
void horizontal_line( int16_t x1, int16_t y1, int16_t x2 );
!item [Assembler:]
!begin_verbatim
movem.l   D0-D2/A0-A2,-(A7)  ; Register retten
move.l    pParamblk,A0       ; Zeiger Parameterblock LINEA
move.w    x1,(38,A0)         ; erste X-Koordinate in LINEA.x1
move.w    y1,(40,A0)         ; erste Y-Koordinate in LINEA.y1
move.w    x2,(42,A0)         ; zweite X-Koordinate in LINEA.x2
move.w    colbit0,(24,A0)    ; Bit fÅr erste Plane in LINEA.fg_bp_1
move.w    colbit1,(26,A0)    ; Bit fÅr erste Plane in LINEA.fg_bp_2
move.w    colbit2,(28,A0)    ; Bit fÅr erste Plane in LINEA.fg_bp_3
move.w    colbit3,(30,A0)    ; Bit fÅr erste Plane in LINEA.fg_bp_4
move.w    wmode,(36,A0)      ; Writemode in LINEA.wrt_mode
move.w    patptr,(44,A0)     ; Linienmuster in LINEA.patptr
move.w    patmsk,(48,A0)     ; Anzahl Muster in LINEA.patmsk
move.w    mfill,(52,A0)      ; Writemode in LINEA.multifill
dc.w      $A004              ; Line-A Opcode
movem.l   (A7)+,D0-D2/A0-A2  ; Register restaurieren
!end_verbatim
(!ende_liste)
!end_node
!end_node


!endif
