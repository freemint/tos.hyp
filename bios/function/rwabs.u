!iflang [english]

!begin_node Rwabs
(!begin_liste) [Availability]
!item [Name:]
Read/write absolute
!item [Opcode:]
4
!item [Syntax:]
int32_t Rwabs ( int16_t rwflag, VOID *buff, int16_t cnt,
             int16_t recnr, int16_t dev, int32_t lrecno );
!item [Description:]
The (!nolink [BIOS]) routine Rwabs reads or writes data directly  
resp. from or to the drive that was specified with (!I)dev(!i). 
The parameter (!I)rwflag(!i) is a bit-vector that specifies  
the type of operation. Valid are:
!begin_xlist [rwflag-bit]
!item [(!I)rwflag-bit(!i)]
Meaning
!item [0]
0 = Read
(!nl)
1 = Write
!item [1]
0 = Pay regard to media change
(!nl)
1 = Do not read of affect media-change status
!item [2]
0 = In case of error, start a retry 
(!nl)
1 = Do not start a retry
(!nl)
For this, a hard disk driver that is compatible with AHDI 3.0 is required.
!item [3]
0 = Normal mode
(!nl)
1 = Physical mode (1)
(!nl)
For this, a hard disk driver that is compatible with AHDI 3.0 is required.
!end_xlist
(!I)cnt(!i) characters from buffer (!I)buff(!i) will be transferred
In (!I)recnr(!i) the starting sector on the drive will be specified.
(!I)lrecno(!i) will be used only if (!I)recnr(!i) has the value -1, 
and an AHDI 3.0-compatible
(!link [hard disk driver][XHDI - eXtended HardDisk Interface (Version 1.30!)])
is available.

!item [Return value:]
The function returns 0 if the access was successful, otherwise a negative
number.

!item [Availability:] All (!nolink [TOS]) versions.

!item [See also:]    (!link [Binding] [Bindings for Rwabs])

(!ende_liste)


!begin_node Bindings for Rwabs
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
int32_t Rwabs ( int16_t rwflag, VOID *buff, int16_t cnt,
             int16_t recnr, int16_t dev, int32_t lrecno );
!item [Assembler:]
!begin_verbatim
move.l    lrecno,-(sp)  ; Offset 14
move.w    dev,-(sp)     ; Offset 12
move.w    recnr,-(sp)   ; Offset 10
move.w    cnt,-(sp)     ; Offset  8
pea       buff          ; Offset  4
move.w    rwflag,-(sp)  ; Offset  2
move.w    #4,-(sp)      ; Offset  0
trap      #13           ; Call BIOS
lea       $12(sp),sp    ; Correct stack
!end_verbatim

!item [GFA-Basic:]
Fehler%=Bios(4,W:rwflag%,L:buff%,W:cnt%,W:recnr%,W:dev%,L:lrecno%)

(!ende_liste)

!end_node
!end_node

!else


!begin_node Rwabs
(!begin_liste) [Beschreibung]
!item [Name:]
Øread write absoluteÆ - direkter Lese-/Schreibzugriff auf ein Laufwerk.
!item [Biosnummer:]
4
!item [Deklaration:]
int32_t Rwabs ( int16_t rwflag, VOID *buff, int16_t cnt,
             int16_t recnr, int16_t dev, int32_t lrecno );
!item [Beschreibung:]
Die (!nolink [BIOS])-Routine Rwabs liest oder schreibt Daten direkt vom bzw. auf das
Laufwerk, das mit (!I)dev(!i) angegeben wurde. Der Parameter (!I)rwflag(!i)
ist ein Bitvektor, der die Art der Operation festlegt. Es gilt:
!begin_xlist [rwflag-Bit]
!item [(!I)rwflag-Bit(!i)]
Bedeutung
!item [0]
0 = Lesen
(!nl)
1 = Schreiben
!item [1]
0 = Medienwechsel beachten
(!nl)
1 = Medienwechsel ignorieren
!item [2]
0 = Im Fehlerfall eine Wiederholung starten
(!nl)
1 = keine Wiederholung starten.
(!nl)
Hierzu ist ein Festplattentreiber notwendig, der zu AHDI 3.0 kompatibel ist.
!item [3]
0 = Normalmodus
(!nl)
1 = physikalischer Modus (1)
(!nl)
Hierzu ist ein Festplattentreiber notwendig, der zu AHDI 3.0 kompatibel ist.
!end_xlist
Es werden (!I)cnt(!i) Zeichen vom Puffer (!I)buff(!i) Åbertragen. In recnr
wird der Startsektor auf dem Laufwerk angegeben. (!I)lrecno(!i) wird nur
benutzt, wenn (!I)recnr(!i) den Wert -1 besitzt, und ein AHDI!-3.0
kompatibler (!link [Festplattentreiber][XHDI - eXtended HardDisk Interface (Version 1.30!)]) zur VerfÅgung steht.
!item [Ergebnis:]
Die Funktion liefert als Ergebnis eine 0, wenn der Zugriff erfolgreich war,
ansonsten eine negative Zahl.

!item [VerfÅgbar:] In allen (!nolink [TOS]) Versionen.

!item [Querverweis:]    (!link [Binding] [Bindings fÅr Rwabs])

(!ende_liste)


!begin_node Bindings fÅr Rwabs
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
int32_t Rwabs ( int16_t rwflag, VOID *buff, int16_t cnt,
             int16_t recnr, int16_t dev, int32_t lrecno );
!item [Assembler:]
!begin_verbatim
move.l    lrecno,-(sp)  ; Offset 14
move.w    dev,-(sp)     ; Offset 12
move.w    recnr,-(sp)   ; Offset 10
move.w    cnt,-(sp)     ; Offset  8
pea       buff          ; Offset  4
move.w    rwflag,-(sp)  ; Offset  2
move.w    #4,-(sp)      ; Offset  0
trap      #13           ; BIOS aufrufen
lea       $12(sp),sp    ; Stack korrigieren
!end_verbatim

!item [GFA-Basic:]
Fehler%=Bios(4,W:rwflag%,L:buff%,W:cnt%,W:recnr%,W:dev%,L:lrecno%)

(!ende_liste)
!end_node
!end_node

!endif
