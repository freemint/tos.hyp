!begin_node Cookie jar
!html_name bios_cookiejar

The cookie jar was introduced with (!nolink [TOS]) 1.06 and represents a
generalisation of the (!link [system variables][The system variables]). One is dealing here with
a table of individual cookies that are defined as follows:

!begin_verbatim
typedef struct
{
    BYTE cookie_id[4];   /* Identification code */
    LONG cookie_value;   /* Value of the cookie */
} COOKIE;
!end_verbatim

To be able to work with or use cookies, one first inspects the
contents of the system variables (!I)(!nolink [_p_cookies])(!i) (0x5a0L). If one finds
a NULL-pointer there, it means that no cookie jar has been (!nolink [installed])
in memory as yet. When using the MiNT-libs of GCC, one should use the
functions made available there!

Any other value is a pointer to a table of pairs of 32-bit values
(the so-called cookie jar) which may be used for a targeted search
of the jar for given cookies.

!label Cookie name, Choice of
(!B)When choosing a cookie name it is imperative to pay attention to
the following points:(!b)
!begin_itemize !compressed
!item Identifiers starting with '_' are reserved for Atari
!item The cookie-ID should consist of four (!link [ASCII characters][ASCII table])
!item It should be possible to determine from the cookie-ID which program
      created it
!end_itemize

!label Cookie jar, End of
!label Cookie jar, Size of
!label Cookie, Null-
!label NULL-cookie
The end of the cookie jar is identified by a (!I)NULL-cookie(!i) (Hex:
0x00000000), whose value contains the maximum number of entries
in the jar.

!label Cookie, Placing of a
(!B)To place a cookie(!b), one searches via _p_cookies for the NULL-cookie
and checks whether there is still room for another entry. If that is
the case, the new cookie is placed at the position of the NULL-cookie,
which in turn is moved back by one position. Otherwise one has to
allocate memory for a larger table, copy the old cookie jar there and
adapt the system variable (!I)(!nolink [_p_cookies])(!i) accordingly.

!label Cookie, Deleting a
(!B)To delete a cookie(!b), one first must search for it, and then copy
all following cookies (including the NULL-cookie) by one position
forward.

!label Cookie list
To prevent duplication of the cookie-IDs, Julian Reschke administers
a list in which all officially notified IDs are entered.

(!B)Tip:(!b) Source texts for the most important functions for working with
the cookie jar can be found in various mailboxes, and can also be
found in the (!I)ST-Computer(!i) magazine (issues 12/1990, 01/1991).

See also: Cookie and XBRA list ~ BIOS ~ Sample code

!include bios/cookie/example_en.ui

!begin_node Cookie and XBRA list

!include bios/cookie/list.ui

!end_node

!end_node
